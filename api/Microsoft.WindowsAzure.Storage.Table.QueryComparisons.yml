items:
- uid: Microsoft.WindowsAzure.Storage.Table.QueryComparisons
  commentId: T:Microsoft.WindowsAzure.Storage.Table.QueryComparisons
  id: QueryComparisons
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.QueryComparisons.Equal
  - Microsoft.WindowsAzure.Storage.Table.QueryComparisons.GreaterThan
  - Microsoft.WindowsAzure.Storage.Table.QueryComparisons.GreaterThanOrEqual
  - Microsoft.WindowsAzure.Storage.Table.QueryComparisons.LessThan
  - Microsoft.WindowsAzure.Storage.Table.QueryComparisons.LessThanOrEqual
  - Microsoft.WindowsAzure.Storage.Table.QueryComparisons.NotEqual
  langs:
  - csharp
  - vb
  name: QueryComparisons
  fullName: Microsoft.WindowsAzure.Storage.Table.QueryComparisons
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Table/QueryComparisons.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueryComparisons
    path: src/Storage/Lib/Common/Table/QueryComparisons.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nDefines the set of comparison operators that may be used for constructing queries.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("StyleCop.CSharp.NamingRules", "SA1307:AccessibleFieldsMustBeginWithUpperCaseLetter", Justification = "Due to Javascript projection limitations.")]

      [SuppressMessage("StyleCop.CSharp.NamingRules", "SA1303:ConstFieldNamesMustBeginWithUpperCaseLetter", Justification = "Due to Javascript projection limitations..")]

      public class QueryComparisons
    content.vb: >-
      <SuppressMessage("StyleCop.CSharp.NamingRules", "SA1307:AccessibleFieldsMustBeginWithUpperCaseLetter", Justification:="Due to Javascript projection limitations.")>

      <SuppressMessage("StyleCop.CSharp.NamingRules", "SA1303:ConstFieldNamesMustBeginWithUpperCaseLetter", Justification:="Due to Javascript projection limitations..")>

      Public Class QueryComparisons
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: StyleCop.CSharp.NamingRules
    - type: System.String
      value: SA1307:AccessibleFieldsMustBeginWithUpperCaseLetter
    namedArguments:
    - name: Justification
      type: System.String
      value: Due to Javascript projection limitations.
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: StyleCop.CSharp.NamingRules
    - type: System.String
      value: SA1303:ConstFieldNamesMustBeginWithUpperCaseLetter
    namedArguments:
    - name: Justification
      type: System.String
      value: Due to Javascript projection limitations..
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.Equal
  commentId: F:Microsoft.WindowsAzure.Storage.Table.QueryComparisons.Equal
  id: Equal
  parent: Microsoft.WindowsAzure.Storage.Table.QueryComparisons
  langs:
  - csharp
  - vb
  name: Equal
  fullName: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.Equal
  type: Field
  source:
    remote:
      path: src/Storage/Lib/Common/Table/QueryComparisons.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Equal
    path: src/Storage/Lib/Common/Table/QueryComparisons.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nRepresents the Equal operator.\r\n"
  example: []
  syntax:
    content: public const string Equal = "eq"
    content.vb: Public Const Equal As String = "eq"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.NotEqual
  commentId: F:Microsoft.WindowsAzure.Storage.Table.QueryComparisons.NotEqual
  id: NotEqual
  parent: Microsoft.WindowsAzure.Storage.Table.QueryComparisons
  langs:
  - csharp
  - vb
  name: NotEqual
  fullName: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.NotEqual
  type: Field
  source:
    remote:
      path: src/Storage/Lib/Common/Table/QueryComparisons.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NotEqual
    path: src/Storage/Lib/Common/Table/QueryComparisons.cs
    startLine: 74
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nRepresents the Not Equal operator.\r\n"
  example: []
  syntax:
    content: public const string NotEqual = "ne"
    content.vb: Public Const NotEqual As String = "ne"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.GreaterThan
  commentId: F:Microsoft.WindowsAzure.Storage.Table.QueryComparisons.GreaterThan
  id: GreaterThan
  parent: Microsoft.WindowsAzure.Storage.Table.QueryComparisons
  langs:
  - csharp
  - vb
  name: GreaterThan
  fullName: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.GreaterThan
  type: Field
  source:
    remote:
      path: src/Storage/Lib/Common/Table/QueryComparisons.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GreaterThan
    path: src/Storage/Lib/Common/Table/QueryComparisons.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nRepresents the Greater Than operator.\r\n"
  example: []
  syntax:
    content: public const string GreaterThan = "gt"
    content.vb: Public Const GreaterThan As String = "gt"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.GreaterThanOrEqual
  commentId: F:Microsoft.WindowsAzure.Storage.Table.QueryComparisons.GreaterThanOrEqual
  id: GreaterThanOrEqual
  parent: Microsoft.WindowsAzure.Storage.Table.QueryComparisons
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual
  fullName: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.GreaterThanOrEqual
  type: Field
  source:
    remote:
      path: src/Storage/Lib/Common/Table/QueryComparisons.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GreaterThanOrEqual
    path: src/Storage/Lib/Common/Table/QueryComparisons.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nRepresents the Greater Than or Equal operator.\r\n"
  example: []
  syntax:
    content: public const string GreaterThanOrEqual = "ge"
    content.vb: Public Const GreaterThanOrEqual As String = "ge"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.LessThan
  commentId: F:Microsoft.WindowsAzure.Storage.Table.QueryComparisons.LessThan
  id: LessThan
  parent: Microsoft.WindowsAzure.Storage.Table.QueryComparisons
  langs:
  - csharp
  - vb
  name: LessThan
  fullName: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.LessThan
  type: Field
  source:
    remote:
      path: src/Storage/Lib/Common/Table/QueryComparisons.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LessThan
    path: src/Storage/Lib/Common/Table/QueryComparisons.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nRepresents the Less Than operator.\r\n"
  example: []
  syntax:
    content: public const string LessThan = "lt"
    content.vb: Public Const LessThan As String = "lt"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.LessThanOrEqual
  commentId: F:Microsoft.WindowsAzure.Storage.Table.QueryComparisons.LessThanOrEqual
  id: LessThanOrEqual
  parent: Microsoft.WindowsAzure.Storage.Table.QueryComparisons
  langs:
  - csharp
  - vb
  name: LessThanOrEqual
  fullName: Microsoft.WindowsAzure.Storage.Table.QueryComparisons.LessThanOrEqual
  type: Field
  source:
    remote:
      path: src/Storage/Lib/Common/Table/QueryComparisons.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LessThanOrEqual
    path: src/Storage/Lib/Common/Table/QueryComparisons.cs
    startLine: 94
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nRepresents the Less Than or Equal operator.\r\n"
  example: []
  syntax:
    content: public const string LessThanOrEqual = "le"
    content.vb: Public Const LessThanOrEqual As String = "le"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
