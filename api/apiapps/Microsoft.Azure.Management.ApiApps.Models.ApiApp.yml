items:
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  commentId: T:Microsoft.Azure.Management.ApiApps.Models.ApiApp
  id: ApiApp
  parent: Microsoft.Azure.Management.ApiApps.Models
  children:
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.#ctor
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.AccessLevel
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Api
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Authentication
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Dependencies
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Gateway
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Host
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Id
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Location
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Name
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Package
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Status
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.Tags
  - Microsoft.Azure.Management.ApiApps.Models.ApiApp.UpdatePolicy
  langs:
  - csharp
  - vb
  name: ApiApp
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ApiApp
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  syntax:
    content: public class ApiApp
    content.vb: Public Class ApiApp
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.AccessLevel
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.AccessLevel
  id: AccessLevel
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: AccessLevel
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.AccessLevel
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AccessLevel
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets access level\r\n"
  example: []
  syntax:
    content: >-
      public string AccessLevel

      {

          get;

          set;

      }
    content.vb: Public Property AccessLevel As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Api
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Api
  id: Api
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Api
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Api
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Api
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets api\r\n"
  example: []
  syntax:
    content: >-
      public MicroserviceApi Api

      {

          get;

          set;

      }
    content.vb: Public Property Api As MicroserviceApi
    parameters: []
    return:
      type: Microsoft.Azure.Management.ApiApps.Models.MicroserviceApi
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Authentication
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Authentication
  id: Authentication
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Authentication
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Authentication
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Authentication
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets authentication\r\n"
  example: []
  syntax:
    content: >-
      public MicroserviceAuthentication Authentication

      {

          get;

          set;

      }
    content.vb: Public Property Authentication As MicroserviceAuthentication
    parameters: []
    return:
      type: Microsoft.Azure.Management.ApiApps.Models.MicroserviceAuthentication
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Dependencies
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Dependencies
  id: Dependencies
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Dependencies
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Dependencies
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Dependencies
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets dependencies\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> Dependencies

      {

          get;

          set;

      }
    content.vb: Public Property Dependencies As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Gateway
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Gateway
  id: Gateway
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Gateway
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Gateway
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Gateway
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets gateway\r\n"
  example: []
  syntax:
    content: >-
      public ResourceReference Gateway

      {

          get;

          set;

      }
    content.vb: Public Property Gateway As ResourceReference
    parameters: []
    return:
      type: Microsoft.Azure.Management.ApiApps.Models.ResourceReference
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Host
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Host
  id: Host
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Host
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Host
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Host
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets host\r\n"
  example: []
  syntax:
    content: >-
      public ResourceReference Host

      {

          get;

          set;

      }
    content.vb: Public Property Host As ResourceReference
    parameters: []
    return:
      type: Microsoft.Azure.Management.ApiApps.Models.ResourceReference
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Id
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Id
  id: Id
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Id
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Id
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets id\r\n"
  example: []
  syntax:
    content: >-
      public string Id

      {

          get;

          set;

      }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Location
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Location
  id: Location
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Location
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Location
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Location
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets location\r\n"
  example: []
  syntax:
    content: >-
      public string Location

      {

          get;

          set;

      }
    content.vb: Public Property Location As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Name
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Name
  id: Name
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Name
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets name\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Package
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Package
  id: Package
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Package
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Package
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Package
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets package\r\n"
  example: []
  syntax:
    content: >-
      public MicroservicePackage Package

      {

          get;

          set;

      }
    content.vb: Public Property Package As MicroservicePackage
    parameters: []
    return:
      type: Microsoft.Azure.Management.ApiApps.Models.MicroservicePackage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Status
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Status
  id: Status
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Status
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Status
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Status
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 146
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets status\r\n"
  example: []
  syntax:
    content: >-
      public IList<StatusCheckEntry> Status

      {

          get;

          set;

      }
    content.vb: Public Property Status As IList(Of StatusCheckEntry)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.ApiApps.Models.StatusCheckEntry}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Tags
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.Tags
  id: Tags
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: Tags
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.Tags
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Tags
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets tags\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> Tags

      {

          get;

          set;

      }
    content.vb: Public Property Tags As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.UpdatePolicy
  commentId: P:Microsoft.Azure.Management.ApiApps.Models.ApiApp.UpdatePolicy
  id: UpdatePolicy
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: UpdatePolicy
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.UpdatePolicy
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdatePolicy
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 168
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nOptional. Gets or sets update policy\r\n"
  example: []
  syntax:
    content: >-
      public string UpdatePolicy

      {

          get;

          set;

      }
    content.vb: Public Property UpdatePolicy As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiApps.Models.ApiApp.#ctor
  commentId: M:Microsoft.Azure.Management.ApiApps.Models.ApiApp.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ApiApps.Models.ApiApp
  langs:
  - csharp
  - vb
  name: ApiApp()
  fullName: Microsoft.Azure.Management.ApiApps.Models.ApiApp.ApiApp()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/ApiApp/ApiAppManagement/Generated/Models/ApiApp.cs
    startLine: 177
  assemblies:
  - Microsoft.Azure.Management.ApiApps
  namespace: Microsoft.Azure.Management.ApiApps.Models
  summary: "\r\nInitializes a new instance of the ApiApp class.\r\n"
  example: []
  syntax:
    content: public ApiApp()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ApiApps.Models
  isExternal: false
  name: Microsoft.Azure.Management.ApiApps.Models
  fullName: Microsoft.Azure.Management.ApiApps.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.ApiApps.Models.MicroserviceApi
  parent: Microsoft.Azure.Management.ApiApps.Models
  isExternal: false
  name: MicroserviceApi
  fullName: Microsoft.Azure.Management.ApiApps.Models.MicroserviceApi
- uid: Microsoft.Azure.Management.ApiApps.Models.MicroserviceAuthentication
  parent: Microsoft.Azure.Management.ApiApps.Models
  isExternal: false
  name: MicroserviceAuthentication
  fullName: Microsoft.Azure.Management.ApiApps.Models.MicroserviceAuthentication
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.ApiApps.Models.ResourceReference
  parent: Microsoft.Azure.Management.ApiApps.Models
  isExternal: false
  name: ResourceReference
  fullName: Microsoft.Azure.Management.ApiApps.Models.ResourceReference
- uid: Microsoft.Azure.Management.ApiApps.Models.MicroservicePackage
  parent: Microsoft.Azure.Management.ApiApps.Models
  isExternal: false
  name: MicroservicePackage
  fullName: Microsoft.Azure.Management.ApiApps.Models.MicroservicePackage
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.ApiApps.Models.StatusCheckEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<StatusCheckEntry>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.ApiApps.Models.StatusCheckEntry>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.ApiApps.Models.StatusCheckEntry)
  name.vb: IList(Of StatusCheckEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.ApiApps.Models.StatusCheckEntry
    name: StatusCheckEntry
    fullName: Microsoft.Azure.Management.ApiApps.Models.StatusCheckEntry
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ApiApps.Models.StatusCheckEntry
    name: StatusCheckEntry
    fullName: Microsoft.Azure.Management.ApiApps.Models.StatusCheckEntry
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
