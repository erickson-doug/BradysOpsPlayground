items:
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  id: TableServiceQuery`1
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  children:
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.#ctor(System.Linq.IQueryable{`0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Context
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ElementType
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.EndExecuteSegmented(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expand(System.String)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expression
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.GetEnumerator
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Provider
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: TableServiceQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>
  type: Class
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TableServiceQuery
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nA class for constructing a query against the Table service.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix", Justification = "Reviewed")]

      public class TableServiceQuery<TElement> : IQueryable<TElement>, IEnumerable<TElement>, IQueryable, IEnumerable
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      <SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix", Justification:="Reviewed")>

      Public Class TableServiceQuery(Of TElement)
          Implements IQueryable(Of TElement), IEnumerable(Of TElement), IQueryable, IEnumerable
    typeParameters:
    - id: TElement
      description: The type of the element.
  inheritance:
  - System.Object
  implements:
  - System.Linq.IQueryable{{TElement}}
  - System.Collections.Generic.IEnumerable{{TElement}}
  - System.Linq.IQueryable
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1710:IdentifiersShouldHaveCorrectSuffix
    namedArguments:
    - name: Justification
      type: System.String
      value: Reviewed
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement)
  name.vb: TableServiceQuery(Of TElement)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.#ctor(System.Linq.IQueryable{`0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.#ctor(System.Linq.IQueryable{`0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  id: '#ctor(System.Linq.IQueryable{`0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)'
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: TableServiceQuery(IQueryable<TElement>, TableServiceContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.TableServiceQuery(System.Linq.IQueryable<TElement>, Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  type: Constructor
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public TableServiceQuery(IQueryable<TElement> query, TableServiceContext context)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Sub New(query As IQueryable(Of TElement), context As TableServiceContext)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TElement}}
      description: An object that implements <xref href="System.Linq.IQueryable" data-throw-if-not-resolved="false"></xref>.
    - id: context
      type: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext" data-throw-if-not-resolved="false"></xref> object.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).TableServiceQuery(System.Linq.IQueryable(Of TElement), Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  name.vb: TableServiceQuery(IQueryable(Of TElement), TableServiceContext)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Context
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Context
  id: Context
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: Context
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Context
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Context
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nGets the Table service context.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public TableServiceContext Context

      {
          get;
      }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public ReadOnly Property Context As TableServiceContext
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
      description: "\r\nAn object of type <xref href=\"Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Context
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ElementType
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ElementType
  id: ElementType
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ElementType
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ElementType
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ElementType
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nGets the type of the element(s) that are returned when the expression tree associated with this \r\ninstance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> is executed.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Type ElementType

      {
          get;
      }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public ReadOnly Property ElementType As Type
    parameters: []
    return:
      type: System.Type
      description: "\r\nA <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the type of the element(s) that are returned when the expression tree associated with this object is executed.\r\n"
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ElementType
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expression
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expression
  id: Expression
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: Expression
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Expression
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Expression
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nGets the expression tree that is associated with the instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Expression Expression

      {
          get;
      }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public ReadOnly Property Expression As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "\r\nThe <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Expression
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Provider
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Provider
  id: Provider
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: Provider
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Provider
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Provider
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nGets the query provider that is associated with this data source.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public IQueryProvider Provider

      {
          get;
      }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public ReadOnly Property Provider As IQueryProvider
    parameters: []
    return:
      type: System.Linq.IQueryProvider
      description: "\r\nThe <xref href=\"System.Linq.IQueryProvider\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this data source.\r\n"
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Provider
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expand(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expand(System.String)
  id: Expand(System.String)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: Expand(String)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Expand(System.String)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Expand
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nExpands the specified path.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public TableServiceQuery<TElement> Expand(string path)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function Expand(path As String) As TableServiceQuery(Of TElement)
    parameters:
    - id: path
      type: System.String
      description: The path to expand.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
      description: A new query with the expanded path.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Expand(System.String)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.GetEnumerator
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetEnumerator
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 126
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nReturns an enumerator that iterates through the collection.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public IEnumerator<TElement> GetEnumerator()
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function GetEnumerator As IEnumerator(Of TElement)
    return:
      type: System.Collections.Generic.IEnumerator{{TElement}}
      description: "\r\nA <xref href=\"System.Collections.Generic.IEnumerator`1\" data-throw-if-not-resolved=\"false\"></xref> that can be used to iterate through the collection.\r\n"
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).GetEnumerator()
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 132
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: Execute(TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Execute
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 143
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nExecutes the request with any specified options.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public IEnumerable<TElement> Execute(TableRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function Execute(requestOptions As TableRequestOptions = Nothing, operationContext As OperationContext = Nothing) As IEnumerable(Of TElement)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Collections.Generic.IEnumerable{{TElement}}
      description: An enumerable collection, specialized for type <code>TElement</code>, of the results of executing the query.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ExecuteSegmented(TableContinuationToken, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExecuteSegmented
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 162
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nExecutes a segmented query against the Table service.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public TableQuerySegment<TElement> ExecuteSegmented(TableContinuationToken continuationToken, TableRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function ExecuteSegmented(continuationToken As TableContinuationToken, requestOptions As TableRequestOptions = Nothing, operationContext As OperationContext = Nothing) As TableQuerySegment(Of TElement)
    parameters:
    - id: continuationToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: The continuation token.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: The request options.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}
      description: A result segment containing objects of type <em>TElement</em>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.AsyncCallback,System.Object)
  id: BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: BeginExecuteSegmented(TableContinuationToken, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginExecuteSegmented
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 178
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nBegins an asynchronous operation to execute a query and return the results as a result segment.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public ICancellableAsyncResult BeginExecuteSegmented(TableContinuationToken currentToken, AsyncCallback callback, object state)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function BeginExecuteSegmented(currentToken As TableContinuationToken, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, System.AsyncCallback, System.Object)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: BeginExecuteSegmented(TableContinuationToken, TableRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginExecuteSegmented
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 194
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nBegins an asynchronous operation to execute a query and return the results as a result segment.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public ICancellableAsyncResult BeginExecuteSegmented(TableContinuationToken currentToken, TableRequestOptions requestOptions, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function BeginExecuteSegmented(currentToken As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.EndExecuteSegmented(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.EndExecuteSegmented(System.IAsyncResult)
  id: EndExecuteSegmented(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: EndExecuteSegmented(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.EndExecuteSegmented(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndExecuteSegmented
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 210
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nEnds an asynchronous operation to execute a query and return the results as a result segment.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public TableQuerySegment<TElement> EndExecuteSegmented(IAsyncResult asyncResult)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function EndExecuteSegmented(asyncResult As IAsyncResult) As TableQuerySegment(Of TElement)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to finish.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}
      description: A result segment containing objects of type <em>TElement</em>.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).EndExecuteSegmented(System.IAsyncResult)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  id: ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ExecuteSegmentedAsync(TableContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExecuteSegmentedAsync
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 222
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nInitiates an asynchronous operation to execute a query and return the results as a result segment.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Task<TableQuerySegment<TElement>> ExecuteSegmentedAsync(TableContinuationToken currentToken)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function ExecuteSegmentedAsync(currentToken As TableContinuationToken) As Task(Of TableQuerySegment(Of TElement))
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.Threading.CancellationToken)
  id: ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ExecuteSegmentedAsync(TableContinuationToken, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExecuteSegmentedAsync
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 235
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nInitiates an asynchronous operation to execute a query and return the results as a result segment.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Task<TableQuerySegment<TElement>> ExecuteSegmentedAsync(TableContinuationToken currentToken, CancellationToken cancellationToken)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function ExecuteSegmentedAsync(currentToken As TableContinuationToken, cancellationToken As CancellationToken) As Task(Of TableQuerySegment(Of TElement))
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ExecuteSegmentedAsync(TableContinuationToken, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExecuteSegmentedAsync
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 249
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nInitiates an asynchronous operation to execute a query and return the results as a result segment.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Task<TableQuerySegment<TElement>> ExecuteSegmentedAsync(TableContinuationToken currentToken, TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function ExecuteSegmentedAsync(currentToken As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of TableQuerySegment(Of TElement))
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ExecuteSegmentedAsync(TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExecuteSegmentedAsync
    path: src/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 264
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\r\nInitiates an asynchronous operation to execute a query and return the results as a result segment.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Task<TableQuerySegment<TElement>> ExecuteSegmentedAsync(TableContinuationToken currentToken, TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function ExecuteSegmentedAsync(currentToken As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TableQuerySegment(Of TElement))
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
references:
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table.DataServices
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Linq.IQueryable{{TElement}}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TElement>
  fullName: System.Linq.IQueryable<TElement>
  fullname.vb: System.Linq.IQueryable(Of TElement)
  name.vb: IQueryable(Of TElement)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TElement>
  fullName: System.Collections.Generic.IEnumerable<TElement>
  fullname.vb: System.Collections.Generic.IEnumerable(Of TElement)
  name.vb: IEnumerable(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Linq.IQueryable`1
  parent: System.Linq
  isExternal: true
  name: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: TableServiceQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement)
  name.vb: TableServiceQuery(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
    name: TableServiceQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
    name: TableServiceQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: TableServiceContext
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: true
  name: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TElement>
  fullName: System.Collections.Generic.IEnumerator<TElement>
  fullname.vb: System.Collections.Generic.IEnumerator(Of TElement)
  name.vb: IEnumerator(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}
  parent: Microsoft.WindowsAzure.Storage.Table
  definition: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  name: TableQuerySegment<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement)
  name.vb: TableQuerySegment(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableQuerySegment<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement)
  name.vb: TableQuerySegment(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  fullName: System.IAsyncResult
- uid: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: ICancellableAsyncResult
  fullName: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TableQuerySegment<TElement>>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement))
  name.vb: Task(Of TableQuerySegment(Of TElement))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
