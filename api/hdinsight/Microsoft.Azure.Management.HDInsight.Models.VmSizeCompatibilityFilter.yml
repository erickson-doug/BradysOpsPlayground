items:
- uid: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter
  commentId: T:Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter
  id: VmSizeCompatibilityFilter
  parent: Microsoft.Azure.Management.HDInsight.Models
  children:
  - Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.#ctor
  - Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.ClusterFlavors
  - Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.ClusterVersions
  - Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.FilterMode
  - Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.NodeTypes
  - Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.Regions
  - Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.VMSizes
  langs:
  - csharp
  - vb
  name: VmSizeCompatibilityFilter
  fullName: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VmSizeCompatibilityFilter
    path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  syntax:
    content: public class VmSizeCompatibilityFilter
    content.vb: Public Class VmSizeCompatibilityFilter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.ClusterFlavors
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.ClusterFlavors
  id: ClusterFlavors
  parent: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter
  langs:
  - csharp
  - vb
  name: ClusterFlavors
  fullName: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.ClusterFlavors
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ClusterFlavors
    path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nOptional.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> ClusterFlavors

      {

          get;

          set;

      }
    content.vb: Public Property ClusterFlavors As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.ClusterVersions
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.ClusterVersions
  id: ClusterVersions
  parent: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter
  langs:
  - csharp
  - vb
  name: ClusterVersions
  fullName: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.ClusterVersions
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ClusterVersions
    path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nOptional.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> ClusterVersions

      {

          get;

          set;

      }
    content.vb: Public Property ClusterVersions As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.FilterMode
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.FilterMode
  id: FilterMode
  parent: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter
  langs:
  - csharp
  - vb
  name: FilterMode
  fullName: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.FilterMode
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FilterMode
    path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nOptional.\r\n"
  example: []
  syntax:
    content: >-
      public string FilterMode

      {

          get;

          set;

      }
    content.vb: Public Property FilterMode As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.NodeTypes
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.NodeTypes
  id: NodeTypes
  parent: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter
  langs:
  - csharp
  - vb
  name: NodeTypes
  fullName: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.NodeTypes
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NodeTypes
    path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nOptional.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> NodeTypes

      {

          get;

          set;

      }
    content.vb: Public Property NodeTypes As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.Regions
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.Regions
  id: Regions
  parent: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter
  langs:
  - csharp
  - vb
  name: Regions
  fullName: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.Regions
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Regions
    path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nOptional.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> Regions

      {

          get;

          set;

      }
    content.vb: Public Property Regions As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.VMSizes
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.VMSizes
  id: VMSizes
  parent: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter
  langs:
  - csharp
  - vb
  name: VMSizes
  fullName: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.VMSizes
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VMSizes
    path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nOptional.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> VMSizes

      {

          get;

          set;

      }
    content.vb: Public Property VMSizes As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.#ctor
  commentId: M:Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter
  langs:
  - csharp
  - vb
  name: VmSizeCompatibilityFilter()
  fullName: Microsoft.Azure.Management.HDInsight.Models.VmSizeCompatibilityFilter.VmSizeCompatibilityFilter()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/HDInsight/HDInsight/Generated/Models/VmSizeCompatibilityFilter.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nInitializes a new instance of the VmSizeCompatibilityFilter class.\r\n"
  example: []
  syntax:
    content: public VmSizeCompatibilityFilter()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.HDInsight.Models
  isExternal: false
  name: Microsoft.Azure.Management.HDInsight.Models
  fullName: Microsoft.Azure.Management.HDInsight.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
