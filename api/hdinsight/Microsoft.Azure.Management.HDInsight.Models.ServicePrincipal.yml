items:
- uid: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal
  commentId: T:Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal
  id: ServicePrincipal
  parent: Microsoft.Azure.Management.HDInsight.Models
  children:
  - Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.#ctor(System.Guid,System.Guid,System.Byte[],System.String)
  - Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.AADTenantId
  - Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.ApplicationId
  - Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.CertificateFileBytes
  - Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.CertificatePassword
  - Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.ResourceUri
  langs:
  - csharp
  - vb
  name: ServicePrincipal
  fullName: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServicePrincipal
    path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nService Principal that is used to get an OAuth2 token \r\n"
  example: []
  syntax:
    content: 'public class ServicePrincipal : Principal'
    content.vb: >-
      Public Class ServicePrincipal

          Inherits Principal
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.HDInsight.Models.Principal
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.ApplicationId
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.ApplicationId
  id: ApplicationId
  parent: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal
  langs:
  - csharp
  - vb
  name: ApplicationId
  fullName: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.ApplicationId
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ApplicationId
    path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nGets Application id of the service principal \r\n"
  example: []
  syntax:
    content: >-
      public Guid ApplicationId

      {

          get;

      }
    content.vb: Public ReadOnly Property ApplicationId As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.CertificateFileBytes
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.CertificateFileBytes
  id: CertificateFileBytes
  parent: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal
  langs:
  - csharp
  - vb
  name: CertificateFileBytes
  fullName: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.CertificateFileBytes
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CertificateFileBytes
    path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nGets certificate file bytes associated with service principal\r\n"
  example: []
  syntax:
    content: >-
      public byte[] CertificateFileBytes

      {

          get;

      }
    content.vb: Public ReadOnly Property CertificateFileBytes As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.CertificatePassword
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.CertificatePassword
  id: CertificatePassword
  parent: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal
  langs:
  - csharp
  - vb
  name: CertificatePassword
  fullName: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.CertificatePassword
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CertificatePassword
    path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nGets certificate password associated with service principal\r\n"
  example: []
  syntax:
    content: >-
      public string CertificatePassword

      {

          get;

      }
    content.vb: Public ReadOnly Property CertificatePassword As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.AADTenantId
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.AADTenantId
  id: AADTenantId
  parent: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal
  langs:
  - csharp
  - vb
  name: AADTenantId
  fullName: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.AADTenantId
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AADTenantId
    path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nGets AAD tenant id of the service principal\r\n"
  example: []
  syntax:
    content: >-
      public Guid AADTenantId

      {

          get;

      }
    content.vb: Public ReadOnly Property AADTenantId As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.ResourceUri
  commentId: P:Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.ResourceUri
  id: ResourceUri
  parent: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal
  langs:
  - csharp
  - vb
  name: ResourceUri
  fullName: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.ResourceUri
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ResourceUri
    path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nGets Resource uri of the service principal\r\n"
  example: []
  syntax:
    content: >-
      public Uri ResourceUri

      {

          get;

      }
    content.vb: Public ReadOnly Property ResourceUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.#ctor(System.Guid,System.Guid,System.Byte[],System.String)
  commentId: M:Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.#ctor(System.Guid,System.Guid,System.Byte[],System.String)
  id: '#ctor(System.Guid,System.Guid,System.Byte[],System.String)'
  parent: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal
  langs:
  - csharp
  - vb
  name: ServicePrincipal(Guid, Guid, Byte[], String)
  fullName: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.ServicePrincipal(System.Guid, System.Guid, System.Byte[], System.String)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/HDInsight/HDInsight/CustomizationModels/ServicePrincipal.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.HDInsight
  namespace: Microsoft.Azure.Management.HDInsight.Models
  summary: "\r\nInitializes a new instance of the ServicePrincipal class.\r\n"
  example: []
  syntax:
    content: public ServicePrincipal(Guid applicationId, Guid aadTenantId, byte[] certificateFileBytes, string certificatePassword)
    content.vb: Public Sub New(applicationId As Guid, aadTenantId As Guid, certificateFileBytes As Byte(), certificatePassword As String)
    parameters:
    - id: applicationId
      type: System.Guid
      description: Application id of the service principal.
    - id: aadTenantId
      type: System.Guid
      description: AAD tenant id of the service principal
    - id: certificateFileBytes
      type: System.Byte[]
      description: certificate file bytes associated with service principal.
    - id: certificatePassword
      type: System.String
      description: certificate password associated with service principal.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.HDInsight.Models.ServicePrincipal.ServicePrincipal(System.Guid, System.Guid, System.Byte(), System.String)
  name.vb: ServicePrincipal(Guid, Guid, Byte(), String)
references:
- uid: Microsoft.Azure.Management.HDInsight.Models
  isExternal: false
  name: Microsoft.Azure.Management.HDInsight.Models
  fullName: Microsoft.Azure.Management.HDInsight.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.HDInsight.Models.Principal
  parent: Microsoft.Azure.Management.HDInsight.Models
  isExternal: false
  name: Principal
  fullName: Microsoft.Azure.Management.HDInsight.Models.Principal
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  fullName: System.Guid
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
