items:
- uid: Microsoft.Azure.Management.Compute.Models.DataDiskImage
  commentId: T:Microsoft.Azure.Management.Compute.Models.DataDiskImage
  id: DataDiskImage
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.DataDiskImage.#ctor
  - Microsoft.Azure.Management.Compute.Models.DataDiskImage.#ctor(System.Int32)
  - Microsoft.Azure.Management.Compute.Models.DataDiskImage.Lun
  langs:
  - csharp
  - vb
  name: DataDiskImage
  fullName: Microsoft.Azure.Management.Compute.Models.DataDiskImage
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/DataDiskImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DataDiskImage
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/DataDiskImage.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nContains the data disk images information.\r\n"
  example: []
  syntax:
    content: public class DataDiskImage
    content.vb: Public Class DataDiskImage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.DataDiskImage.Lun
  commentId: P:Microsoft.Azure.Management.Compute.Models.DataDiskImage.Lun
  id: Lun
  parent: Microsoft.Azure.Management.Compute.Models.DataDiskImage
  langs:
  - csharp
  - vb
  name: Lun
  fullName: Microsoft.Azure.Management.Compute.Models.DataDiskImage.Lun
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/DataDiskImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Lun
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/DataDiskImage.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets the LUN number for a data disk.This value is used to\r\nidentify data disk image inside the VMImage therefore it must be\r\nunique for each data disk.The allowed character for the value is\r\ndigit.\r\n"
  example: []
  syntax:
    content: >-
      public int Lun

      {

          get;

          set;

      }
    content.vb: Public Property Lun As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.DataDiskImage.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.DataDiskImage.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.DataDiskImage
  langs:
  - csharp
  - vb
  name: DataDiskImage()
  fullName: Microsoft.Azure.Management.Compute.Models.DataDiskImage.DataDiskImage()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/DataDiskImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/DataDiskImage.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the DataDiskImage class.\r\n"
  example: []
  syntax:
    content: public DataDiskImage()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.DataDiskImage.#ctor(System.Int32)
  commentId: M:Microsoft.Azure.Management.Compute.Models.DataDiskImage.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Azure.Management.Compute.Models.DataDiskImage
  langs:
  - csharp
  - vb
  name: DataDiskImage(Int32)
  fullName: Microsoft.Azure.Management.Compute.Models.DataDiskImage.DataDiskImage(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/DataDiskImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/DataDiskImage.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the DataDiskImage class with required\r\narguments.\r\n"
  example: []
  syntax:
    content: public DataDiskImage(int lun)
    content.vb: Public Sub New(lun As Integer)
    parameters:
    - id: lun
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
