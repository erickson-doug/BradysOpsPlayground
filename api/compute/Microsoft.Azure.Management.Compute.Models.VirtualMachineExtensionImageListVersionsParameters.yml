items:
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters
  commentId: T:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters
  id: VirtualMachineExtensionImageListVersionsParameters
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.#ctor
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.#ctor(System.String,System.String,System.String)
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.FilterExpression
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.Type
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionImageListVersionsParameters
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImageListVersionsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineExtensionImageListVersionsParameters
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImageListVersionsParameters.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nContains the parameteres required to list virtual machine extension\r\nimage versions.\r\n"
  example: []
  syntax:
    content: 'public class VirtualMachineExtensionImageListVersionsParameters : VirtualMachineExtensionImageListTypesParameters'
    content.vb: >-
      Public Class VirtualMachineExtensionImageListVersionsParameters

          Inherits VirtualMachineExtensionImageListTypesParameters
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters
  inheritedMembers:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters.Location
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters.PublisherName
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.FilterExpression
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.FilterExpression
  id: FilterExpression
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters
  langs:
  - csharp
  - vb
  name: FilterExpression
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.FilterExpression
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImageListVersionsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FilterExpression
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImageListVersionsParameters.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. ODAta filter\r\nexpression.https://msdn.microsoft.com/en-us/library/hh169248(v=nav.70).aspxSupported\r\noperatives: -eq -startswith Examples:    To list the all version\r\nthat begin with 1.0 $filter=startswith(name, ‘1.0’)    To get the\r\nlatest version $filter= name eq ‘latest’\r\n"
  example: []
  syntax:
    content: >-
      public string FilterExpression

      {

          get;

          set;

      }
    content.vb: Public Property FilterExpression As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.Type
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.Type
  id: Type
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters
  langs:
  - csharp
  - vb
  name: Type
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.Type
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImageListVersionsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Type
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImageListVersionsParameters.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Unique (across the publisher) identifier to distinguish\r\nan extension for this publisher. Example: 'BGInfo' or\r\n'VMAccess'.The allowed characters are uppercase or lowercase\r\nletters, digit, hypen(-), period (.)Dot or hyphen is not allowed\r\nthe end of value. Max length is 64.\r\n"
  example: []
  syntax:
    content: >-
      public string Type

      {

          get;

          set;

      }
    content.vb: Public Property Type As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionImageListVersionsParameters()
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.VirtualMachineExtensionImageListVersionsParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImageListVersionsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImageListVersionsParameters.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the\r\nVirtualMachineExtensionImageListVersionsParameters class.\r\n"
  example: []
  syntax:
    content: public VirtualMachineExtensionImageListVersionsParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionImageListVersionsParameters(String, String, String)
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListVersionsParameters.VirtualMachineExtensionImageListVersionsParameters(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImageListVersionsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImageListVersionsParameters.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the\r\nVirtualMachineExtensionImageListVersionsParameters class with\r\nrequired arguments.\r\n"
  example: []
  syntax:
    content: public VirtualMachineExtensionImageListVersionsParameters(string type, string location, string publisherName)
    content.vb: Public Sub New(type As String, location As String, publisherName As String)
    parameters:
    - id: type
      type: System.String
    - id: location
      type: System.String
    - id: publisherName
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: VirtualMachineExtensionImageListTypesParameters
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters.Location
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters
  isExternal: false
  name: Location
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters.Location
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters.PublisherName
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters
  isExternal: false
  name: PublisherName
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImageListTypesParameters.PublisherName
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
