items:
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters
  commentId: T:Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters
  id: VirtualMachineCaptureParameters
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.#ctor
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.#ctor(System.String,System.String,System.Boolean)
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.DestinationContainerName
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.Overwrite
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.VirtualHardDiskNamePrefix
  langs:
  - csharp
  - vb
  name: VirtualMachineCaptureParameters
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineCaptureParameters
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nCapture Virtual Machine parameters.\r\n"
  example: []
  syntax:
    content: public class VirtualMachineCaptureParameters
    content.vb: Public Class VirtualMachineCaptureParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.DestinationContainerName
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.DestinationContainerName
  id: DestinationContainerName
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters
  langs:
  - csharp
  - vb
  name: DestinationContainerName
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.DestinationContainerName
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DestinationContainerName
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the destination container name.\r\n"
  example: []
  syntax:
    content: >-
      public string DestinationContainerName

      {

          get;

          set;

      }
    content.vb: Public Property DestinationContainerName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.Overwrite
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.Overwrite
  id: Overwrite
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters
  langs:
  - csharp
  - vb
  name: Overwrite
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.Overwrite
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Overwrite
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets whether it overwrites destination\r\nVirtualHardDisk if true, in case of conflict.\r\n"
  example: []
  syntax:
    content: >-
      public bool Overwrite

      {

          get;

          set;

      }
    content.vb: Public Property Overwrite As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.VirtualHardDiskNamePrefix
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.VirtualHardDiskNamePrefix
  id: VirtualHardDiskNamePrefix
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters
  langs:
  - csharp
  - vb
  name: VirtualHardDiskNamePrefix
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.VirtualHardDiskNamePrefix
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualHardDiskNamePrefix
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the captured VirtualHardDisk's name prefix.\r\n"
  example: []
  syntax:
    content: >-
      public string VirtualHardDiskNamePrefix

      {

          get;

          set;

      }
    content.vb: Public Property VirtualHardDiskNamePrefix As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters
  langs:
  - csharp
  - vb
  name: VirtualMachineCaptureParameters()
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.VirtualMachineCaptureParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the VirtualMachineCaptureParameters\r\nclass.\r\n"
  example: []
  syntax:
    content: public VirtualMachineCaptureParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.#ctor(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters
  langs:
  - csharp
  - vb
  name: VirtualMachineCaptureParameters(String, String, Boolean)
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineCaptureParameters.VirtualMachineCaptureParameters(System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineCaptureParameters.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the VirtualMachineCaptureParameters\r\nclass with required arguments.\r\n"
  example: []
  syntax:
    content: public VirtualMachineCaptureParameters(string virtualHardDiskNamePrefix, string destinationContainerName, bool overwrite)
    content.vb: Public Sub New(virtualHardDiskNamePrefix As String, destinationContainerName As String, overwrite As Boolean)
    parameters:
    - id: virtualHardDiskNamePrefix
      type: System.String
    - id: destinationContainerName
      type: System.String
    - id: overwrite
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
