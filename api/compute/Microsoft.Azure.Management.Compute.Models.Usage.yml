items:
- uid: Microsoft.Azure.Management.Compute.Models.Usage
  commentId: T:Microsoft.Azure.Management.Compute.Models.Usage
  id: Usage
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.Usage.#ctor
  - Microsoft.Azure.Management.Compute.Models.Usage.CurrentValue
  - Microsoft.Azure.Management.Compute.Models.Usage.Limit
  - Microsoft.Azure.Management.Compute.Models.Usage.Name
  - Microsoft.Azure.Management.Compute.Models.Usage.Unit
  langs:
  - csharp
  - vb
  name: Usage
  fullName: Microsoft.Azure.Management.Compute.Models.Usage
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Usage
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nDescribes Compute Resource Usage.\r\n"
  example: []
  syntax:
    content: public class Usage
    content.vb: Public Class Usage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.Usage.CurrentValue
  commentId: P:Microsoft.Azure.Management.Compute.Models.Usage.CurrentValue
  id: CurrentValue
  parent: Microsoft.Azure.Management.Compute.Models.Usage
  langs:
  - csharp
  - vb
  name: CurrentValue
  fullName: Microsoft.Azure.Management.Compute.Models.Usage.CurrentValue
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CurrentValue
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the current value of the usage.\r\n"
  example: []
  syntax:
    content: >-
      public int CurrentValue

      {

          get;

          set;

      }
    content.vb: Public Property CurrentValue As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Usage.Limit
  commentId: P:Microsoft.Azure.Management.Compute.Models.Usage.Limit
  id: Limit
  parent: Microsoft.Azure.Management.Compute.Models.Usage
  langs:
  - csharp
  - vb
  name: Limit
  fullName: Microsoft.Azure.Management.Compute.Models.Usage.Limit
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Limit
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the limit of usage.\r\n"
  example: []
  syntax:
    content: >-
      public uint Limit

      {

          get;

          set;

      }
    content.vb: Public Property Limit As UInteger
    parameters: []
    return:
      type: System.UInt32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Usage.Name
  commentId: P:Microsoft.Azure.Management.Compute.Models.Usage.Name
  id: Name
  parent: Microsoft.Azure.Management.Compute.Models.Usage
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Compute.Models.Usage.Name
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the name of the type of usage.\r\n"
  example: []
  syntax:
    content: >-
      public UsageName Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As UsageName
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.UsageName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Usage.Unit
  commentId: P:Microsoft.Azure.Management.Compute.Models.Usage.Unit
  id: Unit
  parent: Microsoft.Azure.Management.Compute.Models.Usage
  langs:
  - csharp
  - vb
  name: Unit
  fullName: Microsoft.Azure.Management.Compute.Models.Usage.Unit
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Unit
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets an enum describing the unit of measurement.\r\n"
  example: []
  syntax:
    content: >-
      public UsageUnit Unit

      {

          get;

          set;

      }
    content.vb: Public Property Unit As UsageUnit
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.UsageUnit
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Usage.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.Usage.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.Usage
  langs:
  - csharp
  - vb
  name: Usage()
  fullName: Microsoft.Azure.Management.Compute.Models.Usage.Usage()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Usage.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the Usage class.\r\n"
  example: []
  syntax:
    content: public Usage()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  fullName: System.UInt32
- uid: Microsoft.Azure.Management.Compute.Models.UsageName
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: UsageName
  fullName: Microsoft.Azure.Management.Compute.Models.UsageName
- uid: Microsoft.Azure.Management.Compute.Models.UsageUnit
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: UsageUnit
  fullName: Microsoft.Azure.Management.Compute.Models.UsageUnit
