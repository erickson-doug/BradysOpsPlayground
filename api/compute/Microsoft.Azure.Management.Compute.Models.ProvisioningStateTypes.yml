items:
- uid: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes
  commentId: T:Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes
  id: ProvisioningStateTypes
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Creating
  - Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Deleting
  - Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Failed
  - Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Succeeded
  - Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Updating
  langs:
  - csharp
  - vb
  name: ProvisioningStateTypes
  fullName: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProvisioningStateTypes
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nThe provisioning state.\r\n"
  example: []
  syntax:
    content: public class ProvisioningStateTypes
    content.vb: Public Class ProvisioningStateTypes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Creating
  commentId: F:Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Creating
  id: Creating
  parent: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes
  langs:
  - csharp
  - vb
  name: Creating
  fullName: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Creating
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Creating
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nThe creating state.\r\n"
  example: []
  syntax:
    content: public const string Creating = "Creating"
    content.vb: Public Const Creating As String = "Creating"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Updating
  commentId: F:Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Updating
  id: Updating
  parent: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes
  langs:
  - csharp
  - vb
  name: Updating
  fullName: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Updating
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Updating
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nThe updating state.\r\n"
  example: []
  syntax:
    content: public const string Updating = "Updating"
    content.vb: Public Const Updating As String = "Updating"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Failed
  commentId: F:Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Failed
  id: Failed
  parent: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes
  langs:
  - csharp
  - vb
  name: Failed
  fullName: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Failed
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Failed
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nThe failed state.\r\n"
  example: []
  syntax:
    content: public const string Failed = "Failed"
    content.vb: Public Const Failed As String = "Failed"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Succeeded
  commentId: F:Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Succeeded
  id: Succeeded
  parent: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes
  langs:
  - csharp
  - vb
  name: Succeeded
  fullName: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Succeeded
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Succeeded
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nThe succeeded state.\r\n"
  example: []
  syntax:
    content: public const string Succeeded = "Succeeded"
    content.vb: Public Const Succeeded As String = "Succeeded"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Deleting
  commentId: F:Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Deleting
  id: Deleting
  parent: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes
  langs:
  - csharp
  - vb
  name: Deleting
  fullName: Microsoft.Azure.Management.Compute.Models.ProvisioningStateTypes.Deleting
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Deleting
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/ProvisioningStateTypes.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nThe deleting state.\r\n"
  example: []
  syntax:
    content: public const string Deleting = "Deleting"
    content.vb: Public Const Deleting As String = "Deleting"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
