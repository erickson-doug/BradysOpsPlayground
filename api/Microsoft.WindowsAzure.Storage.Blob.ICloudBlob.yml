items:
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  id: ICloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(Windows.Storage.StorageFile)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  langs:
  - csharp
  - vb
  name: ICloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  type: Interface
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ICloudBlob
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAn interface required for Microsoft Azure blob types. The <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob\" data-throw-if-not-resolved=\"false\"></xref> classes implement the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob\" data-throw-if-not-resolved=\"false\"></xref> interface.\r\n"
  example: []
  syntax:
    content: 'public interface ICloudBlob : IListBlobItem'
    content.vb: >-
      Public Interface ICloudBlob

          Inherits IListBlobItem
  inheritedMembers:
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Uri
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.StorageUri
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Parent
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Container
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: OpenReadAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OpenReadAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nOpens a stream for reading from the blob.\r\n"
  example: []
  syntax:
    content: Task<Stream> OpenReadAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function OpenReadAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Stream)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A stream to be used for reading from the blob.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)
  id: UploadFromStreamAsync(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads a stream to the Microsoft Azure Blob Service. \r\n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source)
    content.vb: Function UploadFromStreamAsync(source As Stream) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: The stream providing the blob content.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads a stream to a blob. \r\n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function UploadFromStreamAsync(source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: The stream providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)
  id: UploadFromStreamAsync(System.IO.Stream,System.Int64)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, Int64)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream, System.Int64)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads a stream to a blob. \r\n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source, long length)
    content.vb: Function UploadFromStreamAsync(source As Stream, length As Long) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: The stream providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads a stream to a blob. \r\n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function UploadFromStreamAsync(source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: The stream providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(Windows.Storage.StorageFile)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(Windows.Storage.StorageFile)
  id: UploadFromFileAsync(Windows.Storage.StorageFile)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromFileAsync(StorageFile)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(Windows.Storage.StorageFile)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromFileAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  example: []
  syntax:
    content: Task UploadFromFileAsync(StorageFile source)
    content.vb: Function UploadFromFileAsync(source As StorageFile) As Task
    parameters:
    - id: source
      type: Windows.Storage.StorageFile
      description: The file providing the blob content.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromFileAsync(StorageFile, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(Windows.Storage.StorageFile, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromFileAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 107
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  example: []
  syntax:
    content: Task UploadFromFileAsync(StorageFile source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function UploadFromFileAsync(source As StorageFile, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: source
      type: Windows.Storage.StorageFile
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
    return:
      type: System.Threading.Tasks.Task
      description: As <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  id: UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArrayAsync(Byte[], Int32, Int32)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 117
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads the contents of a byte array to a blob.\r\n"
  example: []
  syntax:
    content: Task UploadFromByteArrayAsync(byte[] buffer, int index, int count)
    content.vb: Function UploadFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: UploadFromByteArrayAsync(Byte(), Int32, Int32)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArrayAsync(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 129
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads the contents of a byte array to a blob.\r\n"
  example: []
  syntax:
    content: Task UploadFromByteArrayAsync(byte[] buffer, int index, int count, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function UploadFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: UploadFromByteArrayAsync(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream)
  id: DownloadToStreamAsync(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToStreamAsync(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 136
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads the contents of a blob to a stream.\r\n"
  example: []
  syntax:
    content: Task DownloadToStreamAsync(Stream target)
    content.vb: Function DownloadToStreamAsync(target As Stream) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: The target stream.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 146
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads the contents of a blob to a stream.\r\n"
  example: []
  syntax:
    content: Task DownloadToStreamAsync(Stream target, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DownloadToStreamAsync(target As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: The target stream.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile)
  id: DownloadToFileAsync(Windows.Storage.StorageFile)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(StorageFile)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToFileAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 159
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  example: []
  syntax:
    content: Task DownloadToFileAsync(StorageFile target)
    content.vb: Function DownloadToFileAsync(target As StorageFile) As Task
    parameters:
    - id: target
      type: Windows.Storage.StorageFile
      description: The target file.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(StorageFile, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToFileAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 178
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  example: []
  syntax:
    content: Task DownloadToFileAsync(StorageFile target, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DownloadToFileAsync(target As StorageFile, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: target
      type: Windows.Storage.StorageFile
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  id: DownloadToByteArrayAsync(System.Byte[],System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToByteArrayAsync(Byte[], Int32)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 187
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a byte array.\r\n"
  example: []
  syntax:
    content: Task<int> DownloadToByteArrayAsync(byte[] target, int index)
    content.vb: Function DownloadToByteArrayAsync(target As Byte(), index As Integer) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The total number of bytes read into the buffer.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToByteArrayAsync(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 198
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a byte array.\r\n"
  example: []
  syntax:
    content: Task<int> DownloadToByteArrayAsync(byte[] target, int index, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DownloadToByteArrayAsync(target As Byte(), index As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The total number of bytes read into the buffer.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadRangeToStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 207
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a stream.\r\n"
  example: []
  syntax:
    content: Task DownloadRangeToStreamAsync(Stream target, long ? offset, long ? length)
    content.vb: Function DownloadRangeToStreamAsync(target As Stream, offset As Long?, length As Long?) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: The target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64))
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadRangeToStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 219
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a stream.\r\n"
  example: []
  syntax:
    content: Task DownloadRangeToStreamAsync(Stream target, long ? offset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DownloadRangeToStreamAsync(target As Stream, offset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: The target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadRangeToByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 229
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a byte array.\r\n"
  example: []
  syntax:
    content: Task<int> DownloadRangeToByteArrayAsync(byte[] target, int index, long ? blobOffset, long ? length)
    content.vb: Function DownloadRangeToByteArrayAsync(target As Byte(), index As Integer, blobOffset As Long?, length As Long?) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The total number of bytes read into the buffer.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64))
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadRangeToByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 242
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a byte array.\r\n"
  example: []
  syntax:
    content: Task<int> DownloadRangeToByteArrayAsync(byte[] target, int index, long ? blobOffset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DownloadRangeToByteArrayAsync(target As Byte(), index As Integer, blobOffset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The total number of bytes read into the buffer.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync
  id: ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 248
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChecks whether the blob exists.\r\n"
  example: []
  syntax:
    content: Task<bool> ExistsAsync()
    content.vb: Function ExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the blob exists.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ExistsAsync(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 256
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChecks whether the blob exists.\r\n"
  example: []
  syntax:
    content: Task<bool> ExistsAsync(BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function ExistsAsync(options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the blob exists.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync
  id: FetchAttributesAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 262
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nPopulates a blob's properties and metadata.\r\n"
  example: []
  syntax:
    content: Task FetchAttributesAsync()
    content.vb: Function FetchAttributesAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 271
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nPopulates a blob's properties and metadata.\r\n"
  example: []
  syntax:
    content: Task FetchAttributesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function FetchAttributesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync
  id: SetMetadataAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetMetadataAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 277
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUpdates the blob's metadata.\r\n"
  example: []
  syntax:
    content: Task SetMetadataAsync()
    content.vb: Function SetMetadataAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 286
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUpdates the blob's metadata.\r\n"
  example: []
  syntax:
    content: Task SetMetadataAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function SetMetadataAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync
  id: SetPropertiesAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetPropertiesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPropertiesAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 292
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUpdates the blob's properties.\r\n"
  example: []
  syntax:
    content: Task SetPropertiesAsync()
    content.vb: Function SetPropertiesAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetPropertiesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPropertiesAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 301
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUpdates the blob's properties.\r\n"
  example: []
  syntax:
    content: Task SetPropertiesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function SetPropertiesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 307
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the blob.\r\n"
  example: []
  syntax:
    content: Task DeleteAsync()
    content.vb: Function DeleteAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 317
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the blob.\r\n"
  example: []
  syntax:
    content: Task DeleteAsync(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DeleteAsync(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync
  id: DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 323
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the blob if it already exists.\r\n"
  example: []
  syntax:
    content: Task<bool> DeleteIfExistsAsync()
    content.vb: Function DeleteIfExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the blob did not already exist and was created; otherwise <code>false</code>.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 333
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the blob if it already exists.\r\n"
  example: []
  syntax:
    content: Task<bool> DeleteIfExistsAsync(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DeleteIfExistsAsync(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the container.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the blob did not already exist and was created; otherwise <code>false</code>.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AcquireLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 342
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAcquires a lease on this blob.\r\n"
  example: []
  syntax:
    content: Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId = null)
    content.vb: Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String = Nothing) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The ID of the acquired lease.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AcquireLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 354
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAcquires a lease on this blob.\r\n"
  example: []
  syntax:
    content: Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The ID of the acquired lease.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 361
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRenews a lease on this blob.\r\n"
  example: []
  syntax:
    content: Task RenewLeaseAsync(AccessCondition accessCondition)
    content.vb: Function RenewLeaseAsync(accessCondition As AccessCondition) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 370
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRenews a lease on this blob.\r\n"
  example: []
  syntax:
    content: Task RenewLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function RenewLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 378
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChanges the lease ID on this blob.\r\n"
  example: []
  syntax:
    content: Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition)
    content.vb: Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The new lease ID.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 388
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChanges the lease ID on this blob.\r\n"
  example: []
  syntax:
    content: Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The new lease ID.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReleaseLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 395
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReleases the lease on this blob.\r\n"
  example: []
  syntax:
    content: Task ReleaseLeaseAsync(AccessCondition accessCondition)
    content.vb: Function ReleaseLeaseAsync(accessCondition As AccessCondition) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReleaseLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 404
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReleases the lease on this blob.\r\n"
  example: []
  syntax:
    content: Task ReleaseLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function ReleaseLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan})
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BreakLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 412
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBreaks the current lease on this blob.\r\n"
  example: []
  syntax:
    content: Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod)
    content.vb: Function BreakLeaseAsync(breakPeriod As TimeSpan?) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time before the lease ends, to the second.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan))
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan))
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BreakLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 423
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBreaks the current lease on this blob.\r\n"
  example: []
  syntax:
    content: Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function BreakLeaseAsync(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time before the lease ends, to the second.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String)
  id: AbortCopyAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AbortCopyAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AbortCopyAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 430
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAborts an ongoing blob copy operation.\r\n"
  example: []
  syntax:
    content: Task AbortCopyAsync(string copyId)
    content.vb: Function AbortCopyAsync(copyId As String) As Task
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AbortCopyAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AbortCopyAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/ICloudBlob.cs
    startLine: 440
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAborts an ongoing blob copy operation.\r\n"
  example: []
  syntax:
    content: Task AbortCopyAsync(string copyId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function AbortCopyAsync(copyId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the blob's name.\r\n"
  example: []
  syntax:
    content: >-
      string Name

      {

          get;

      }
    content.vb: ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string containing the name of the blob.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceClient
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\"></xref> object that represents the Blob service.\r\n"
  example: []
  syntax:
    content: >-
      CloudBlobClient ServiceClient

      {

          get;

      }
    content.vb: ReadOnly Property ServiceClient As CloudBlobClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes
  id: StreamWriteSizeInBytes
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: StreamWriteSizeInBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StreamWriteSizeInBytes
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the number of bytes to buffer when writing to a page blob stream or\r\nthe block size for writing to a block blob.\r\n"
  example: []
  syntax:
    content: >-
      int StreamWriteSizeInBytes

      {

          get;

          set;

      }
    content.vb: Property StreamWriteSizeInBytes As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of bytes to buffer or the size of a block, in bytes.
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
  id: StreamMinimumReadSizeInBytes
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: StreamMinimumReadSizeInBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StreamMinimumReadSizeInBytes
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the minimum number of bytes to buffer when reading from a blob stream.\r\n"
  example: []
  syntax:
    content: >-
      int StreamMinimumReadSizeInBytes

      {

          get;

          set;

      }
    content.vb: Property StreamMinimumReadSizeInBytes As Integer
    parameters: []
    return:
      type: System.Int32
      description: The minimum number of bytes to buffer.
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Properties
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the blob's system properties.\r\n"
  example: []
  syntax:
    content: >-
      BlobProperties Properties

      {

          get;

      }
    content.vb: ReadOnly Property Properties As BlobProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobProperties" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Metadata
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the user-defined metadata for the blob.\r\n"
  example: []
  syntax:
    content: >-
      IDictionary<string, string> Metadata

      {

          get;

      }
    content.vb: ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: An <xref href="System.Collections.Generic.IDictionary`2" data-throw-if-not-resolved="false"></xref> object containing the blob's metadata as a collection of name-value pairs.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime
  id: SnapshotTime
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotTime
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SnapshotTime
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the date and time that the blob snapshot was taken, if this blob is a snapshot.\r\n"
  remarks: "\r\nIf the blob is not a snapshot, the value of this property is <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      DateTimeOffset? SnapshotTime

      {

          get;

      }
    content.vb: ReadOnly Property SnapshotTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> containing the blob's snapshot time if the blob is a snapshot; otherwise, <code>null</code>.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot
  id: IsSnapshot
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: IsSnapshot
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsSnapshot
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a value indicating whether this blob is a snapshot.\r\n"
  example: []
  syntax:
    content: >-
      bool IsSnapshot

      {

          get;

      }
    content.vb: ReadOnly Property IsSnapshot As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this blob is a snapshot; otherwise, <code>false</code>.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri
  id: SnapshotQualifiedUri
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotQualifiedUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SnapshotQualifiedUri
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the absolute URI to the blob, including query string information if the blob is a snapshot.\r\n"
  example: []
  syntax:
    content: >-
      Uri SnapshotQualifiedUri

      {

          get;

      }
    content.vb: ReadOnly Property SnapshotQualifiedUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the blob, including snapshot query information if the blob is a snapshot.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri
  id: SnapshotQualifiedStorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotQualifiedStorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SnapshotQualifiedStorageUri
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the blob's URI for both the primary and secondary locations, including query string information if the blob is a snapshot.\r\n"
  example: []
  syntax:
    content: >-
      StorageUri SnapshotQualifiedStorageUri

      {

          get;

      }
    content.vb: ReadOnly Property SnapshotQualifiedStorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: "An object of type <xref href=\"Microsoft.WindowsAzure.Storage.StorageUri\" data-throw-if-not-resolved=\"false\"></xref> containing the blob's URIs for both the primary and secondary locations, \r\nincluding snapshot query information if the blob is a snapshot."
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
  id: CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CopyState
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the state of the most recent or pending copy operation.\r\n"
  example: []
  syntax:
    content: >-
      CopyState CopyState

      {

          get;

      }
    content.vb: ReadOnly Property CopyState As CopyState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CopyState
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState" data-throw-if-not-resolved="false"></xref> object containing the copy state, or <code>null</code> if there is no copy state for the blob.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
  id: BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BlobType
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the type of the blob.\r\n"
  example: []
  syntax:
    content: >-
      BlobType BlobType

      {

          get;

      }
    content.vb: ReadOnly Property BlobType As BlobType
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobType
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType" data-throw-if-not-resolved="false"></xref> enumeration value.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 111
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the blob.\r\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: string GetSharedAccessSignature(SharedAccessBlobPolicy policy)
    content.vb: Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 121
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the blob.\r\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: >-
      [DefaultOverload]

      string GetSharedAccessSignature(SharedAccessBlobPolicy policy, string groupPolicyIdentifier)
    content.vb: >-
      <DefaultOverload>

      Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, groupPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: groupPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  attributes:
  - type: Windows.Foundation.Metadata.DefaultOverloadAttribute
    ctor: Windows.Foundation.Metadata.DefaultOverloadAttribute.#ctor
    arguments: []
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 131
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the blob.\r\n"
  example: []
  syntax:
    content: string GetSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers)
    content.vb: Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, headers As SharedAccessBlobHeaders) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: headers
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false"></xref> object specifying optional header values to set for a blob accessed with this SAS.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 140
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the blob.\r\n"
  example: []
  syntax:
    content: string GetSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, string groupPolicyIdentifier)
    content.vb: Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, headers As SharedAccessBlobHeaders, groupPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: headers
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false"></xref> object specifying optional header values to set for a blob accessed with this SAS.
    - id: groupPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String, System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>, Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 151
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the blob.\r\n"
  example: []
  syntax:
    content: string GetSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, string groupPolicyIdentifier, SharedAccessProtocol? protocols, IPAddressOrRange ipAddressOrRange)
    content.vb: Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, headers As SharedAccessBlobHeaders, groupPolicyIdentifier As String, protocols As SharedAccessProtocol?, ipAddressOrRange As IPAddressOrRange) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: headers
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false"></xref> object specifying optional header values to set for a blob accessed with this SAS.
    - id: groupPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    - id: protocols
      type: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
      description: The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.
    - id: ipAddressOrRange
      type: Microsoft.WindowsAzure.Storage.IPAddressOrRange
      description: The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String, System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol), Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  name.vb: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
references:
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlockBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudPageBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: ICloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Uri
  parent: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  isExternal: false
  name: Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Uri
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.StorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Parent
  parent: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  isExternal: false
  name: Parent
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Parent
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Container
  parent: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  isExternal: false
  name: Container
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Container
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: IListBlobItem
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
- uid: Microsoft.WindowsAzure.Storage.AccessCondition
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: AccessCondition
  fullName: Microsoft.WindowsAzure.Storage.AccessCondition
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Windows.Storage.StorageFile
  parent: Windows.Storage
  isExternal: true
  name: StorageFile
  fullName: Windows.Storage.StorageFile
- uid: Windows.Storage
  isExternal: false
  name: Windows.Storage
  fullName: Windows.Storage
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: DeleteSnapshotsOption
  fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
- uid: Windows.Foundation.TimeSpan
- uid: System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.TimeSpan}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TimeSpan>
  fullName: System.Threading.Tasks.Task<System.TimeSpan>
  fullname.vb: System.Threading.Tasks.Task(Of System.TimeSpan)
  name.vb: Task(Of TimeSpan)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: SharedAccessBlobPolicy
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: SharedAccessBlobHeaders
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SharedAccessProtocol>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol)
  name.vb: Nullable(Of SharedAccessProtocol)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.IPAddressOrRange
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IPAddressOrRange
  fullName: Microsoft.WindowsAzure.Storage.IPAddressOrRange
