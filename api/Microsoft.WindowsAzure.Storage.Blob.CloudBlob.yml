items:
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  id: CloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(System.Uri)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BlobType
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Container
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CopyState
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.IsSnapshot
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Metadata
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Name
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Parent
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Properties
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ServiceClient
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedStorageUri
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedUri
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotTime
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Uri
  langs:
  - csharp
  - vb
  name: CloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CloudBlob
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRepresents a blob.\r\n"
  example: []
  syntax:
    content: 'public class CloudBlob : IListBlobItem'
    content.vb: >-
      Public Class CloudBlob
          Implements IListBlobItem
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  id: OpenReadAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: OpenReadAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OpenReadAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nOpens a stream for reading from the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<Stream> OpenReadAsync()
    content.vb: Public Overridable Function OpenReadAsync As Task(Of Stream)
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A stream to be used for reading from the blob.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: OpenReadAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OpenReadAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nOpens a stream for reading from the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<Stream> OpenReadAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function OpenReadAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Stream)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A stream to be used for reading from the blob.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: OpenReadAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OpenReadAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nOpens a stream for reading from the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<Stream> OpenReadAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function OpenReadAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Stream)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A stream to be used for reading from the blob.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)
  id: DownloadToStreamAsync(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToStreamAsync(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 94
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads the contents of a blob to a stream.\r\n"
  example: []
  syntax:
    content: public virtual Task DownloadToStreamAsync(Stream target)
    content.vb: Public Overridable Function DownloadToStreamAsync(target As Stream) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: The target stream.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 108
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads the contents of a blob to a stream.\r\n"
  example: []
  syntax:
    content: public virtual Task DownloadToStreamAsync(Stream target, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DownloadToStreamAsync(target As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: The target stream.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 123
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads the contents of a blob to a stream.\r\n"
  example: []
  syntax:
    content: public virtual Task DownloadToStreamAsync(Stream target, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DownloadToStreamAsync(target As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: The target stream.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile)
  id: DownloadToFileAsync(Windows.Storage.StorageFile)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(StorageFile)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToFileAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 144
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  example: []
  syntax:
    content: public virtual Task DownloadToFileAsync(StorageFile target)
    content.vb: Public Overridable Function DownloadToFileAsync(target As StorageFile) As Task
    parameters:
    - id: target
      type: Windows.Storage.StorageFile
      description: The target file.
    return:
      type: System.Threading.Tasks.Task
      description: An <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(StorageFile, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToFileAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 172
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  example: []
  syntax:
    content: public virtual Task DownloadToFileAsync(StorageFile target, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DownloadToFileAsync(target As StorageFile, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: target
      type: Windows.Storage.StorageFile
      description: The target file.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: An <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadToFileAsync(Windows.Storage.StorageFile,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(StorageFile, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(Windows.Storage.StorageFile, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToFileAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 187
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads the contents of a blob to a file.\r\n"
  example: []
  syntax:
    content: public virtual Task DownloadToFileAsync(StorageFile target, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DownloadToFileAsync(target As StorageFile, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: target
      type: Windows.Storage.StorageFile
      description: The target file.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: An <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  id: DownloadToByteArrayAsync(System.Byte[],System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToByteArrayAsync(Byte[], Int32)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 256
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads the contents of a blob to a byte array.\r\n"
  example: []
  syntax:
    content: public virtual Task<int> DownloadToByteArrayAsync(byte[] target, int index)
    content.vb: Public Overridable Function DownloadToByteArrayAsync(target As Byte(), index As Integer) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The total number of bytes read into the buffer.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToByteArrayAsync(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 271
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads the contents of a blob to a byte array.\r\n"
  example: []
  syntax:
    content: public virtual Task<int> DownloadToByteArrayAsync(byte[] target, int index, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DownloadToByteArrayAsync(target As Byte(), index As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The total number of bytes read into the buffer.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToByteArrayAsync(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadToByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 287
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads the contents of a blob to a byte array.\r\n"
  example: []
  syntax:
    content: public virtual Task<int> DownloadToByteArrayAsync(byte[] target, int index, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DownloadToByteArrayAsync(target As Byte(), index As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The total number of bytes read into the buffer.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadRangeToStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 300
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a stream.\r\n"
  example: []
  syntax:
    content: public virtual Task DownloadRangeToStreamAsync(Stream target, long ? offset, long ? length)
    content.vb: Public Overridable Function DownloadRangeToStreamAsync(target As Stream, offset As Long?, length As Long?) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: The target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The offset at which to begin downloading the blob, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data to download from the blob, in bytes.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadRangeToStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 316
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a stream.\r\n"
  example: []
  syntax:
    content: public virtual Task DownloadRangeToStreamAsync(Stream target, long ? offset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DownloadRangeToStreamAsync(target As Stream, offset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: The target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The offset at which to begin downloading the blob, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data to download from the blob, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadRangeToStreamAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 333
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a stream.\r\n"
  example: []
  syntax:
    content: public virtual Task DownloadRangeToStreamAsync(Stream target, long ? offset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DownloadRangeToStreamAsync(target As Stream, offset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: The target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The offset at which to begin downloading the blob, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data to download from the blob, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadRangeToByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 357
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a byte array.\r\n"
  example: []
  syntax:
    content: public virtual Task<int> DownloadRangeToByteArrayAsync(byte[] target, int index, long ? blobOffset, long ? length)
    content.vb: Public Overridable Function DownloadRangeToByteArrayAsync(target As Byte(), index As Integer, blobOffset As Long?, length As Long?) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The total number of bytes read into the buffer.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadRangeToByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 374
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a byte array.\r\n"
  example: []
  syntax:
    content: public virtual Task<int> DownloadRangeToByteArrayAsync(byte[] target, int index, long ? blobOffset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DownloadRangeToByteArrayAsync(target As Byte(), index As Integer, blobOffset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The total number of bytes read into the buffer.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadRangeToByteArrayAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 392
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads a range of bytes from a blob to a byte array.\r\n"
  example: []
  syntax:
    content: public virtual Task<int> DownloadRangeToByteArrayAsync(byte[] target, int index, long ? blobOffset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DownloadRangeToByteArrayAsync(target As Byte(), index As Integer, blobOffset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The total number of bytes read into the buffer.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  id: ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 409
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChecks existence of the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync()
    content.vb: Public Overridable Function ExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the blob exists.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: ExistsAsync(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 421
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChecks existence of the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ExistsAsync(options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the blob exists.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: ExistsAsync(BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 434
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChecks existence of the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the blob exists.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  id: FetchAttributesAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 462
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nPopulates a blob's properties and metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync()
    content.vb: Public Overridable Function FetchAttributesAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 475
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nPopulates a blob's properties and metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function FetchAttributesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 489
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nPopulates a blob's properties and metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function FetchAttributesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  id: SetMetadataAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SetMetadataAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 504
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUpdates the blob's metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync()
    content.vb: Public Overridable Function SetMetadataAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 517
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUpdates the blob's metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetMetadataAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 531
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUpdates the blob's metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetMetadataAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  id: SetPropertiesAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SetPropertiesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPropertiesAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 547
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUpdates the blob's properties.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPropertiesAsync()
    content.vb: Public Overridable Function SetPropertiesAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SetPropertiesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPropertiesAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 560
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUpdates the blob's properties.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPropertiesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetPropertiesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SetPropertiesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPropertiesAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 574
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUpdates the blob's properties.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPropertiesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetPropertiesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 590
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync()
    content.vb: Public Overridable Function DeleteAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DeleteAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 604
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteAsync(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If null, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DeleteAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 619
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If null, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  id: DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 634
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the blob if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync()
    content.vb: Public Overridable Function DeleteIfExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the blob already existed and was deleted; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 648
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the blob if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteIfExistsAsync(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the blob already existed and was deleted; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 663
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the blob if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the blob already existed and was deleted; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AcquireLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 714
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAcquires a lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId = null)
    content.vb: Public Overridable Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String = Nothing) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not <code>null</code>, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The ID of the acquired lease.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AcquireLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 731
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAcquires a lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not <code>null</code>, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The options for this operation. If <code>null</code>, default options will be used.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The ID of the acquired lease.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AcquireLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 749
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAcquires a lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not <code>null</code>, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The options for this operation. If <code>null</code>, default options will be used.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The ID of the acquired lease.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 765
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRenews a lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task RenewLeaseAsync(AccessCondition accessCondition)
    content.vb: Public Overridable Function RenewLeaseAsync(accessCondition As AccessCondition) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 778
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRenews a lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task RenewLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function RenewLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The options for this operation. If <code>null</code>, default options will be used.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 792
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRenews a lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task RenewLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function RenewLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The options for this operation. If <code>null</code>, default options will be used.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 809
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChanges the lease ID on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition)
    content.vb: Public Overridable Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be <code>null</code>.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The new lease ID.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 823
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChanges the lease ID on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be <code>null</code>.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The options for this operation. If <code>null</code>, default options will be used.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The new lease ID.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 838
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChanges the lease ID on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be <code>null</code>.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The options for this operation. If <code>null</code>, default options will be used.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The new lease ID.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReleaseLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 854
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReleases the lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task ReleaseLeaseAsync(AccessCondition accessCondition)
    content.vb: Public Overridable Function ReleaseLeaseAsync(accessCondition As AccessCondition) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReleaseLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 867
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReleases the lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task ReleaseLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ReleaseLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The options for this operation. If <code>null</code>, default options will be used.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReleaseLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 881
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReleases the lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task ReleaseLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ReleaseLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The options for this operation. If <code>null</code>, default options will be used.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BreakLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 899
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBreaks the current lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod)
    content.vb: Public Overridable Function BreakLeaseAsync(breakPeriod As TimeSpan?) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time before the lease ends, to the second.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan))
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BreakLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 915
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBreaks the current lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function BreakLeaseAsync(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If null, the break period is the remainder of the current lease,

        or zero for infinite leases.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If null, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The options for this operation. If null, default options will be used.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time before the lease ends, to the second.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BreakLeaseAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 932
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBreaks the current lease on this blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function BreakLeaseAsync(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If null, the break period is the remainder of the current lease,

        or zero for infinite leases.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If null, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The options for this operation. If null, default options will be used.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="Windows.Foundation.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time before the lease ends, to the second.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  id: SnapshotAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SnapshotAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 947
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nCreates a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudBlob> SnapshotAsync()
    content.vb: Public Overridable Function SnapshotAsync As Task(Of CloudBlob)
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudBlob}
      description: A blob snapshot.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotAsync(IDictionary<String, String>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SnapshotAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 961
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nCreates a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudBlob> SnapshotAsync(IDictionary<string, string> metadata, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SnapshotAsync(metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of CloudBlob)
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A collection of name-value pairs defining the metadata of the snapshot.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: An object that specifies additional options for the request, or <code>null</code>.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudBlob}
      description: A blob snapshot.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: SnapshotAsync(IDictionary(Of String, String), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotAsync(IDictionary<String, String>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SnapshotAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 976
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nCreates a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudBlob> SnapshotAsync(IDictionary<string, string> metadata, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SnapshotAsync(metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudBlob)
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A collection of name-value pairs defining the metadata of the snapshot.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request, or <code>null</code>.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudBlob}
      description: A blob snapshot.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: SnapshotAsync(IDictionary(Of String, String), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)
  id: StartCopyAsync(System.Uri)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: StartCopyAsync(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartCopyAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 997
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an operation to start copying an existing blob's contents, properties, and metadata to a new blob.\r\n"
  remarks: "\r\nThis method fetches the blob's ETag, last modified time, and part of the copy state.\r\nThe copy ID and copy status fields are fetched, and the rest of the copy state is cleared.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> StartCopyAsync(Uri source)
    content.vb: Public Overridable Function StartCopyAsync(source As Uri) As Task(Of String)
    parameters:
    - id: source
      type: System.Uri
      description: The URI of a source blob.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The copy ID associated with the copy operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: StartCopyAsync(Uri, AccessCondition, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartCopyAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 1012
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an operation to start copying an existing blob's contents, properties, and metadata to a new blob.\r\n"
  remarks: "\r\nThis method fetches the blob's ETag, last modified time, and part of the copy state.\r\nThe copy ID and copy status fields are fetched, and the rest of the copy state is cleared.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> StartCopyAsync(Uri source, AccessCondition sourceAccessCondition, AccessCondition destAccessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function StartCopyAsync(source As Uri, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: source
      type: System.Uri
      description: The URI of a source blob.
    - id: sourceAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
    - id: destAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The copy ID associated with the copy operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: StartCopyAsync(Uri, AccessCondition, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartCopyAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 1032
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an operation to start copying a blob's contents, properties, and metadata to a new blob.\r\n"
  remarks: "\r\nThis method fetches the blob's ETag, last modified time, and part of the copy state.\r\nThe copy ID and copy status fields are fetched, and the rest of the copy state is cleared.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> StartCopyAsync(Uri source, AccessCondition sourceAccessCondition, AccessCondition destAccessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function StartCopyAsync(source As Uri, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: source
      type: System.Uri
      description: The URI of a source blob.
    - id: sourceAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An object that represents the access conditions for the source blob. If <code>null</code>, no condition is used.
    - id: destAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An object that represents the access conditions for the destination blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The copy ID associated with the copy operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)
  id: AbortCopyAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: AbortCopyAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AbortCopyAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 1049
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAborts an ongoing blob copy operation.\r\n"
  example: []
  syntax:
    content: public virtual Task AbortCopyAsync(string copyId)
    content.vb: Public Overridable Function AbortCopyAsync(copyId As String) As Task
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: AbortCopyAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AbortCopyAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 1063
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAborts an ongoing blob copy operation.\r\n"
  example: []
  syntax:
    content: public virtual Task AbortCopyAsync(string copyId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AbortCopyAsync(copyId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: AbortCopyAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AbortCopyAsync
    path: src/Storage/Lib/WindowsRuntime/Blob/CloudBlob.cs
    startLine: 1079
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAborts an ongoing blob copy operation.\r\n"
  example: []
  syntax:
    content: public virtual Task AbortCopyAsync(string copyId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AbortCopyAsync(copyId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents an asynchronous action.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(System.Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: CloudBlob(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CloudBlob(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the blob.\r\n"
  example: []
  syntax:
    content: public CloudBlob(Uri blobAbsoluteUri)
    content.vb: Public Sub New(blobAbsoluteUri As Uri)
    parameters:
    - id: blobAbsoluteUri
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the blob.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: CloudBlob(Uri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CloudBlob(System.Uri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the blob.\r\n"
  example: []
  syntax:
    content: public CloudBlob(Uri blobAbsoluteUri, StorageCredentials credentials)
    content.vb: Public Sub New(blobAbsoluteUri As Uri, credentials As StorageCredentials)
    parameters:
    - id: blobAbsoluteUri
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the blob.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: CloudBlob(Uri, Nullable<DateTimeOffset>, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CloudBlob(System.Uri, System.Nullable<System.DateTimeOffset>, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the blob.\r\n"
  example: []
  syntax:
    content: public CloudBlob(Uri blobAbsoluteUri, DateTimeOffset? snapshotTime, StorageCredentials credentials)
    content.vb: Public Sub New(blobAbsoluteUri As Uri, snapshotTime As DateTimeOffset?, credentials As StorageCredentials)
    parameters:
    - id: blobAbsoluteUri
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the blob.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CloudBlob(System.Uri, System.Nullable(Of System.DateTimeOffset), Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  name.vb: CloudBlob(Uri, Nullable(Of DateTimeOffset), StorageCredentials)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Microsoft.WindowsAzure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: CloudBlob(StorageUri, Nullable<DateTimeOffset>, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CloudBlob(Microsoft.WindowsAzure.Storage.StorageUri, System.Nullable<System.DateTimeOffset>, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 75
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the blob.\r\n"
  example: []
  syntax:
    content: public CloudBlob(StorageUri blobAbsoluteUri, DateTimeOffset? snapshotTime, StorageCredentials credentials)
    content.vb: Public Sub New(blobAbsoluteUri As StorageUri, snapshotTime As DateTimeOffset?, credentials As StorageCredentials)
    parameters:
    - id: blobAbsoluteUri
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri" data-throw-if-not-resolved="false"></xref> containing the absolute URI to the blob at both the primary and secondary locations.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CloudBlob(Microsoft.WindowsAzure.Storage.StorageUri, System.Nullable(Of System.DateTimeOffset), Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  name.vb: CloudBlob(StorageUri, Nullable(Of DateTimeOffset), StorageCredentials)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ServiceClient
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceClient
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 141
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\"></xref> object that represents the Blob service.\r\n"
  example: []
  syntax:
    content: >-
      public CloudBlobClient ServiceClient

      {
          get;
      }
    content.vb: Public ReadOnly Property ServiceClient As CloudBlobClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes
  id: StreamMinimumReadSizeInBytes
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: StreamMinimumReadSizeInBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StreamMinimumReadSizeInBytes
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 147
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the minimum number of bytes to buffer when reading from a blob stream.\r\n"
  example: []
  syntax:
    content: >-
      public int StreamMinimumReadSizeInBytes

      {
          get;
          set;
      }
    content.vb: Public Property StreamMinimumReadSizeInBytes As Integer
    parameters: []
    return:
      type: System.Int32
      description: The minimum number of bytes to buffer, being at least 16 KB.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Properties
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Properties
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 165
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the blob's system properties.\r\n"
  example: []
  syntax:
    content: >-
      public BlobProperties Properties

      {
          get;
      }
    content.vb: Public ReadOnly Property Properties As BlobProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobProperties" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Metadata
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Metadata
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 177
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the user-defined metadata for the blob.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> Metadata

      {
          get;
      }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: An <xref href="System.Collections.Generic.IDictionary`2" data-throw-if-not-resolved="false"></xref> object containing the blob's metadata as a collection of name-value pairs.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Uri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Uri
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 189
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the blob's URI for the primary location.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Uri

      {
          get;
      }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the blob at the primary location.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri
  id: StorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageUri
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 201
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the blob's URIs for both the primary and secondary locations.\r\n"
  example: []
  syntax:
    content: >-
      public StorageUri StorageUri

      {
          get;
      }
    content.vb: Public ReadOnly Property StorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri" data-throw-if-not-resolved="false"></xref> containing the blob's URIs for both the primary and secondary locations.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotTime
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotTime
  id: SnapshotTime
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotTime
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotTime
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SnapshotTime
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 216
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the date and time that the blob snapshot was taken, if this blob is a snapshot.\r\n"
  remarks: "\r\nIf the blob is not a snapshot, the value of this property is <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public DateTimeOffset? SnapshotTime

      {
          get;
      }
    content.vb: Public ReadOnly Property SnapshotTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> containing the blob's snapshot time if the blob is a snapshot; otherwise, <code>null</code>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.IsSnapshot
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.IsSnapshot
  id: IsSnapshot
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: IsSnapshot
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.IsSnapshot
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsSnapshot
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 233
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a value indicating whether this blob is a snapshot.\r\n"
  example: []
  syntax:
    content: >-
      public bool IsSnapshot

      {
          get;
      }
    content.vb: Public ReadOnly Property IsSnapshot As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this blob is a snapshot; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedUri
  id: SnapshotQualifiedUri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotQualifiedUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedUri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SnapshotQualifiedUri
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 245
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the absolute URI to the blob, including query string information if the blob is a snapshot.\r\n"
  example: []
  syntax:
    content: >-
      public Uri SnapshotQualifiedUri

      {
          get;
      }
    content.vb: Public ReadOnly Property SnapshotQualifiedUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the blob, including snapshot query information if the blob is a snapshot.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedStorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedStorageUri
  id: SnapshotQualifiedStorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotQualifiedStorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedStorageUri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SnapshotQualifiedStorageUri
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 267
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the blob's URI for both the primary and secondary locations, including query string information if the blob is a snapshot.\r\n"
  example: []
  syntax:
    content: >-
      public StorageUri SnapshotQualifiedStorageUri

      {
          get;
      }
    content.vb: Public ReadOnly Property SnapshotQualifiedStorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: "An object of type <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri\" data-throw-if-not-resolved=\"false\"></xref> containing the blob's URIs for both the primary and secondary locations, \r\nincluding snapshot query information if the blob is a snapshot."
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CopyState
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CopyState
  id: CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CopyState
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CopyState
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 288
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the state of the most recent or pending copy operation.\r\n"
  example: []
  syntax:
    content: >-
      public CopyState CopyState

      {
          get;
      }
    content.vb: Public ReadOnly Property CopyState As CopyState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CopyState
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CopyState" data-throw-if-not-resolved="false"></xref> object containing the copy state, or <code>null</code> if there is no copy state for the blob.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Name
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 300
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the name of the blob.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {
          get;
      }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string containing the name of the blob.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Container
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Container
  id: Container
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: Container
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Container
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Container
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 306
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\"></xref> object representing the blob's container.\r\n"
  example: []
  syntax:
    content: >-
      public CloudBlobContainer Container

      {
          get;
      }
    content.vb: Public ReadOnly Property Container As CloudBlobContainer
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Parent
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Parent
  id: Parent
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: Parent
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Parent
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Parent
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 324
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory\" data-throw-if-not-resolved=\"false\"></xref> object representing the virtual parent directory for the blob.\r\n"
  example: []
  syntax:
    content: >-
      public CloudBlobDirectory Parent

      {
          get;
      }
    content.vb: Public ReadOnly Property Parent As CloudBlobDirectory
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BlobType
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BlobType
  id: BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BlobType
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BlobType
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 346
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the type of the blob.\r\n"
  example: []
  syntax:
    content: >-
      public BlobType BlobType

      {
          get;
      }
    content.vb: Public ReadOnly Property BlobType As BlobType
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobType
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BlobType" data-throw-if-not-resolved="false"></xref> enumeration value.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 365
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the blob.\r\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessBlobPolicy policy)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 378
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the blob.\r\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: >-
      [DefaultOverload]

      public string GetSharedAccessSignature(SharedAccessBlobPolicy policy, string groupPolicyIdentifier)
    content.vb: >-
      <DefaultOverload>

      Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, groupPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: groupPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  attributes:
  - type: Windows.Foundation.Metadata.DefaultOverloadAttribute
    ctor: Windows.Foundation.Metadata.DefaultOverloadAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 391
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the blob.\r\n"
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, headers As SharedAccessBlobHeaders) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: headers
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false"></xref> object specifying optional header values to set for a blob accessed with this SAS.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 403
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the blob.\r\n"
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, string groupPolicyIdentifier)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, headers As SharedAccessBlobHeaders, groupPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: headers
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false"></xref> object specifying optional header values to set for a blob accessed with this SAS.
    - id: groupPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String, System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>, Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/CloudBlob.Common.cs
    startLine: 417
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the blob.\r\n"
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, string groupPolicyIdentifier, SharedAccessProtocol? protocols, IPAddressOrRange ipAddressOrRange)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, headers As SharedAccessBlobHeaders, groupPolicyIdentifier As String, protocols As SharedAccessProtocol?, ipAddressOrRange As IPAddressOrRange) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: headers
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false"></xref> object specifying optional header values to set for a blob accessed with this SAS.
    - id: groupPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    - id: protocols
      type: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
      description: The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.
    - id: ipAddressOrRange
      type: Microsoft.WindowsAzure.Storage.IPAddressOrRange
      description: The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String, System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol), Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  name.vb: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: IListBlobItem
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Storage.AccessCondition
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: AccessCondition
  fullName: Microsoft.WindowsAzure.Storage.AccessCondition
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: Windows.Storage.StorageFile
  parent: Windows.Storage
  isExternal: true
  name: StorageFile
  fullName: Windows.Storage.StorageFile
- uid: Windows.Storage
  isExternal: false
  name: Windows.Storage
  fullName: Windows.Storage
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: DeleteSnapshotsOption
  fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
- uid: Windows.Foundation.TimeSpan
- uid: System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.TimeSpan}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TimeSpan>
  fullName: System.Threading.Tasks.Task<System.TimeSpan>
  fullname.vb: System.Threading.Tasks.Task(Of System.TimeSpan)
  name.vb: Task(Of TimeSpan)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudBlob}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CloudBlob>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Blob.CloudBlob>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Blob.CloudBlob)
  name.vb: Task(Of CloudBlob)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
    name: CloudBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
    name: CloudBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
- uid: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth
  fullName: Microsoft.WindowsAzure.Storage.Auth
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CopyState
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobContainer
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobDirectory
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: SharedAccessBlobPolicy
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: SharedAccessBlobHeaders
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SharedAccessProtocol>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol)
  name.vb: Nullable(Of SharedAccessProtocol)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.IPAddressOrRange
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IPAddressOrRange
  fullName: Microsoft.WindowsAzure.Storage.IPAddressOrRange
