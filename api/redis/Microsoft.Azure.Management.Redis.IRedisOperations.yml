items:
- uid: Microsoft.Azure.Management.Redis.IRedisOperations
  commentId: T:Microsoft.Azure.Management.Redis.IRedisOperations
  id: IRedisOperations
  parent: Microsoft.Azure.Management.Redis
  children:
  - Microsoft.Azure.Management.Redis.IRedisOperations.CreateOrUpdateAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ListAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ListKeysAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.ListNextAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.IRedisOperations.RegenerateKeyAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IRedisOperations
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations
  type: Interface
  source:
    remote:
      path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IRedisOperations
    path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\r\nOperations for managing the redis cache.\r\n"
  example: []
  syntax:
    content: public interface IRedisOperations
    content.vb: Public Interface IRedisOperations
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.CreateOrUpdateAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.CreateOrUpdateAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(String, String, RedisCreateOrUpdateParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.CreateOrUpdateAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateOrUpdateAsync
    path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\r\nCreate a redis cache, or replace (overwrite/recreate, with\r\npotential downtime) an existing cache\r\n"
  example: []
  syntax:
    content: Task<RedisCreateOrUpdateResponse> CreateOrUpdateAsync(string resourceGroupName, string name, RedisCreateOrUpdateParameters parameters, CancellationToken cancellationToken)
    content.vb: Function CreateOrUpdateAsync(resourceGroupName As String, name As String, parameters As RedisCreateOrUpdateParameters, cancellationToken As CancellationToken) As Task(Of RedisCreateOrUpdateResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\r\nThe name of the resource group.\r\n"
    - id: name
      type: System.String
      description: "\r\nThe name of the redis cache.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
      description: "\r\nParameters supplied to the CreateOrUpdate redis operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateResponse}
      description: "\r\nThe response of CreateOrUpdate redis operation.\r\n"
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: DeleteAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.DeleteAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\r\nDeletes a redis cache. This operation takes a while to complete.\r\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> DeleteAsync(string resourceGroupName, string name, CancellationToken cancellationToken)
    content.vb: Function DeleteAsync(resourceGroupName As String, name As String, cancellationToken As CancellationToken) As Task(Of AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\r\nThe name of the resource group.\r\n"
    - id: name
      type: System.String
      description: "\r\nThe name of the redis cache.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: GetAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.GetAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAsync
    path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\r\nGets a redis cache (resource description).\r\n"
  example: []
  syntax:
    content: Task<RedisGetResponse> GetAsync(string resourceGroupName, string name, CancellationToken cancellationToken)
    content.vb: Function GetAsync(resourceGroupName As String, name As String, cancellationToken As CancellationToken) As Task(Of RedisGetResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\r\nThe name of the resource group.\r\n"
    - id: name
      type: System.String
      description: "\r\nThe name of the redis cache.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisGetResponse}
      description: "\r\nThe response of GET redis operation.\r\n"
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ListAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ListAsync(System.String,System.Threading.CancellationToken)
  id: ListAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ListAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListAsync
    path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\r\nGets all redis caches in a resource group (if provided) otherwise\r\nall in subscription.\r\n"
  example: []
  syntax:
    content: Task<RedisListResponse> ListAsync(string resourceGroupName, CancellationToken cancellationToken)
    content.vb: Function ListAsync(resourceGroupName As String, cancellationToken As CancellationToken) As Task(Of RedisListResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\r\nThe name of the resource group.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisListResponse}
      description: "\r\nThe response of list redis operation.\r\n"
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ListKeysAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ListKeysAsync(System.String,System.String,System.Threading.CancellationToken)
  id: ListKeysAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListKeysAsync(String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ListKeysAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListKeysAsync
    path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
    startLine: 122
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\r\nRetrieve a redis cache's access keys. This operation requires write\r\npermission to the cache resource.\r\n"
  example: []
  syntax:
    content: Task<RedisListKeysResponse> ListKeysAsync(string resourceGroupName, string name, CancellationToken cancellationToken)
    content.vb: Function ListKeysAsync(resourceGroupName As String, name As String, cancellationToken As CancellationToken) As Task(Of RedisListKeysResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\r\nThe name of the resource group.\r\n"
    - id: name
      type: System.String
      description: "\r\nThe name of the redis cache.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisListKeysResponse}
      description: "\r\nThe response of redis list keys operation.\r\n"
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.ListNextAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.ListNextAsync(System.String,System.Threading.CancellationToken)
  id: ListNextAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: ListNextAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.ListNextAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListNextAsync
    path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
    startLine: 136
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\r\nGets all redis caches using next link.\r\n"
  example: []
  syntax:
    content: Task<RedisListResponse> ListNextAsync(string nextLink, CancellationToken cancellationToken)
    content.vb: Function ListNextAsync(nextLink As String, cancellationToken As CancellationToken) As Task(Of RedisListResponse)
    parameters:
    - id: nextLink
      type: System.String
      description: "\r\nNextLink from the previous successful call to List operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisListResponse}
      description: "\r\nThe response of list redis operation.\r\n"
- uid: Microsoft.Azure.Management.Redis.IRedisOperations.RegenerateKeyAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.IRedisOperations.RegenerateKeyAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  id: RegenerateKeyAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Redis.IRedisOperations
  langs:
  - csharp
  - vb
  name: RegenerateKeyAsync(String, String, RedisRegenerateKeyParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations.RegenerateKeyAsync(System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RegenerateKeyAsync
    path: src/src/ResourceManagement/RedisCache/RedisCacheManagement/Generated/IRedisOperations.cs
    startLine: 158
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\r\nRegenerate redis cache's access keys. This operation requires write\r\npermission to the cache resource.\r\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> RegenerateKeyAsync(string resourceGroupName, string name, RedisRegenerateKeyParameters parameters, CancellationToken cancellationToken)
    content.vb: Function RegenerateKeyAsync(resourceGroupName As String, name As String, parameters As RedisRegenerateKeyParameters, cancellationToken As CancellationToken) As Task(Of AzureOperationResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\r\nThe name of the resource group.\r\n"
    - id: name
      type: System.String
      description: "\r\nThe name of the redis cache.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
      description: "\r\nSpecifies which key to reset.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
references:
- uid: Microsoft.Azure.Management.Redis
  isExternal: false
  name: Microsoft.Azure.Management.Redis
  fullName: Microsoft.Azure.Management.Redis
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisCreateOrUpdateParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateParameters
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisCreateOrUpdateResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateResponse)
  name.vb: Task(Of RedisCreateOrUpdateResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateResponse
    name: RedisCreateOrUpdateResponse
    fullName: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateResponse
    name: RedisCreateOrUpdateResponse
    fullName: Microsoft.Azure.Management.Redis.Models.RedisCreateOrUpdateResponse
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: Microsoft.Azure.Management.Redis.Models
  fullName: Microsoft.Azure.Management.Redis.Models
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisGetResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisGetResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Redis.Models.RedisGetResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Redis.Models.RedisGetResponse)
  name.vb: Task(Of RedisGetResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisGetResponse
    name: RedisGetResponse
    fullName: Microsoft.Azure.Management.Redis.Models.RedisGetResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisGetResponse
    name: RedisGetResponse
    fullName: Microsoft.Azure.Management.Redis.Models.RedisGetResponse
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisListResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisListResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Redis.Models.RedisListResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Redis.Models.RedisListResponse)
  name.vb: Task(Of RedisListResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisListResponse
    name: RedisListResponse
    fullName: Microsoft.Azure.Management.Redis.Models.RedisListResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisListResponse
    name: RedisListResponse
    fullName: Microsoft.Azure.Management.Redis.Models.RedisListResponse
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisListKeysResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisListKeysResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Redis.Models.RedisListKeysResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Redis.Models.RedisListKeysResponse)
  name.vb: Task(Of RedisListKeysResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisListKeysResponse
    name: RedisListKeysResponse
    fullName: Microsoft.Azure.Management.Redis.Models.RedisListKeysResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisListKeysResponse
    name: RedisListKeysResponse
    fullName: Microsoft.Azure.Management.Redis.Models.RedisListKeysResponse
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisRegenerateKeyParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
