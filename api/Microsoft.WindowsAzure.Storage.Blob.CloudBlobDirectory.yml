items:
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  id: CloudBlobDirectory
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Container
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetDirectoryReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Parent
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Prefix
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ServiceClient
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.StorageUri
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Uri
  langs:
  - csharp
  - vb
  name: CloudBlobDirectory
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  type: Class
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CloudBlobDirectory
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRepresents a virtual directory of blobs on the client which emulates a hierarchical data store by using delimiter characters.\r\n"
  example: []
  syntax:
    content: 'public class CloudBlobDirectory : IListBlobItem'
    content.vb: >-
      Public Class CloudBlobDirectory

          Implements IListBlobItem
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  id: ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(BlobContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  type: Method
  source:
    remote:
      path: src/Storage/WindowsRuntime/Blob/CloudBlobDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmentedAsync
    path: src/Storage/WindowsRuntime/Blob/CloudBlobDirectory.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(BlobContinuationToken currentToken)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(currentToken As BlobContinuationToken) As Task(Of BlobResultSegment)
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken" data-throw-if-not-resolved="false"></xref> token returned by a previous listing operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ListBlobsSegmentedAsync(System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(Boolean, BlobListingDetails, Nullable<Int32>, BlobContinuationToken, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/WindowsRuntime/Blob/CloudBlobDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmentedAsync
    path: src/Storage/WindowsRuntime/Blob/CloudBlobDirectory.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(bool useFlatBlobListing, BlobListingDetails blobListingDetails, int ? maxResults, BlobContinuationToken currentToken, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(useFlatBlobListing As Boolean, blobListingDetails As BlobListingDetails, maxResults As Integer?, currentToken As BlobContinuationToken, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of BlobResultSegment)
    parameters:
    - id: useFlatBlobListing
      type: System.Boolean
      description: Whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.
    - id: blobListingDetails
      type: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails" data-throw-if-not-resolved="false"></xref> enumeration describing which items to include in the listing.
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \r\nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ListBlobsSegmentedAsync(Boolean, BlobListingDetails, Nullable(Of Int32), BlobContinuationToken, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ListBlobsSegmentedAsync(System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(Boolean, BlobListingDetails, Nullable<Int32>, BlobContinuationToken, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/WindowsRuntime/Blob/CloudBlobDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmentedAsync
    path: src/Storage/WindowsRuntime/Blob/CloudBlobDirectory.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(bool useFlatBlobListing, BlobListingDetails blobListingDetails, int ? maxResults, BlobContinuationToken currentToken, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(useFlatBlobListing As Boolean, blobListingDetails As BlobListingDetails, maxResults As Integer?, currentToken As BlobContinuationToken, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of BlobResultSegment)
    parameters:
    - id: useFlatBlobListing
      type: System.Boolean
      description: Whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.
    - id: blobListingDetails
      type: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails" data-throw-if-not-resolved="false"></xref> enumeration describing which items to include in the listing.
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \r\nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: An object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ListBlobsSegmentedAsync(System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: ListBlobsSegmentedAsync(Boolean, BlobListingDetails, Nullable(Of Int32), BlobContinuationToken, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.ServiceClient
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceClient
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the Blob service client for the virtual directory.\r\n"
  example: []
  syntax:
    content: >-
      public CloudBlobClient ServiceClient

      {

          get;

      }
    content.vb: Public ReadOnly Property ServiceClient As CloudBlobClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Uri
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Uri
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the URI that identifies the virtual directory for the primary location.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Uri

      {

          get;

      }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> containing the URI to the virtual directory, at the primary location.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.StorageUri
  id: StorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.StorageUri
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageUri
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the blob directory's URIs for both the primary and secondary locations.\r\n"
  example: []
  syntax:
    content: >-
      public StorageUri StorageUri

      {

          get;

      }
    content.vb: Public ReadOnly Property StorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.StorageUri" data-throw-if-not-resolved="false"></xref> containing the blob directory's URIs for both the primary and secondary locations.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Container
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Container
  id: Container
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: Container
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Container
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Container
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the container for the virtual directory.\r\n"
  example: []
  syntax:
    content: >-
      public CloudBlobContainer Container

      {

          get;

      }
    content.vb: Public ReadOnly Property Container As CloudBlobContainer
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Parent
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Parent
  id: Parent
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: Parent
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Parent
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Parent
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the parent directory for the virtual directory.\r\n"
  example: []
  syntax:
    content: >-
      public CloudBlobDirectory Parent

      {

          get;

      }
    content.vb: Public ReadOnly Property Parent As CloudBlobDirectory
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Prefix
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Prefix
  id: Prefix
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: Prefix
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.Prefix
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Prefix
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 106
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the prefix.\r\n"
  example: []
  syntax:
    content: >-
      public string Prefix

      {

          get;

      }
    content.vb: Public ReadOnly Property Prefix As String
    parameters: []
    return:
      type: System.String
      description: A string containing the prefix.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String)
  id: GetPageBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: GetPageBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPageBlobReference
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 113
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a page blob in this virtual directory.\r\n"
  example: []
  syntax:
    content: public CloudPageBlob GetPageBlobReference(string blobName)
    content.vb: Public Function GetPageBlobReference(blobName As String) As CloudPageBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  id: GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: GetPageBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String, System.Nullable<System.DateTimeOffset>)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPageBlobReference
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 124
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a reference to a page blob in this virtual directory.\r\n"
  example: []
  syntax:
    content: public CloudPageBlob GetPageBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetPageBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudPageBlob
    parameters:
    - id: blobName
      type: System.String
      description: The name of the page blob.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetPageBlobReference(System.String, System.Nullable(Of System.DateTimeOffset))
  name.vb: GetPageBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String)
  id: GetBlockBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: GetBlockBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlockBlobReference
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 137
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a block blob in this virtual directory.\r\n"
  example: []
  syntax:
    content: public CloudBlockBlob GetBlockBlobReference(string blobName)
    content.vb: Public Function GetBlockBlobReference(blobName As String) As CloudBlockBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  id: GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: GetBlockBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String, System.Nullable<System.DateTimeOffset>)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlockBlobReference
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 148
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a block blob in this virtual directory.\r\n"
  example: []
  syntax:
    content: public CloudBlockBlob GetBlockBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetBlockBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudBlockBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlockBlobReference(System.String, System.Nullable(Of System.DateTimeOffset))
  name.vb: GetBlockBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String)
  id: GetAppendBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: GetAppendBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAppendBlobReference
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 161
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to an append blob in this virtual directory.\r\n"
  example: []
  syntax:
    content: public CloudAppendBlob GetAppendBlobReference(string blobName)
    content.vb: Public Function GetAppendBlobReference(blobName As String) As CloudAppendBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  id: GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: GetAppendBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String, System.Nullable<System.DateTimeOffset>)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAppendBlobReference
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 172
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to an append blob in this virtual directory.\r\n"
  example: []
  syntax:
    content: public CloudAppendBlob GetAppendBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetAppendBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudAppendBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetAppendBlobReference(System.String, System.Nullable(Of System.DateTimeOffset))
  name.vb: GetAppendBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String)
  id: GetBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: GetBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlobReference
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 185
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a blob in this virtual directory.\r\n"
  example: []
  syntax:
    content: public CloudBlob GetBlobReference(string blobName)
    content.vb: Public Function GetBlobReference(blobName As String) As CloudBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  id: GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: GetBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String, System.Nullable<System.DateTimeOffset>)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlobReference
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 196
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a blob in this virtual directory.\r\n"
  example: []
  syntax:
    content: public CloudBlob GetBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetBlobReference(System.String, System.Nullable(Of System.DateTimeOffset))
  name.vb: GetBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetDirectoryReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetDirectoryReference(System.String)
  id: GetDirectoryReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  langs:
  - csharp
  - vb
  name: GetDirectoryReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.GetDirectoryReference(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDirectoryReference
    path: src/Storage/Common/Blob/CloudBlobDirectory.Common.cs
    startLine: 209
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a virtual subdirectory within this virtual directory.\r\n"
  example: []
  syntax:
    content: public CloudBlobDirectory GetDirectoryReference(string itemName)
    content.vb: Public Function GetDirectoryReference(itemName As String) As CloudBlobDirectory
    parameters:
    - id: itemName
      type: System.String
      description: The name of the virtual subdirectory.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory" data-throw-if-not-resolved="false"></xref> object representing the virtual subdirectory.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: IListBlobItem
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BlobResultSegment>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment)
  name.vb: Task(Of BlobResultSegment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
    name: BlobResultSegment
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
    name: BlobResultSegment
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobListingDetails
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory.StorageUri
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobContainer
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobDirectory
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudPageBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlockBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudAppendBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
