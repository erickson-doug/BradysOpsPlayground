items:
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType
  commentId: T:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType
  id: ExpressRouteCircuitPeeringType
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.AzurePrivatePeering
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.AzurePublicPeering
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.MicrosoftPeering
  langs:
  - csharp
  - vb
  name: ExpressRouteCircuitPeeringType
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeeringType.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExpressRouteCircuitPeeringType
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeeringType.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nType of the peering\r\n"
  example: []
  syntax:
    content: public class ExpressRouteCircuitPeeringType
    content.vb: Public Class ExpressRouteCircuitPeeringType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.AzurePublicPeering
  commentId: F:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.AzurePublicPeering
  id: AzurePublicPeering
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType
  langs:
  - csharp
  - vb
  name: AzurePublicPeering
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.AzurePublicPeering
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeeringType.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AzurePublicPeering
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeeringType.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  syntax:
    content: public const string AzurePublicPeering = "AzurePublicPeering"
    content.vb: Public Const AzurePublicPeering As String = "AzurePublicPeering"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.AzurePrivatePeering
  commentId: F:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.AzurePrivatePeering
  id: AzurePrivatePeering
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType
  langs:
  - csharp
  - vb
  name: AzurePrivatePeering
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.AzurePrivatePeering
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeeringType.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AzurePrivatePeering
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeeringType.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  syntax:
    content: public const string AzurePrivatePeering = "AzurePrivatePeering"
    content.vb: Public Const AzurePrivatePeering As String = "AzurePrivatePeering"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.MicrosoftPeering
  commentId: F:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.MicrosoftPeering
  id: MicrosoftPeering
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType
  langs:
  - csharp
  - vb
  name: MicrosoftPeering
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringType.MicrosoftPeering
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeeringType.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MicrosoftPeering
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeeringType.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  syntax:
    content: public const string MicrosoftPeering = "MicrosoftPeering"
    content.vb: Public Const MicrosoftPeering As String = "MicrosoftPeering"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
