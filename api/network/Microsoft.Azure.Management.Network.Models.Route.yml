items:
- uid: Microsoft.Azure.Management.Network.Models.Route
  commentId: T:Microsoft.Azure.Management.Network.Models.Route
  id: Route
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.Route.#ctor
  - Microsoft.Azure.Management.Network.Models.Route.#ctor(System.String)
  - Microsoft.Azure.Management.Network.Models.Route.AddressPrefix
  - Microsoft.Azure.Management.Network.Models.Route.NextHopIpAddress
  - Microsoft.Azure.Management.Network.Models.Route.NextHopType
  - Microsoft.Azure.Management.Network.Models.Route.ProvisioningState
  langs:
  - csharp
  - vb
  name: Route
  fullName: Microsoft.Azure.Management.Network.Models.Route
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Route
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nRoute resource\r\n"
  example: []
  syntax:
    content: 'public class Route : ChildResource'
    content.vb: >-
      Public Class Route

          Inherits ChildResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.ResourceId
  - Microsoft.Azure.Management.Network.Models.ChildResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.ChildResource.Etag
  - Microsoft.Azure.Management.Network.Models.ChildResource.Name
  - Microsoft.Azure.Management.Network.Models.ResourceId.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.Route.AddressPrefix
  commentId: P:Microsoft.Azure.Management.Network.Models.Route.AddressPrefix
  id: AddressPrefix
  parent: Microsoft.Azure.Management.Network.Models.Route
  langs:
  - csharp
  - vb
  name: AddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.Route.AddressPrefix
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddressPrefix
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the destination CIDR to which the route\r\napplies.\r\n"
  example: []
  syntax:
    content: >-
      public string AddressPrefix

      {

          get;

          set;

      }
    content.vb: Public Property AddressPrefix As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Route.NextHopIpAddress
  commentId: P:Microsoft.Azure.Management.Network.Models.Route.NextHopIpAddress
  id: NextHopIpAddress
  parent: Microsoft.Azure.Management.Network.Models.Route
  langs:
  - csharp
  - vb
  name: NextHopIpAddress
  fullName: Microsoft.Azure.Management.Network.Models.Route.NextHopIpAddress
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NextHopIpAddress
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the IP address packets should be forwarded\r\nto. Next hop values are only allowed in routes where the next hop\r\ntype is VirtualAppliance.\r\n"
  example: []
  syntax:
    content: >-
      public string NextHopIpAddress

      {

          get;

          set;

      }
    content.vb: Public Property NextHopIpAddress As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Route.NextHopType
  commentId: P:Microsoft.Azure.Management.Network.Models.Route.NextHopType
  id: NextHopType
  parent: Microsoft.Azure.Management.Network.Models.Route
  langs:
  - csharp
  - vb
  name: NextHopType
  fullName: Microsoft.Azure.Management.Network.Models.Route.NextHopType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NextHopType
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nRequired. Gets or sets the type of Azure hop the packet should be\r\nsent to.\r\n"
  example: []
  syntax:
    content: >-
      public string NextHopType

      {

          get;

          set;

      }
    content.vb: Public Property NextHopType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Route.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.Route.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.Route
  langs:
  - csharp
  - vb
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.Route.ProvisioningState
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProvisioningState
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets Provisioning state of the resource\r\nUpdating/Deleting/Failed\r\n"
  example: []
  syntax:
    content: >-
      public string ProvisioningState

      {

          get;

          set;

      }
    content.vb: Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Route.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.Route.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.Route
  langs:
  - csharp
  - vb
  name: Route()
  fullName: Microsoft.Azure.Management.Network.Models.Route.Route()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nInitializes a new instance of the Route class.\r\n"
  example: []
  syntax:
    content: public Route()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Route.#ctor(System.String)
  commentId: M:Microsoft.Azure.Management.Network.Models.Route.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.Management.Network.Models.Route
  langs:
  - csharp
  - vb
  name: Route(String)
  fullName: Microsoft.Azure.Management.Network.Models.Route.Route(System.String)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Route.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nInitializes a new instance of the Route class with required\r\narguments.\r\n"
  example: []
  syntax:
    content: public Route(string nextHopType)
    content.vb: Public Sub New(nextHopType As String)
    parameters:
    - id: nextHopType
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.ResourceId
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ResourceId
  fullName: Microsoft.Azure.Management.Network.Models.ResourceId
- uid: Microsoft.Azure.Management.Network.Models.ChildResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ChildResource
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource
- uid: Microsoft.Azure.Management.Network.Models.ChildResource.Etag
  parent: Microsoft.Azure.Management.Network.Models.ChildResource
  isExternal: false
  name: Etag
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource.Etag
- uid: Microsoft.Azure.Management.Network.Models.ChildResource.Name
  parent: Microsoft.Azure.Management.Network.Models.ChildResource
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource.Name
- uid: Microsoft.Azure.Management.Network.Models.ResourceId.Id
  parent: Microsoft.Azure.Management.Network.Models.ResourceId
  isExternal: false
  name: Id
  fullName: Microsoft.Azure.Management.Network.Models.ResourceId.Id
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
