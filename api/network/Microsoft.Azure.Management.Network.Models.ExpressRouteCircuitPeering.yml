items:
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  commentId: T:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  id: ExpressRouteCircuitPeering
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.#ctor
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.AzureASN
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.MicrosoftPeeringConfig
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PeerASN
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PeeringType
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PrimaryAzurePort
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PrimaryPeerAddressPrefix
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SecondaryAzurePort
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SecondaryPeerAddressPrefix
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SharedKey
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.State
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.Stats
  - Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.VlanId
  langs:
  - csharp
  - vb
  name: ExpressRouteCircuitPeering
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExpressRouteCircuitPeering
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nPeering in a ExpressRouteCircuit resource\r\n"
  example: []
  syntax:
    content: 'public class ExpressRouteCircuitPeering : ChildResource'
    content.vb: >-
      Public Class ExpressRouteCircuitPeering

          Inherits ChildResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.ResourceId
  - Microsoft.Azure.Management.Network.Models.ChildResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.ChildResource.Etag
  - Microsoft.Azure.Management.Network.Models.ChildResource.Name
  - Microsoft.Azure.Management.Network.Models.ResourceId.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.AzureASN
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.AzureASN
  id: AzureASN
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: AzureASN
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.AzureASN
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AzureASN
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the azure ASN\r\n"
  example: []
  syntax:
    content: >-
      public int AzureASN

      {

          get;

          set;

      }
    content.vb: Public Property AzureASN As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.MicrosoftPeeringConfig
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.MicrosoftPeeringConfig
  id: MicrosoftPeeringConfig
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: MicrosoftPeeringConfig
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.MicrosoftPeeringConfig
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MicrosoftPeeringConfig
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the mircosoft peering config\r\n"
  example: []
  syntax:
    content: >-
      public ExpressRouteCircuitPeeringConfig MicrosoftPeeringConfig

      {

          get;

          set;

      }
    content.vb: Public Property MicrosoftPeeringConfig As ExpressRouteCircuitPeeringConfig
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringConfig
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PeerASN
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PeerASN
  id: PeerASN
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: PeerASN
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PeerASN
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeerASN
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the peer ASN\r\n"
  example: []
  syntax:
    content: >-
      public int PeerASN

      {

          get;

          set;

      }
    content.vb: Public Property PeerASN As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PeeringType
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PeeringType
  id: PeeringType
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: PeeringType
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PeeringType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeeringType
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets PeeringType\r\n"
  example: []
  syntax:
    content: >-
      public string PeeringType

      {

          get;

          set;

      }
    content.vb: Public Property PeeringType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PrimaryAzurePort
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PrimaryAzurePort
  id: PrimaryAzurePort
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: PrimaryAzurePort
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PrimaryAzurePort
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PrimaryAzurePort
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the primary port\r\n"
  example: []
  syntax:
    content: >-
      public string PrimaryAzurePort

      {

          get;

          set;

      }
    content.vb: Public Property PrimaryAzurePort As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PrimaryPeerAddressPrefix
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PrimaryPeerAddressPrefix
  id: PrimaryPeerAddressPrefix
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: PrimaryPeerAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.PrimaryPeerAddressPrefix
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PrimaryPeerAddressPrefix
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the primary address prefix\r\n"
  example: []
  syntax:
    content: >-
      public string PrimaryPeerAddressPrefix

      {

          get;

          set;

      }
    content.vb: Public Property PrimaryPeerAddressPrefix As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.ProvisioningState
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProvisioningState
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets Provisioning state of the PublicIP resource\r\nUpdating/Deleting/Failed\r\n"
  example: []
  syntax:
    content: >-
      public string ProvisioningState

      {

          get;

          set;

      }
    content.vb: Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SecondaryAzurePort
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SecondaryAzurePort
  id: SecondaryAzurePort
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: SecondaryAzurePort
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SecondaryAzurePort
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SecondaryAzurePort
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the secondary port\r\n"
  example: []
  syntax:
    content: >-
      public string SecondaryAzurePort

      {

          get;

          set;

      }
    content.vb: Public Property SecondaryAzurePort As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SecondaryPeerAddressPrefix
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SecondaryPeerAddressPrefix
  id: SecondaryPeerAddressPrefix
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: SecondaryPeerAddressPrefix
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SecondaryPeerAddressPrefix
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SecondaryPeerAddressPrefix
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the secondary address prefix\r\n"
  example: []
  syntax:
    content: >-
      public string SecondaryPeerAddressPrefix

      {

          get;

          set;

      }
    content.vb: Public Property SecondaryPeerAddressPrefix As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SharedKey
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SharedKey
  id: SharedKey
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: SharedKey
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.SharedKey
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SharedKey
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 137
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the shared key\r\n"
  example: []
  syntax:
    content: >-
      public string SharedKey

      {

          get;

          set;

      }
    content.vb: Public Property SharedKey As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.State
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.State
  id: State
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: State
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.State
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: State
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets state of Peering\r\n"
  example: []
  syntax:
    content: >-
      public string State

      {

          get;

          set;

      }
    content.vb: Public Property State As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.Stats
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.Stats
  id: Stats
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: Stats
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.Stats
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Stats
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 159
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or peering stats\r\n"
  example: []
  syntax:
    content: >-
      public ExpressRouteCircuitStats Stats

      {

          get;

          set;

      }
    content.vb: Public Property Stats As ExpressRouteCircuitStats
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitStats
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.VlanId
  commentId: P:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.VlanId
  id: VlanId
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: VlanId
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.VlanId
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VlanId
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 170
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the vlan id\r\n"
  example: []
  syntax:
    content: >-
      public int VlanId

      {

          get;

          set;

      }
    content.vb: Public Property VlanId As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering
  langs:
  - csharp
  - vb
  name: ExpressRouteCircuitPeering()
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeering.ExpressRouteCircuitPeering()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/ExpressRouteCircuitPeering.cs
    startLine: 179
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nInitializes a new instance of the ExpressRouteCircuitPeering class.\r\n"
  example: []
  syntax:
    content: public ExpressRouteCircuitPeering()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.ResourceId
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ResourceId
  fullName: Microsoft.Azure.Management.Network.Models.ResourceId
- uid: Microsoft.Azure.Management.Network.Models.ChildResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ChildResource
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource
- uid: Microsoft.Azure.Management.Network.Models.ChildResource.Etag
  parent: Microsoft.Azure.Management.Network.Models.ChildResource
  isExternal: false
  name: Etag
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource.Etag
- uid: Microsoft.Azure.Management.Network.Models.ChildResource.Name
  parent: Microsoft.Azure.Management.Network.Models.ChildResource
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource.Name
- uid: Microsoft.Azure.Management.Network.Models.ResourceId.Id
  parent: Microsoft.Azure.Management.Network.Models.ResourceId
  isExternal: false
  name: Id
  fullName: Microsoft.Azure.Management.Network.Models.ResourceId.Id
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringConfig
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ExpressRouteCircuitPeeringConfig
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitPeeringConfig
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitStats
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ExpressRouteCircuitStats
  fullName: Microsoft.Azure.Management.Network.Models.ExpressRouteCircuitStats
