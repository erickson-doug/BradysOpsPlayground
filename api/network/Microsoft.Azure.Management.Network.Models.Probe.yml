items:
- uid: Microsoft.Azure.Management.Network.Models.Probe
  commentId: T:Microsoft.Azure.Management.Network.Models.Probe
  id: Probe
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.Probe.#ctor
  - Microsoft.Azure.Management.Network.Models.Probe.#ctor(System.String,System.Int32)
  - Microsoft.Azure.Management.Network.Models.Probe.IntervalInSeconds
  - Microsoft.Azure.Management.Network.Models.Probe.LoadBalancingRules
  - Microsoft.Azure.Management.Network.Models.Probe.NumberOfProbes
  - Microsoft.Azure.Management.Network.Models.Probe.Port
  - Microsoft.Azure.Management.Network.Models.Probe.Protocol
  - Microsoft.Azure.Management.Network.Models.Probe.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.Probe.RequestPath
  langs:
  - csharp
  - vb
  name: Probe
  fullName: Microsoft.Azure.Management.Network.Models.Probe
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Probe
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nLoad balancer Probe\r\n"
  example: []
  syntax:
    content: 'public class Probe : ChildResource'
    content.vb: >-
      Public Class Probe

          Inherits ChildResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.ResourceId
  - Microsoft.Azure.Management.Network.Models.ChildResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.ChildResource.Etag
  - Microsoft.Azure.Management.Network.Models.ChildResource.Name
  - Microsoft.Azure.Management.Network.Models.ResourceId.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.Probe.IntervalInSeconds
  commentId: P:Microsoft.Azure.Management.Network.Models.Probe.IntervalInSeconds
  id: IntervalInSeconds
  parent: Microsoft.Azure.Management.Network.Models.Probe
  langs:
  - csharp
  - vb
  name: IntervalInSeconds
  fullName: Microsoft.Azure.Management.Network.Models.Probe.IntervalInSeconds
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IntervalInSeconds
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the interval, in seconds, for how frequently\r\nto probe the endpoint for health status. Typically, the interval\r\nis slightly less than half the allocated timeout period (in\r\nseconds) which allows two full probes before taking the instance\r\nout of rotation. The default value is 15, the minimum value is 5\r\n"
  example: []
  syntax:
    content: >-
      public int IntervalInSeconds

      {

          get;

          set;

      }
    content.vb: Public Property IntervalInSeconds As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Probe.LoadBalancingRules
  commentId: P:Microsoft.Azure.Management.Network.Models.Probe.LoadBalancingRules
  id: LoadBalancingRules
  parent: Microsoft.Azure.Management.Network.Models.Probe
  langs:
  - csharp
  - vb
  name: LoadBalancingRules
  fullName: Microsoft.Azure.Management.Network.Models.Probe.LoadBalancingRules
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LoadBalancingRules
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets Load balancer rules that use this probe\r\n"
  example: []
  syntax:
    content: >-
      public IList<ResourceId> LoadBalancingRules

      {

          get;

          set;

      }
    content.vb: Public Property LoadBalancingRules As IList(Of ResourceId)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ResourceId}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Probe.NumberOfProbes
  commentId: P:Microsoft.Azure.Management.Network.Models.Probe.NumberOfProbes
  id: NumberOfProbes
  parent: Microsoft.Azure.Management.Network.Models.Probe
  langs:
  - csharp
  - vb
  name: NumberOfProbes
  fullName: Microsoft.Azure.Management.Network.Models.Probe.NumberOfProbes
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NumberOfProbes
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the number of probes where if no response,\r\nwill result in stopping further traffic from being delivered to\r\nthe endpoint. This values allows endponints to be taken out of\r\nrotation faster or slower than the typical times used in Azure.\r\n"
  example: []
  syntax:
    content: >-
      public int NumberOfProbes

      {

          get;

          set;

      }
    content.vb: Public Property NumberOfProbes As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Probe.Port
  commentId: P:Microsoft.Azure.Management.Network.Models.Probe.Port
  id: Port
  parent: Microsoft.Azure.Management.Network.Models.Probe
  langs:
  - csharp
  - vb
  name: Port
  fullName: Microsoft.Azure.Management.Network.Models.Probe.Port
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Port
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nRequired. Gets or sets Port for communicating the probe. Possible\r\nvalues range from 1 to 65535, inclusive.\r\n"
  example: []
  syntax:
    content: >-
      public int Port

      {

          get;

          set;

      }
    content.vb: Public Property Port As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Probe.Protocol
  commentId: P:Microsoft.Azure.Management.Network.Models.Probe.Protocol
  id: Protocol
  parent: Microsoft.Azure.Management.Network.Models.Probe
  langs:
  - csharp
  - vb
  name: Protocol
  fullName: Microsoft.Azure.Management.Network.Models.Probe.Protocol
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Protocol
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nRequired. Gets or sets the protocol of the end point. Possible\r\nvalues are http pr Tcp. If Tcp is specified, a received ACK is\r\nrequired for the probe to be successful. If http is specified,a\r\n200 OK response from the specifies URI is required for the probe\r\nto be successful\r\n"
  example: []
  syntax:
    content: >-
      public string Protocol

      {

          get;

          set;

      }
    content.vb: Public Property Protocol As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Probe.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.Probe.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.Probe
  langs:
  - csharp
  - vb
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.Probe.ProvisioningState
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProvisioningState
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets Provisioning state of the PublicIP resource\r\nUpdating/Deleting/Failed\r\n"
  example: []
  syntax:
    content: >-
      public string ProvisioningState

      {

          get;

          set;

      }
    content.vb: Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Probe.RequestPath
  commentId: P:Microsoft.Azure.Management.Network.Models.Probe.RequestPath
  id: RequestPath
  parent: Microsoft.Azure.Management.Network.Models.Probe
  langs:
  - csharp
  - vb
  name: RequestPath
  fullName: Microsoft.Azure.Management.Network.Models.Probe.RequestPath
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestPath
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the URI used for requesting health status\r\nfrom the VM. Path is required if a protocol is set to http.\r\nOtherwise, it is not allowed. There is no default value\r\n"
  example: []
  syntax:
    content: >-
      public string RequestPath

      {

          get;

          set;

      }
    content.vb: Public Property RequestPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Probe.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.Probe.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.Probe
  langs:
  - csharp
  - vb
  name: Probe()
  fullName: Microsoft.Azure.Management.Network.Models.Probe.Probe()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nInitializes a new instance of the Probe class.\r\n"
  example: []
  syntax:
    content: public Probe()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.Probe.#ctor(System.String,System.Int32)
  commentId: M:Microsoft.Azure.Management.Network.Models.Probe.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Microsoft.Azure.Management.Network.Models.Probe
  langs:
  - csharp
  - vb
  name: Probe(String, Int32)
  fullName: Microsoft.Azure.Management.Network.Models.Probe.Probe(System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/Probe.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nInitializes a new instance of the Probe class with required\r\narguments.\r\n"
  example: []
  syntax:
    content: public Probe(string protocol, int port)
    content.vb: Public Sub New(protocol As String, port As Integer)
    parameters:
    - id: protocol
      type: System.String
    - id: port
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.ResourceId
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ResourceId
  fullName: Microsoft.Azure.Management.Network.Models.ResourceId
- uid: Microsoft.Azure.Management.Network.Models.ChildResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ChildResource
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource
- uid: Microsoft.Azure.Management.Network.Models.ChildResource.Etag
  parent: Microsoft.Azure.Management.Network.Models.ChildResource
  isExternal: false
  name: Etag
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource.Etag
- uid: Microsoft.Azure.Management.Network.Models.ChildResource.Name
  parent: Microsoft.Azure.Management.Network.Models.ChildResource
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource.Name
- uid: Microsoft.Azure.Management.Network.Models.ResourceId.Id
  parent: Microsoft.Azure.Management.Network.Models.ResourceId
  isExternal: false
  name: Id
  fullName: Microsoft.Azure.Management.Network.Models.ResourceId.Id
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ResourceId}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceId>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.ResourceId>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.ResourceId)
  name.vb: IList(Of ResourceId)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.ResourceId
    name: ResourceId
    fullName: Microsoft.Azure.Management.Network.Models.ResourceId
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.ResourceId
    name: ResourceId
    fullName: Microsoft.Azure.Management.Network.Models.ResourceId
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
