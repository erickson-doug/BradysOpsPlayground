items:
- uid: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings
  commentId: T:Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings
  id: PublicIpAddressDnsSettings
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.#ctor
  - Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.DomainNameLabel
  - Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.Fqdn
  - Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.ReverseFqdn
  langs:
  - csharp
  - vb
  name: PublicIpAddressDnsSettings
  fullName: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/PublicIpAddressDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PublicIpAddressDnsSettings
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/PublicIpAddressDnsSettings.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nContains FQDN of the DNS record associated with the public IP address\r\n"
  example: []
  syntax:
    content: public class PublicIpAddressDnsSettings
    content.vb: Public Class PublicIpAddressDnsSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.DomainNameLabel
  commentId: P:Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.DomainNameLabel
  id: DomainNameLabel
  parent: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings
  langs:
  - csharp
  - vb
  name: DomainNameLabel
  fullName: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.DomainNameLabel
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/PublicIpAddressDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DomainNameLabel
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/PublicIpAddressDnsSettings.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the Domain name label.The concatenation of\r\nthe domain name label and the regionalized DNS zone make up the\r\nfully qualified domain name associated with the public IP address.\r\nIf a domain name label is specified, an A DNS record is created\r\nfor the public IP in the Microsoft Azure DNS system.\r\n"
  example: []
  syntax:
    content: >-
      public string DomainNameLabel

      {

          get;

          set;

      }
    content.vb: Public Property DomainNameLabel As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.Fqdn
  commentId: P:Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.Fqdn
  id: Fqdn
  parent: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings
  langs:
  - csharp
  - vb
  name: Fqdn
  fullName: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.Fqdn
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/PublicIpAddressDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Fqdn
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/PublicIpAddressDnsSettings.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets the FQDN, Fully qualified domain name of the A DNS\r\nrecord associated with the public IP. This is the concatenation of\r\nthe domainNameLabel and the regionalized DNS zone.\r\n"
  example: []
  syntax:
    content: >-
      public string Fqdn

      {

          get;

          set;

      }
    content.vb: Public Property Fqdn As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.ReverseFqdn
  commentId: P:Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.ReverseFqdn
  id: ReverseFqdn
  parent: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings
  langs:
  - csharp
  - vb
  name: ReverseFqdn
  fullName: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.ReverseFqdn
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/PublicIpAddressDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReverseFqdn
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/PublicIpAddressDnsSettings.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or Sests the Reverse FQDN. A user-visible, fully\r\nqualified domain name that resolves to this public IP address. If\r\nthe reverseFqdn is specified, then a PTR DNS record is created\r\npointing from the IP address in the in-addr.arpa domain to the\r\nreverse FQDN.\r\n"
  example: []
  syntax:
    content: >-
      public string ReverseFqdn

      {

          get;

          set;

      }
    content.vb: Public Property ReverseFqdn As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings
  langs:
  - csharp
  - vb
  name: PublicIpAddressDnsSettings()
  fullName: Microsoft.Azure.Management.Network.Models.PublicIpAddressDnsSettings.PublicIpAddressDnsSettings()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/PublicIpAddressDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/PublicIpAddressDnsSettings.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nInitializes a new instance of the PublicIpAddressDnsSettings class.\r\n"
  example: []
  syntax:
    content: public PublicIpAddressDnsSettings()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
