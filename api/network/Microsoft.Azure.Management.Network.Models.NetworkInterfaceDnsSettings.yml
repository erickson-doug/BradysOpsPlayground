items:
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  commentId: T:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  id: NetworkInterfaceDnsSettings
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel
  - Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn
  langs:
  - csharp
  - vb
  name: NetworkInterfaceDnsSettings
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NetworkInterfaceDnsSettings
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nDns Settings of a network interface\r\n"
  example: []
  syntax:
    content: public class NetworkInterfaceDnsSettings
    content.vb: Public Class NetworkInterfaceDnsSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers
  commentId: P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers
  id: AppliedDnsServers
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: AppliedDnsServers
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppliedDnsServers
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets list of Applied DNS servers IP addresses\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> AppliedDnsServers

      {

          get;

          set;

      }
    content.vb: Public Property AppliedDnsServers As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers
  commentId: P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers
  id: DnsServers
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: DnsServers
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DnsServers
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets list of DNS servers IP addresses\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> DnsServers

      {

          get;

          set;

      }
    content.vb: Public Property DnsServers As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel
  commentId: P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel
  id: InternalDnsNameLabel
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: InternalDnsNameLabel
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InternalDnsNameLabel
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the Internal DNS name\r\n"
  example: []
  syntax:
    content: >-
      public string InternalDnsNameLabel

      {

          get;

          set;

      }
    content.vb: Public Property InternalDnsNameLabel As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn
  commentId: P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn
  id: InternalFqdn
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: InternalFqdn
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InternalFqdn
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets full IDNS name in the form,\r\nDnsName.VnetId.ZoneId.TopleveSuffix. This is set when the NIC is\r\nassociated to a VM\r\n"
  example: []
  syntax:
    content: >-
      public string InternalFqdn

      {

          get;

          set;

      }
    content.vb: Public Property InternalFqdn As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings
  langs:
  - csharp
  - vb
  name: NetworkInterfaceDnsSettings()
  fullName: Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.NetworkInterfaceDnsSettings()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/NetworkInterfaceDnsSettings.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nInitializes a new instance of the NetworkInterfaceDnsSettings class.\r\n"
  example: []
  syntax:
    content: public NetworkInterfaceDnsSettings()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
