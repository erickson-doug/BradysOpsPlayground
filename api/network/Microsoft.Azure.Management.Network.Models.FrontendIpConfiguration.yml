items:
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  commentId: T:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  id: FrontendIpConfiguration
  parent: Microsoft.Azure.Management.Network.Models
  children:
  - Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.#ctor
  - Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.InboundNatPools
  - Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.InboundNatRules
  - Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.LoadBalancingRules
  - Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.OutboundNatRules
  - Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PrivateIpAddress
  - Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PrivateIpAllocationMethod
  - Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.ProvisioningState
  - Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PublicIpAddress
  - Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.Subnet
  langs:
  - csharp
  - vb
  name: FrontendIpConfiguration
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FrontendIpConfiguration
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nFrontend IP address of the load balancer\r\n"
  example: []
  syntax:
    content: 'public class FrontendIpConfiguration : ChildResource'
    content.vb: >-
      Public Class FrontendIpConfiguration

          Inherits ChildResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Network.Models.ResourceId
  - Microsoft.Azure.Management.Network.Models.ChildResource
  inheritedMembers:
  - Microsoft.Azure.Management.Network.Models.ChildResource.Etag
  - Microsoft.Azure.Management.Network.Models.ChildResource.Name
  - Microsoft.Azure.Management.Network.Models.ResourceId.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.InboundNatPools
  commentId: P:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.InboundNatPools
  id: InboundNatPools
  parent: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  langs:
  - csharp
  - vb
  name: InboundNatPools
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.InboundNatPools
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InboundNatPools
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Read only.Inbound pools URIs that use this frontend IP\r\n"
  example: []
  syntax:
    content: >-
      public IList<ResourceId> InboundNatPools

      {

          get;

          set;

      }
    content.vb: Public Property InboundNatPools As IList(Of ResourceId)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ResourceId}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.InboundNatRules
  commentId: P:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.InboundNatRules
  id: InboundNatRules
  parent: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  langs:
  - csharp
  - vb
  name: InboundNatRules
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.InboundNatRules
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InboundNatRules
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Read only.Inbound rules URIs that use this frontend IP\r\n"
  example: []
  syntax:
    content: >-
      public IList<ResourceId> InboundNatRules

      {

          get;

          set;

      }
    content.vb: Public Property InboundNatRules As IList(Of ResourceId)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ResourceId}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.LoadBalancingRules
  commentId: P:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.LoadBalancingRules
  id: LoadBalancingRules
  parent: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  langs:
  - csharp
  - vb
  name: LoadBalancingRules
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.LoadBalancingRules
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LoadBalancingRules
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets Load Balancing rules URIs that use this frontend IP\r\n"
  example: []
  syntax:
    content: >-
      public IList<ResourceId> LoadBalancingRules

      {

          get;

          set;

      }
    content.vb: Public Property LoadBalancingRules As IList(Of ResourceId)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ResourceId}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.OutboundNatRules
  commentId: P:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.OutboundNatRules
  id: OutboundNatRules
  parent: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  langs:
  - csharp
  - vb
  name: OutboundNatRules
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.OutboundNatRules
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OutboundNatRules
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Read only.Outbound rules URIs that use this frontend IP\r\n"
  example: []
  syntax:
    content: >-
      public IList<ResourceId> OutboundNatRules

      {

          get;

          set;

      }
    content.vb: Public Property OutboundNatRules As IList(Of ResourceId)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ResourceId}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PrivateIpAddress
  commentId: P:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PrivateIpAddress
  id: PrivateIpAddress
  parent: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  langs:
  - csharp
  - vb
  name: PrivateIpAddress
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PrivateIpAddress
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PrivateIpAddress
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the IP address of the Load Balancer.This is\r\nonly specified if a specific private IP address shall be allocated\r\nfrom the subnet specified in subnetRef\r\n"
  example: []
  syntax:
    content: >-
      public string PrivateIpAddress

      {

          get;

          set;

      }
    content.vb: Public Property PrivateIpAddress As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PrivateIpAllocationMethod
  commentId: P:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PrivateIpAllocationMethod
  id: PrivateIpAllocationMethod
  parent: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  langs:
  - csharp
  - vb
  name: PrivateIpAllocationMethod
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PrivateIpAllocationMethod
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PrivateIpAllocationMethod
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets PrivateIP allocation method (Static/Dynamic)\r\n"
  example: []
  syntax:
    content: >-
      public string PrivateIpAllocationMethod

      {

          get;

          set;

      }
    content.vb: Public Property PrivateIpAllocationMethod As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  langs:
  - csharp
  - vb
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.ProvisioningState
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProvisioningState
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets Provisioning state of the PublicIP resource\r\nUpdating/Deleting/Failed\r\n"
  example: []
  syntax:
    content: >-
      public string ProvisioningState

      {

          get;

          set;

      }
    content.vb: Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PublicIpAddress
  commentId: P:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PublicIpAddress
  id: PublicIpAddress
  parent: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  langs:
  - csharp
  - vb
  name: PublicIpAddress
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.PublicIpAddress
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PublicIpAddress
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the reference of the PublicIP resource\r\n"
  example: []
  syntax:
    content: >-
      public ResourceId PublicIpAddress

      {

          get;

          set;

      }
    content.vb: Public Property PublicIpAddress As ResourceId
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.ResourceId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.Subnet
  commentId: P:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.Subnet
  id: Subnet
  parent: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  langs:
  - csharp
  - vb
  name: Subnet
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.Subnet
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Subnet
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nOptional. Gets or sets the reference of the subnet resource.A\r\nsubnet from wher the load balancer gets its private frontend\r\naddress\r\n"
  example: []
  syntax:
    content: >-
      public ResourceId Subnet

      {

          get;

          set;

      }
    content.vb: Public Property Subnet As ResourceId
    parameters: []
    return:
      type: Microsoft.Azure.Management.Network.Models.ResourceId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.#ctor
  commentId: M:Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration
  langs:
  - csharp
  - vb
  name: FrontendIpConfiguration()
  fullName: Microsoft.Azure.Management.Network.Models.FrontendIpConfiguration.FrontendIpConfiguration()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Network/NetworkManagement/Generated/Models/FrontendIpConfiguration.cs
    startLine: 141
  assemblies:
  - Microsoft.Azure.Management.Network
  namespace: Microsoft.Azure.Management.Network.Models
  summary: "\r\nInitializes a new instance of the FrontendIpConfiguration class.\r\n"
  example: []
  syntax:
    content: public FrontendIpConfiguration()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: Microsoft.Azure.Management.Network.Models
  fullName: Microsoft.Azure.Management.Network.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Network.Models.ResourceId
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ResourceId
  fullName: Microsoft.Azure.Management.Network.Models.ResourceId
- uid: Microsoft.Azure.Management.Network.Models.ChildResource
  parent: Microsoft.Azure.Management.Network.Models
  isExternal: false
  name: ChildResource
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource
- uid: Microsoft.Azure.Management.Network.Models.ChildResource.Etag
  parent: Microsoft.Azure.Management.Network.Models.ChildResource
  isExternal: false
  name: Etag
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource.Etag
- uid: Microsoft.Azure.Management.Network.Models.ChildResource.Name
  parent: Microsoft.Azure.Management.Network.Models.ChildResource
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Management.Network.Models.ChildResource.Name
- uid: Microsoft.Azure.Management.Network.Models.ResourceId.Id
  parent: Microsoft.Azure.Management.Network.Models.ResourceId
  isExternal: false
  name: Id
  fullName: Microsoft.Azure.Management.Network.Models.ResourceId.Id
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Network.Models.ResourceId}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceId>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Network.Models.ResourceId>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Network.Models.ResourceId)
  name.vb: IList(Of ResourceId)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Network.Models.ResourceId
    name: ResourceId
    fullName: Microsoft.Azure.Management.Network.Models.ResourceId
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Network.Models.ResourceId
    name: ResourceId
    fullName: Microsoft.Azure.Management.Network.Models.ResourceId
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
