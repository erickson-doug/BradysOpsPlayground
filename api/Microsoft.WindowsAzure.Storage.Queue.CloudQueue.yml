items:
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  id: CloudQueue
  parent: Microsoft.WindowsAzure.Storage.Queue
  children:
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(System.Uri)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginClear(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginClear(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreate(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreate(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreateIfNotExists(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDelete(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDelete(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(System.String,System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginExists(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginFetchAttributes(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessage(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessage(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetPermissions(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetPermissions(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessage(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessage(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessages(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessages(System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetMetadata(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetMetadata(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginUpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginUpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Clear(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Create(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Delete(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessage(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndAddMessage(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndClear(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndCreate(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndCreateIfNotExists(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDelete(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDeleteIfExists(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDeleteMessage(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndExists(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndFetchAttributes(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetMessage(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetMessages(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetPermissions(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndPeekMessage(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndPeekMessages(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndSetMetadata(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndSetPermissions(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndUpdateMessage(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Exists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributes(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessage(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessages(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissions(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessage(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessages(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadata(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri
  langs:
  - csharp
  - vb
  name: CloudQueue
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CloudQueue
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nThis class represents a queue in the Microsoft Azure Queue service.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix", Justification = "Reviewed.")]

      public class CloudQueue
    content.vb: >-
      <SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix", Justification:="Reviewed.")>

      Public Class CloudQueue
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1711:IdentifiersShouldNotHaveIncorrectSuffix
    namedArguments:
    - name: Justification
      type: System.String
      value: Reviewed.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Create(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Create(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Create(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: Create(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Create(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Create
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nCreates the queue.\r\n"
  example: []
  syntax:
    content: public virtual void Create(QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub Create(options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreate(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreate(System.AsyncCallback,System.Object)
  id: BeginCreate(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginCreate(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreate(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreate
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to create a queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreate(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreate(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreate(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreate(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginCreate(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginCreate(QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreate(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreate
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to create a queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreate(QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreate(options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndCreate(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndCreate(System.IAsyncResult)
  id: EndCreate(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndCreate(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndCreate(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndCreate
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 96
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to create a queue.\r\n"
  example: []
  syntax:
    content: public virtual void EndCreate(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndCreate(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync
  id: CreateAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 106
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to create a queue.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync()
    content.vb: Public Overridable Function CreateAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(System.Threading.CancellationToken)
  id: CreateAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 117
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to create a queue.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 129
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to create a queue.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 142
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to create a queue.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateIfNotExists(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 157
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nCreates the queue if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual bool CreateIfNotExists(QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function CreateIfNotExists(options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the queue did not already exist and was created; otherwise <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreateIfNotExists(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreateIfNotExists(System.AsyncCallback,System.Object)
  id: BeginCreateIfNotExists(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginCreateIfNotExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreateIfNotExists(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateIfNotExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 208
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to create the queue if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateIfNotExists(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateIfNotExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginCreateIfNotExists(QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateIfNotExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 223
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to create the queue if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateIfNotExists(QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateIfNotExists(options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndCreateIfNotExists(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndCreateIfNotExists(System.IAsyncResult)
  id: EndCreateIfNotExists(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndCreateIfNotExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndCreateIfNotExists(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndCreateIfNotExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 321
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nReturns the result of an asynchronous operation to create the queue if it does not already exist.\r\n"
  example: []
  syntax:
    content: public virtual bool EndCreateIfNotExists(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndCreateIfNotExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the queue did not already exist and was created; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync
  id: CreateIfNotExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 335
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to create the queue if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync()
    content.vb: Public Overridable Function CreateIfNotExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(System.Threading.CancellationToken)
  id: CreateIfNotExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 347
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to create the queue if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 360
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to create the queue if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 374
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to create the queue if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteIfExists(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 388
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nDeletes the queue if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual bool DeleteIfExists(QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function DeleteIfExists(options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the queue did not already exist and was created; otherwise <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  id: BeginDeleteIfExists(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginDeleteIfExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteIfExists(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleteIfExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 433
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to delete the queue if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDeleteIfExists(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDeleteIfExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginDeleteIfExists(QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleteIfExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 447
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to delete the queue if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDeleteIfExists(QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDeleteIfExists(options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDeleteIfExists(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDeleteIfExists(System.IAsyncResult)
  id: EndDeleteIfExists(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndDeleteIfExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDeleteIfExists(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndDeleteIfExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 544
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nReturns the result of an asynchronous operation to delete the queue if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual bool EndDeleteIfExists(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndDeleteIfExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the queue did not already exist and was created; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync
  id: DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 557
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete the queue if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync()
    content.vb: Public Overridable Function DeleteIfExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(System.Threading.CancellationToken)
  id: DeleteIfExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 568
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete the queue if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 580
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete the queue if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteIfExistsAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 593
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete the queue if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Delete(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Delete(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Delete(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: Delete(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Delete(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Delete
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 606
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nDeletes the queue.\r\n"
  example: []
  syntax:
    content: public virtual void Delete(QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub Delete(options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDelete(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDelete(System.AsyncCallback,System.Object)
  id: BeginDelete(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginDelete(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDelete(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDelete
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 625
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to delete a queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDelete(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDelete(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDelete(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDelete(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDelete(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginDelete(QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDelete(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDelete
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 639
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to delete a queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDelete(QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDelete(options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDelete(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDelete(System.IAsyncResult)
  id: EndDelete(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndDelete(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDelete(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndDelete
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 657
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to delete a queue.\r\n"
  example: []
  syntax:
    content: public virtual void EndDelete(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndDelete(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 667
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a queue.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync()
    content.vb: Public Overridable Function DeleteAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(System.Threading.CancellationToken)
  id: DeleteAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 678
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a queue.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 690
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a queue.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 703
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a queue.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetPermissions(QueuePermissions, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 717
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nSets permissions for the queue.\r\n"
  example: []
  syntax:
    content: public virtual void SetPermissions(QueuePermissions permissions, QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub SetPermissions(permissions As QueuePermissions, options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> object.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,System.AsyncCallback,System.Object)
  id: BeginSetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginSetPermissions(QueuePermissions, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginSetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 737
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to set permissions for the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginSetPermissions(QueuePermissions permissions, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginSetPermissions(permissions As QueuePermissions, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> object.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginSetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginSetPermissions(QueuePermissions, QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginSetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 752
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to set permissions for the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginSetPermissions(QueuePermissions permissions, QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginSetPermissions(permissions As QueuePermissions, options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> object.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndSetPermissions(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndSetPermissions(System.IAsyncResult)
  id: EndSetPermissions(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndSetPermissions(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndSetPermissions(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndSetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 770
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nReturns the result of an asynchronous operation to set permissions for the queue.\r\n"
  example: []
  syntax:
    content: public virtual void EndSetPermissions(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndSetPermissions(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(QueuePermissions)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 781
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to set permissions for the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(QueuePermissions permissions)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As QueuePermissions) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,System.Threading.CancellationToken)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(QueuePermissions, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 793
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to set permissions for the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(QueuePermissions permissions, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As QueuePermissions, cancellationToken As CancellationToken) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(QueuePermissions, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 806
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to set permissions for the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(QueuePermissions permissions, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As QueuePermissions, options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> object.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(QueuePermissions, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 820
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to set permissions for the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(QueuePermissions permissions, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As QueuePermissions, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> object.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissions(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissions(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetPermissions(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetPermissions(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissions(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 834
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the permissions settings for the queue.\r\n"
  example: []
  syntax:
    content: public virtual QueuePermissions GetPermissions(QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function GetPermissions(options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing) As QueuePermissions
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetPermissions(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetPermissions(System.AsyncCallback,System.Object)
  id: BeginGetPermissions(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginGetPermissions(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetPermissions(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginGetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 853
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to get the permissions settings for the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginGetPermissions(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginGetPermissions(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetPermissions(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetPermissions(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginGetPermissions(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginGetPermissions(QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetPermissions(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginGetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 867
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to get the permissions settings for the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginGetPermissions(QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginGetPermissions(options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetPermissions(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetPermissions(System.IAsyncResult)
  id: EndGetPermissions(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndGetPermissions(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetPermissions(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndGetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 886
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nReturns the asynchronous result of the request to get the permissions settings for the queue.\r\n"
  example: []
  syntax:
    content: public virtual QueuePermissions EndGetPermissions(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndGetPermissions(asyncResult As IAsyncResult) As QueuePermissions
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync
  id: GetPermissionsAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 896
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get the permissions settings for the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<QueuePermissions> GetPermissionsAsync()
    content.vb: Public Overridable Function GetPermissionsAsync As Task(Of QueuePermissions)
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(System.Threading.CancellationToken)
  id: GetPermissionsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 907
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get the permissions settings for the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<QueuePermissions> GetPermissionsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetPermissionsAsync(cancellationToken As CancellationToken) As Task(Of QueuePermissions)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 919
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get the permissions settings for the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<QueuePermissions> GetPermissionsAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function GetPermissionsAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task(Of QueuePermissions)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 932
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get the permissions settings for the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<QueuePermissions> GetPermissionsAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetPermissionsAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of QueuePermissions)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Exists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Exists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Exists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: Exists(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Exists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Exists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 946
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nChecks existence of the queue.\r\n"
  example: []
  syntax:
    content: public virtual bool Exists(QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function Exists(options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the queue exists.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginExists(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginExists(System.AsyncCallback,System.Object)
  id: BeginExists(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginExists(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 977
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to check the existence of the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginExists(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginExists(QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginExists(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 991
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to check the existence of the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginExists(QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginExists(options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndExists(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndExists(System.IAsyncResult)
  id: EndExists(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndExists(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndExists
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1024
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nReturns the asynchronous result of the request to check the existence of the queue.\r\n"
  example: []
  syntax:
    content: public virtual bool EndExists(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the queue exists.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync
  id: ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1034
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to check the existence of the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync()
    content.vb: Public Overridable Function ExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(System.Threading.CancellationToken)
  id: ExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1045
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to check the existence of the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ExistsAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1057
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to check the existence of the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ExistsAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ExistsAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ExistsAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1070
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to check the existence of the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadata(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadata(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadata(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetMetadata(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadata(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadata
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1083
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nSets the queue's user-defined metadata.\r\n"
  example: []
  syntax:
    content: public virtual void SetMetadata(QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub SetMetadata(options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetMetadata(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetMetadata(System.AsyncCallback,System.Object)
  id: BeginSetMetadata(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginSetMetadata(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetMetadata(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginSetMetadata
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1102
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to set user-defined metadata on the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginSetMetadata(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginSetMetadata(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetMetadata(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetMetadata(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginSetMetadata(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginSetMetadata(QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginSetMetadata(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginSetMetadata
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1116
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to set user-defined metadata on the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginSetMetadata(QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginSetMetadata(options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndSetMetadata(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndSetMetadata(System.IAsyncResult)
  id: EndSetMetadata(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndSetMetadata(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndSetMetadata(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndSetMetadata
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1134
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to set user-defined metadata on the queue.\r\n"
  example: []
  syntax:
    content: public virtual void EndSetMetadata(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndSetMetadata(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync
  id: SetMetadataAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetMetadataAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1144
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to set user-defined metadata on the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync()
    content.vb: Public Overridable Function SetMetadataAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(System.Threading.CancellationToken)
  id: SetMetadataAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1155
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to set user-defined metadata on the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetMetadataAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1167
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to set user-defined metadata on the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetMetadataAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.SetMetadataAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1180
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to set user-defined metadata on the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetMetadataAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributes(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributes(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributes(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: FetchAttributes(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributes(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributes
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1193
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nFetches the queue's attributes.\r\n"
  example: []
  syntax:
    content: public virtual void FetchAttributes(QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub FetchAttributes(options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginFetchAttributes(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginFetchAttributes(System.AsyncCallback,System.Object)
  id: BeginFetchAttributes(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginFetchAttributes(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginFetchAttributes(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginFetchAttributes
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1212
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to fetch the queue's attributes.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginFetchAttributes(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginFetchAttributes(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginFetchAttributes(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginFetchAttributes(QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginFetchAttributes
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1226
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to fetch the queue's attributes.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginFetchAttributes(QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginFetchAttributes(options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndFetchAttributes(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndFetchAttributes(System.IAsyncResult)
  id: EndFetchAttributes(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndFetchAttributes(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndFetchAttributes(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndFetchAttributes
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1244
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to fetch a queue's attributes.\r\n"
  example: []
  syntax:
    content: public virtual void EndFetchAttributes(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndFetchAttributes(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync
  id: FetchAttributesAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1254
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to fetch the queue's attributes.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync()
    content.vb: Public Overridable Function FetchAttributesAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(System.Threading.CancellationToken)
  id: FetchAttributesAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1265
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to fetch the queue's attributes.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function FetchAttributesAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1277
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to fetch the queue's attributes.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function FetchAttributesAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1290
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to fetch the queue's attributes.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function FetchAttributesAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: AddMessage(CloudQueueMessage, Nullable<TimeSpan>, Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable<System.TimeSpan>, System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1307
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nAdds a message to the queue.\r\n"
  example: []
  syntax:
    content: public virtual void AddMessage(CloudQueueMessage message, TimeSpan? timeToLive = null, TimeSpan? initialVisibilityDelay = null, QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub AddMessage(message As CloudQueueMessage, timeToLive As TimeSpan? = Nothing, initialVisibilityDelay As TimeSpan? = Nothing, options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: timeToLive
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the maximum time to allow the message to be in the queue, or <code>null</code>.
    - id: initialVisibilityDelay
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the interval of time from now during which the message will be invisible.

        If <code>null</code> then the message will be visible immediately.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable(Of System.TimeSpan), System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AddMessage(CloudQueueMessage, Nullable(Of TimeSpan), Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.AsyncCallback,System.Object)
  id: BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginAddMessage(CloudQueueMessage, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAddMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1329
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to add a message to the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAddMessage(CloudQueueMessage message, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAddMessage(message As CloudQueueMessage, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginAddMessage(CloudQueueMessage, Nullable<TimeSpan>, Nullable<TimeSpan>, QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable<System.TimeSpan>, System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAddMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1347
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to add a message to the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAddMessage(CloudQueueMessage message, TimeSpan? timeToLive, TimeSpan? initialVisibilityDelay, QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAddMessage(message As CloudQueueMessage, timeToLive As TimeSpan?, initialVisibilityDelay As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: timeToLive
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the maximum time to allow the message to be in the queue, or <code>null</code>.
    - id: initialVisibilityDelay
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the interval of time from now during which the message will be invisible.

        If <code>null</code> then the message will be visible immediately.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable(Of System.TimeSpan), System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginAddMessage(CloudQueueMessage, Nullable(Of TimeSpan), Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndAddMessage(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndAddMessage(System.IAsyncResult)
  id: EndAddMessage(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndAddMessage(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndAddMessage(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndAddMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1367
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to add a message to the queue.\r\n"
  example: []
  syntax:
    content: public virtual void EndAddMessage(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndAddMessage(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  id: AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: AddMessageAsync(CloudQueueMessage)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1378
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to add a message to the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task AddMessageAsync(CloudQueueMessage message)
    content.vb: Public Overridable Function AddMessageAsync(message As CloudQueueMessage) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)
  id: AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: AddMessageAsync(CloudQueueMessage, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1390
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to add a message to the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task AddMessageAsync(CloudQueueMessage message, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AddMessageAsync(message As CloudQueueMessage, cancellationToken As CancellationToken) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: AddMessageAsync(CloudQueueMessage, Nullable<TimeSpan>, Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable<System.TimeSpan>, System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1406
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to add a message to the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task AddMessageAsync(CloudQueueMessage message, TimeSpan? timeToLive, TimeSpan? initialVisibilityDelay, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AddMessageAsync(message As CloudQueueMessage, timeToLive As TimeSpan?, initialVisibilityDelay As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: timeToLive
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the maximum time to allow the message to be in the queue, or <code>null</code>.
    - id: initialVisibilityDelay
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the interval of time from now during which the message will be invisible.

        If <code>null</code> then the message will be visible immediately.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable(Of System.TimeSpan), System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AddMessageAsync(CloudQueueMessage, Nullable(Of TimeSpan), Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: AddMessageAsync(CloudQueueMessage, Nullable<TimeSpan>, Nullable<TimeSpan>, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable<System.TimeSpan>, System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1423
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to add a message to the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task AddMessageAsync(CloudQueueMessage message, TimeSpan? timeToLive, TimeSpan? initialVisibilityDelay, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AddMessageAsync(message As CloudQueueMessage, timeToLive As TimeSpan?, initialVisibilityDelay As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: timeToLive
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the maximum time to allow the message to be in the queue, or <code>null</code>.
    - id: initialVisibilityDelay
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the interval of time from now during which the message will be invisible.

        If <code>null</code> then the message will be visible immediately.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.AddMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Nullable(Of System.TimeSpan), System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: AddMessageAsync(CloudQueueMessage, Nullable(Of TimeSpan), Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: UpdateMessage(CloudQueueMessage, TimeSpan, MessageUpdateFields, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.TimeSpan, Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdateMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1439
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nUpdates the visibility timeout and optionally the content of a message.\r\n"
  example: []
  syntax:
    content: public virtual void UpdateMessage(CloudQueueMessage message, TimeSpan visibilityTimeout, MessageUpdateFields updateFields, QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub UpdateMessage(message As CloudQueueMessage, visibilityTimeout As TimeSpan, updateFields As MessageUpdateFields, options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: visibilityTimeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: updateFields
      type: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
      description: Flags of <xref href="Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields" data-throw-if-not-resolved="false"></xref> values that specifies which parts of the message are to be updated.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginUpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginUpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,System.AsyncCallback,System.Object)
  id: BeginUpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginUpdateMessage(CloudQueueMessage, TimeSpan, MessageUpdateFields, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginUpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.TimeSpan, Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUpdateMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1461
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to update the visibility timeout and optionally the content of a message.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUpdateMessage(CloudQueueMessage message, TimeSpan visibilityTimeout, MessageUpdateFields updateFields, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUpdateMessage(message As CloudQueueMessage, visibilityTimeout As TimeSpan, updateFields As MessageUpdateFields, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: visibilityTimeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: updateFields
      type: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
      description: A set of <xref href="Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields" data-throw-if-not-resolved="false"></xref> values that specify which parts of the message are to be updated.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginUpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginUpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginUpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginUpdateMessage(CloudQueueMessage, TimeSpan, MessageUpdateFields, QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginUpdateMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.TimeSpan, Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUpdateMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1478
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to update the visibility timeout and optionally the content of a message.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUpdateMessage(CloudQueueMessage message, TimeSpan visibilityTimeout, MessageUpdateFields updateFields, QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUpdateMessage(message As CloudQueueMessage, visibilityTimeout As TimeSpan, updateFields As MessageUpdateFields, options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: visibilityTimeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: updateFields
      type: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
      description: A set of <xref href="Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields" data-throw-if-not-resolved="false"></xref> values that specify which parts of the message are to be updated.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndUpdateMessage(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndUpdateMessage(System.IAsyncResult)
  id: EndUpdateMessage(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndUpdateMessage(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndUpdateMessage(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndUpdateMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1498
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to add a message to the queue.\r\n"
  example: []
  syntax:
    content: public virtual void EndUpdateMessage(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndUpdateMessage(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields)
  id: UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: UpdateMessageAsync(CloudQueueMessage, TimeSpan, MessageUpdateFields)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.TimeSpan, Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdateMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1511
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to update the visibility timeout and optionally the content of a message.\r\n"
  example: []
  syntax:
    content: public virtual Task UpdateMessageAsync(CloudQueueMessage message, TimeSpan visibilityTimeout, MessageUpdateFields updateFields)
    content.vb: Public Overridable Function UpdateMessageAsync(message As CloudQueueMessage, visibilityTimeout As TimeSpan, updateFields As MessageUpdateFields) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: visibilityTimeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: updateFields
      type: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
      description: A set of <xref href="Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields" data-throw-if-not-resolved="false"></xref> values that specify which parts of the message are to be updated.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,System.Threading.CancellationToken)
  id: UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: UpdateMessageAsync(CloudQueueMessage, TimeSpan, MessageUpdateFields, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.TimeSpan, Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdateMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1525
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to update the visibility timeout and optionally the content of a message.\r\n"
  example: []
  syntax:
    content: public virtual Task UpdateMessageAsync(CloudQueueMessage message, TimeSpan visibilityTimeout, MessageUpdateFields updateFields, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UpdateMessageAsync(message As CloudQueueMessage, visibilityTimeout As TimeSpan, updateFields As MessageUpdateFields, cancellationToken As CancellationToken) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: visibilityTimeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: updateFields
      type: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
      description: A set of <xref href="Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields" data-throw-if-not-resolved="false"></xref> values that specify which parts of the message are to be updated.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: UpdateMessageAsync(CloudQueueMessage, TimeSpan, MessageUpdateFields, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.TimeSpan, Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdateMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1540
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to update the visibility timeout and optionally the content of a message.\r\n"
  example: []
  syntax:
    content: public virtual Task UpdateMessageAsync(CloudQueueMessage message, TimeSpan visibilityTimeout, MessageUpdateFields updateFields, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function UpdateMessageAsync(message As CloudQueueMessage, visibilityTimeout As TimeSpan, updateFields As MessageUpdateFields, options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: visibilityTimeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: updateFields
      type: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
      description: A set of <xref href="Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields" data-throw-if-not-resolved="false"></xref> values that specify which parts of the message are to be updated.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.TimeSpan,Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: UpdateMessageAsync(CloudQueueMessage, TimeSpan, MessageUpdateFields, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.UpdateMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.TimeSpan, Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdateMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1556
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to update the visibility timeout and optionally the content of a message.\r\n"
  example: []
  syntax:
    content: public virtual Task UpdateMessageAsync(CloudQueueMessage message, TimeSpan visibilityTimeout, MessageUpdateFields updateFields, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UpdateMessageAsync(message As CloudQueueMessage, visibilityTimeout As TimeSpan, updateFields As MessageUpdateFields, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: visibilityTimeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: updateFields
      type: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
      description: A set of <xref href="Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields" data-throw-if-not-resolved="false"></xref> values that specify which parts of the message are to be updated.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessage(CloudQueueMessage, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1570
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nDeletes a message.\r\n"
  example: []
  syntax:
    content: public virtual void DeleteMessage(CloudQueueMessage message, QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub DeleteMessage(message As CloudQueueMessage, options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessage(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessage(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteMessage(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessage(String, String, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessage(System.String, System.String, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1585
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nDeletes the specified message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual void DeleteMessage(string messageId, string popReceipt, QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub DeleteMessage(messageId As String, popReceipt As String, options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: messageId
      type: System.String
      description: A string specifying the message ID.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt value.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.AsyncCallback,System.Object)
  id: BeginDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginDeleteMessage(CloudQueueMessage, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleteMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1608
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDeleteMessage(CloudQueueMessage message, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDeleteMessage(message As CloudQueueMessage, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginDeleteMessage(CloudQueueMessage, QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleteMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1623
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDeleteMessage(CloudQueueMessage message, QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDeleteMessage(message As CloudQueueMessage, options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(System.String,System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(System.String,System.String,System.AsyncCallback,System.Object)
  id: BeginDeleteMessage(System.String,System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginDeleteMessage(String, String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(System.String, System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleteMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1639
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDeleteMessage(string messageId, string popReceipt, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDeleteMessage(messageId As String, popReceipt As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: messageId
      type: System.String
      description: A string specifying the message ID.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt value.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDeleteMessage(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginDeleteMessage(String, String, QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginDeleteMessage(System.String, System.String, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleteMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1655
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDeleteMessage(string messageId, string popReceipt, QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDeleteMessage(messageId As String, popReceipt As String, options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: messageId
      type: System.String
      description: A string specifying the message ID.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt value.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDeleteMessage(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDeleteMessage(System.IAsyncResult)
  id: EndDeleteMessage(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndDeleteMessage(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndDeleteMessage(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndDeleteMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1676
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual void EndDeleteMessage(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndDeleteMessage(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  id: DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(CloudQueueMessage)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1687
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(CloudQueueMessage message)
    content.vb: Public Overridable Function DeleteMessageAsync(message As CloudQueueMessage) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)
  id: DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(CloudQueueMessage, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1699
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(CloudQueueMessage message, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteMessageAsync(message As CloudQueueMessage, cancellationToken As CancellationToken) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(CloudQueueMessage, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1712
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(CloudQueueMessage message, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteMessageAsync(message As CloudQueueMessage, options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(CloudQueueMessage, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1726
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(CloudQueueMessage message, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteMessageAsync(message As CloudQueueMessage, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: message
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String)
  id: DeleteMessageAsync(System.String,System.String)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1738
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(string messageId, string popReceipt)
    content.vb: Public Overridable Function DeleteMessageAsync(messageId As String, popReceipt As String) As Task
    parameters:
    - id: messageId
      type: System.String
      description: A string specifying the message ID.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt value.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(String, String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1751
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(string messageId, string popReceipt, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteMessageAsync(messageId As String, popReceipt As String, cancellationToken As CancellationToken) As Task
    parameters:
    - id: messageId
      type: System.String
      description: A string specifying the message ID.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt value.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(String, String, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String, System.String, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1765
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(string messageId, string popReceipt, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteMessageAsync(messageId As String, popReceipt As String, options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: messageId
      type: System.String
      description: A string specifying the message ID.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt value.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DeleteMessageAsync(System.String,System.String,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(String, String, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.DeleteMessageAsync(System.String, System.String, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1780
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to delete a message.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteMessageAsync(string messageId, string popReceipt, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteMessageAsync(messageId As String, popReceipt As String, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: messageId
      type: System.String
      description: A string specifying the message ID.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt value.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessages(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessages(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetMessages(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessages(Int32, Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessages(System.Int32, System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessages
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1798
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the specified number of messages from the queue using the specified request options and \r\noperation context. This operation marks the retrieved messages as invisible in the queue for the default \r\nvisibility timeout period. \r\n"
  example: []
  syntax:
    content: public virtual IEnumerable<CloudQueueMessage> GetMessages(int messageCount, TimeSpan? visibilityTimeout = null, QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function GetMessages(messageCount As Integer, visibilityTimeout As TimeSpan? = Nothing, options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing) As IEnumerable(Of CloudQueueMessage)
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    - id: visibilityTimeout
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: An enumerable collection of messages.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessages(System.Int32, System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetMessages(Int32, Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32,System.AsyncCallback,System.Object)
  id: BeginGetMessages(System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginGetMessages(Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginGetMessages
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1818
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to get messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginGetMessages(int messageCount, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginGetMessages(messageCount As Integer, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginGetMessages(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginGetMessages(Int32, Nullable<TimeSpan>, QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32, System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginGetMessages
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1836
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to get the specified number of messages from the queue using the \r\nspecified request options and operation context. This operation marks the retrieved messages as invisible in the \r\nqueue for the default visibility timeout period.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginGetMessages(int messageCount, TimeSpan? visibilityTimeout, QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginGetMessages(messageCount As Integer, visibilityTimeout As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    - id: visibilityTimeout
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessages(System.Int32, System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginGetMessages(Int32, Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetMessages(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetMessages(System.IAsyncResult)
  id: EndGetMessages(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndGetMessages(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetMessages(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndGetMessages
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1855
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to get messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual IEnumerable<CloudQueueMessage> EndGetMessages(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndGetMessages(asyncResult As IAsyncResult) As IEnumerable(Of CloudQueueMessage)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: An enumerable collection of messages.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32)
  id: GetMessagesAsync(System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessagesAsync(Int32)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessagesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1866
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> GetMessagesAsync(int messageCount)
    content.vb: Public Overridable Function GetMessagesAsync(messageCount As Integer) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that is an enumerable collection of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Threading.CancellationToken)
  id: GetMessagesAsync(System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessagesAsync(Int32, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessagesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1878
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> GetMessagesAsync(int messageCount, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetMessagesAsync(messageCount As Integer, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that is an enumerable collection of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessagesAsync(Int32, Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32, System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessagesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1894
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get the specified number of messages from the queue using the \r\nspecified request options and operation context. This operation marks the retrieved messages as invisible in the \r\nqueue for the default visibility timeout period.\r\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> GetMessagesAsync(int messageCount, TimeSpan? visibilityTimeout, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function GetMessagesAsync(messageCount As Integer, visibilityTimeout As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    - id: visibilityTimeout
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that is an enumerable collection of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32, System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetMessagesAsync(Int32, Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: GetMessagesAsync(System.Int32,System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessagesAsync(Int32, Nullable<TimeSpan>, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32, System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessagesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1911
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get the specified number of messages from the queue using the \r\nspecified request options and operation context. This operation marks the retrieved messages as invisible in the \r\nqueue for the default visibility timeout period.\r\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> GetMessagesAsync(int messageCount, TimeSpan? visibilityTimeout, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetMessagesAsync(messageCount As Integer, visibilityTimeout As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to retrieve.
    - id: visibilityTimeout
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that is an enumerable collection of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessagesAsync(System.Int32, System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: GetMessagesAsync(Int32, Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessage(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessage(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetMessage(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessage(Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessage(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1926
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets a message from the queue using the default request options. This operation marks the retrieved message as invisible in the queue for the default visibility timeout period. \r\n"
  example: []
  syntax:
    content: public virtual CloudQueueMessage GetMessage(TimeSpan? visibilityTimeout = null, QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function GetMessage(visibilityTimeout As TimeSpan? = Nothing, options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing) As CloudQueueMessage
    parameters:
    - id: visibilityTimeout
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessage(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetMessage(Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessage(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessage(System.AsyncCallback,System.Object)
  id: BeginGetMessage(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginGetMessage(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessage(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginGetMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1939
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to get a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginGetMessage(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginGetMessage(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessage(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessage(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginGetMessage(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginGetMessage(Nullable<TimeSpan>, QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessage(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginGetMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1955
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to get a single message from the queue, and specifies how long the message should be \r\nreserved before it becomes visible, and therefore available for deletion.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginGetMessage(TimeSpan? visibilityTimeout, QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginGetMessage(visibilityTimeout As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: visibilityTimeout
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginGetMessage(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginGetMessage(Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetMessage(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetMessage(System.IAsyncResult)
  id: EndGetMessage(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndGetMessage(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndGetMessage(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndGetMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1966
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to get a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual CloudQueueMessage EndGetMessage(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndGetMessage(asyncResult As IAsyncResult) As CloudQueueMessage
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync
  id: GetMessageAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessageAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1978
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> GetMessageAsync()
    content.vb: Public Overridable Function GetMessageAsync As Task(Of CloudQueueMessage)
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Threading.CancellationToken)
  id: GetMessageAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessageAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 1989
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> GetMessageAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetMessageAsync(cancellationToken As CancellationToken) As Task(Of CloudQueueMessage)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetMessageAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessageAsync(Nullable<TimeSpan>, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2003
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get a single message from the queue, and specifies how long the message should be \r\nreserved before it becomes visible, and therefore available for deletion.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> GetMessageAsync(TimeSpan? visibilityTimeout, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function GetMessageAsync(visibilityTimeout As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext) As Task(Of CloudQueueMessage)
    parameters:
    - id: visibilityTimeout
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetMessageAsync(Nullable(Of TimeSpan), QueueRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: GetMessageAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetMessageAsync(Nullable<TimeSpan>, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2018
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get a single message from the queue, and specifies how long the message should be \r\nreserved before it becomes visible, and therefore available for deletion.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> GetMessageAsync(TimeSpan? visibilityTimeout, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetMessageAsync(visibilityTimeout As TimeSpan?, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudQueueMessage)
    parameters:
    - id: visibilityTimeout
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the visibility timeout interval.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetMessageAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: GetMessageAsync(Nullable(Of TimeSpan), QueueRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessages(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessages(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: PeekMessages(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessages(Int32, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessages(System.Int32, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessages
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2033
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nPeeks a message from the queue, using the specified request options and operation context. A peek request retrieves a message from the queue without changing its visibility. \r\n"
  example: []
  syntax:
    content: public virtual IEnumerable<CloudQueueMessage> PeekMessages(int messageCount, QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function PeekMessages(messageCount As Integer, options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing) As IEnumerable(Of CloudQueueMessage)
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to peek.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: An enumerable collection of <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> objects.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessages(System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessages(System.Int32,System.AsyncCallback,System.Object)
  id: BeginPeekMessages(System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginPeekMessages(Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessages(System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginPeekMessages
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2053
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to peek messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginPeekMessages(int messageCount, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginPeekMessages(messageCount As Integer, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to peek.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessages(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessages(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginPeekMessages(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginPeekMessages(Int32, QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessages(System.Int32, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginPeekMessages
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2068
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to peek messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginPeekMessages(int messageCount, QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginPeekMessages(messageCount As Integer, options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to peek.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndPeekMessages(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndPeekMessages(System.IAsyncResult)
  id: EndPeekMessages(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndPeekMessages(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndPeekMessages(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndPeekMessages
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2087
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to peek messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual IEnumerable<CloudQueueMessage> EndPeekMessages(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndPeekMessages(asyncResult As IAsyncResult) As IEnumerable(Of CloudQueueMessage)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: An enumerable collection of <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> objects.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32)
  id: PeekMessagesAsync(System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessagesAsync(Int32)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessagesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2098
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to peek messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> PeekMessagesAsync(int messageCount)
    content.vb: Public Overridable Function PeekMessagesAsync(messageCount As Integer) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to peek.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that is an enumerable collection of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,System.Threading.CancellationToken)
  id: PeekMessagesAsync(System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessagesAsync(Int32, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessagesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2110
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to peek messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> PeekMessagesAsync(int messageCount, CancellationToken cancellationToken)
    content.vb: Public Overridable Function PeekMessagesAsync(messageCount As Integer, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to peek.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that is an enumerable collection of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessagesAsync(Int32, QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessagesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2123
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to peek messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> PeekMessagesAsync(int messageCount, QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function PeekMessagesAsync(messageCount As Integer, options As QueueRequestOptions, operationContext As OperationContext) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to peek.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that is an enumerable collection of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: PeekMessagesAsync(System.Int32,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessagesAsync(Int32, QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessagesAsync(System.Int32, Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessagesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2137
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to peek messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<IEnumerable<CloudQueueMessage>> PeekMessagesAsync(int messageCount, QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function PeekMessagesAsync(messageCount As Integer, options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of CloudQueueMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: The number of messages to peek.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that is an enumerable collection of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessage(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessage(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: PeekMessage(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessage(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessage(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2151
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nPeeks a single message from the queue. A peek request retrieves a message from the queue without changing its visibility.\r\n"
  example: []
  syntax:
    content: public virtual CloudQueueMessage PeekMessage(QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function PeekMessage(options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing) As CloudQueueMessage
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessage(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessage(System.AsyncCallback,System.Object)
  id: BeginPeekMessage(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginPeekMessage(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessage(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginPeekMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2164
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to get a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginPeekMessage(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginPeekMessage(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessage(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessage(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginPeekMessage(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginPeekMessage(QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginPeekMessage(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginPeekMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2178
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to peek a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginPeekMessage(QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginPeekMessage(options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndPeekMessage(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndPeekMessage(System.IAsyncResult)
  id: EndPeekMessage(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndPeekMessage(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndPeekMessage(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndPeekMessage
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2189
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to peek a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual CloudQueueMessage EndPeekMessage(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndPeekMessage(asyncResult As IAsyncResult) As CloudQueueMessage
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync
  id: PeekMessageAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessageAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2201
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> PeekMessageAsync()
    content.vb: Public Overridable Function PeekMessageAsync As Task(Of CloudQueueMessage)
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(System.Threading.CancellationToken)
  id: PeekMessageAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessageAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2212
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> PeekMessageAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function PeekMessageAsync(cancellationToken As CancellationToken) As Task(Of CloudQueueMessage)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessageAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2224
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> PeekMessageAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function PeekMessageAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task(Of CloudQueueMessage)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: PeekMessageAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.PeekMessageAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessageAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2237
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to get a single message from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudQueueMessage> PeekMessageAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function PeekMessageAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudQueueMessage)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Clear(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Clear(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Clear(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: Clear(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Clear(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Clear
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2250
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nClears all messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual void Clear(QueueRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub Clear(options As QueueRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginClear(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginClear(System.AsyncCallback,System.Object)
  id: BeginClear(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginClear(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginClear(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginClear
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2269
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to clear all messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginClear(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginClear(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginClear(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginClear(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginClear(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: BeginClear(QueueRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.BeginClear(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginClear
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2283
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nBegins an asynchronous operation to clear all messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginClear(QueueRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginClear(options As QueueRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndClear(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndClear(System.IAsyncResult)
  id: EndClear(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EndClear(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EndClear(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndClear
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2301
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nEnds an asynchronous operation to clear all messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual void EndClear(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndClear(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync
  id: ClearAsync
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ClearAsync()
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ClearAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2311
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to clear all messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task ClearAsync()
    content.vb: Public Overridable Function ClearAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(System.Threading.CancellationToken)
  id: ClearAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ClearAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ClearAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2322
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to clear all messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task ClearAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function ClearAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ClearAsync(QueueRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ClearAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2334
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to clear all messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task ClearAsync(QueueRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ClearAsync(options As QueueRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ClearAsync(QueueRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ClearAsync(Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ClearAsync
    path: src/Storage/Lib/ClassLibraryCommon/Queue/CloudQueue.cs
    startLine: 2347
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitiates an asynchronous operation to clear all messages from the queue.\r\n"
  example: []
  syntax:
    content: public virtual Task ClearAsync(QueueRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ClearAsync(options As QueueRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(System.Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CloudQueue(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CloudQueue(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueue\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public CloudQueue(Uri queueAddress)
    content.vb: Public Sub New(queueAddress As Uri)
    parameters:
    - id: queueAddress
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the queue.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CloudQueue(Uri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CloudQueue(System.Uri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueue\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public CloudQueue(Uri queueAddress, StorageCredentials credentials)
    content.vb: Public Sub New(queueAddress As Uri, credentials As StorageCredentials)
    parameters:
    - id: queueAddress
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the queue.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: CloudQueue(StorageUri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.CloudQueue(Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueue\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public CloudQueue(StorageUri queueAddress, StorageCredentials credentials)
    content.vb: Public Sub New(queueAddress As StorageUri, credentials As StorageCredentials)
    parameters:
    - id: queueAddress
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri" data-throw-if-not-resolved="false"></xref> containing the absolute URI to the queue at both the primary and secondary locations.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ServiceClient
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceClient
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\"></xref> object that represents the Queue service.\r\n"
  example: []
  syntax:
    content: >-
      public CloudQueueClient ServiceClient

      {

          get;

      }
    content.vb: Public ReadOnly Property ServiceClient As CloudQueueClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Uri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Uri
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the queue URI for the primary location.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Uri

      {

          get;

      }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the queue at the primary location.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
  id: StorageUri
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageUri
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the queue URIs for both the primary and secondary locations.\r\n"
  example: []
  syntax:
    content: >-
      public StorageUri StorageUri

      {

          get;

      }
    content.vb: Public ReadOnly Property StorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri" data-throw-if-not-resolved="false"></xref> containing the queue's URIs for both the primary and secondary locations.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Name
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 121
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the name of the queue.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

      }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string containing the name of the queue.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount
  id: ApproximateMessageCount
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: ApproximateMessageCount
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.ApproximateMessageCount
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ApproximateMessageCount
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 127
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the approximate message count for the queue.\r\n"
  example: []
  syntax:
    content: >-
      public int ? ApproximateMessageCount

      {

          get;

      }
    content.vb: Public ReadOnly Property ApproximateMessageCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The approximate message count.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage
  id: EncodeMessage
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: EncodeMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.EncodeMessage
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EncodeMessage
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 133
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets or sets a value indicating whether to apply base64 encoding when adding or retrieving messages.\r\n"
  example: []
  syntax:
    content: >-
      public bool EncodeMessage

      {

          get;

          set;

      }
    content.vb: Public Property EncodeMessage As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> to encode messages; otherwise, <code>false</code>. The default value is <code>true</code>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: Metadata
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.Metadata
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Metadata
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 139
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the queue's metadata.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> Metadata

      {

          get;

      }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: An <xref href="System.Collections.Generic.IDictionary`2" data-throw-if-not-resolved="false"></xref> object containing the queue's metadata.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessQueuePolicy)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 280
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nReturns a shared access signature for the queue.\r\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessQueuePolicy policy)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessQueuePolicy) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessQueuePolicy, String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 292
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nReturns a shared access signature for the queue.\r\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessQueuePolicy policy, string accessPolicyIdentifier)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessQueuePolicy, accessPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: accessPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessQueuePolicy, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy, System.String, System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>, Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Queue/CloudQueue.Common.cs
    startLine: 306
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nReturns a shared access signature for the queue.\r\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessQueuePolicy policy, string accessPolicyIdentifier, SharedAccessProtocol? protocols, IPAddressOrRange ipAddressOrRange)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessQueuePolicy, accessPolicyIdentifier As String, protocols As SharedAccessProtocol?, ipAddressOrRange As IPAddressOrRange) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: accessPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    - id: protocols
      type: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
      description: The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.
    - id: ipAddressOrRange
      type: Microsoft.WindowsAzure.Storage.IPAddressOrRange
      description: The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy, System.String, System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol), Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  name.vb: GetSharedAccessSignature(SharedAccessQueuePolicy, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
references:
- uid: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue
  fullName: Microsoft.WindowsAzure.Storage.Queue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: QueueRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  fullName: System.AsyncCallback
- uid: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: ICancellableAsyncResult
  fullName: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: QueuePermissions
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<QueuePermissions>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  name.vb: Task(Of QueuePermissions)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
    name: QueuePermissions
    fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
    name: QueuePermissions
    fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: CloudQueueMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: MessageUpdateFields
  fullName: Microsoft.WindowsAzure.Storage.Queue.MessageUpdateFields
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CloudQueueMessage>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage>
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  name.vb: IEnumerable(Of CloudQueueMessage)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
    name: CloudQueueMessage
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
    name: CloudQueueMessage
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<CloudQueueMessage>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage>>
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage))
  name.vb: Task(Of IEnumerable(Of CloudQueueMessage))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
    name: CloudQueueMessage
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
    name: CloudQueueMessage
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CloudQueueMessage>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)
  name.vb: Task(Of CloudQueueMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
    name: CloudQueueMessage
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
    name: CloudQueueMessage
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: CloudQueue
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth
  fullName: Microsoft.WindowsAzure.Storage.Auth
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue.StorageUri
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: CloudQueueClient
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: SharedAccessQueuePolicy
  fullName: Microsoft.WindowsAzure.Storage.Queue.SharedAccessQueuePolicy
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SharedAccessProtocol>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol)
  name.vb: Nullable(Of SharedAccessProtocol)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.IPAddressOrRange
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IPAddressOrRange
  fullName: Microsoft.WindowsAzure.Storage.IPAddressOrRange
