items:
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient
  commentId: T:Microsoft.Azure.Management.Batch.IBatchManagementClient
  id: IBatchManagementClient
  parent: Microsoft.Azure.Management.Batch
  children:
  - Microsoft.Azure.Management.Batch.IBatchManagementClient.Accounts
  - Microsoft.Azure.Management.Batch.IBatchManagementClient.ApiVersion
  - Microsoft.Azure.Management.Batch.IBatchManagementClient.Applications
  - Microsoft.Azure.Management.Batch.IBatchManagementClient.BaseUri
  - Microsoft.Azure.Management.Batch.IBatchManagementClient.Credentials
  - Microsoft.Azure.Management.Batch.IBatchManagementClient.GetAccountCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Batch.IBatchManagementClient.GetAccountDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Batch.IBatchManagementClient.LongRunningOperationInitialTimeout
  - Microsoft.Azure.Management.Batch.IBatchManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.Batch.IBatchManagementClient.Subscriptions
  langs:
  - csharp
  - vb
  name: IBatchManagementClient
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient
  type: Interface
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IBatchManagementClient
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  syntax:
    content: 'public interface IBatchManagementClient : IDisposable'
    content.vb: >-
      Public Interface IBatchManagementClient

          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.Batch.IBatchManagementClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Management.Batch.IBatchManagementClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ApiVersion
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nGets the API version.\r\n"
  example: []
  syntax:
    content: >-
      string ApiVersion

      {

          get;

      }
    content.vb: ReadOnly Property ApiVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Batch.IBatchManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.Batch.IBatchManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BaseUri
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nGets the URI used as the base for all cloud service requests.\r\n"
  example: []
  syntax:
    content: >-
      Uri BaseUri

      {

          get;

      }
    content.vb: ReadOnly Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Batch.IBatchManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.Batch.IBatchManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Credentials
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nGets subscription credentials which uniquely identify Microsoft\r\nAzure subscription. The subscription ID forms part of the URI for\r\nevery service call.\r\n"
  example: []
  syntax:
    content: >-
      SubscriptionCloudCredentials Credentials

      {

          get;

      }
    content.vb: ReadOnly Property Credentials As SubscriptionCloudCredentials
    parameters: []
    return:
      type: SubscriptionCloudCredentials
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient.LongRunningOperationInitialTimeout
  commentId: P:Microsoft.Azure.Management.Batch.IBatchManagementClient.LongRunningOperationInitialTimeout
  id: LongRunningOperationInitialTimeout
  parent: Microsoft.Azure.Management.Batch.IBatchManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationInitialTimeout
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient.LongRunningOperationInitialTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationInitialTimeout
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nGets or sets the initial timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      int LongRunningOperationInitialTimeout

      {

          get;

          set;

      }
    content.vb: Property LongRunningOperationInitialTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Batch.IBatchManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Batch.IBatchManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationRetryTimeout
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nGets or sets the retry timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      int LongRunningOperationRetryTimeout

      {

          get;

          set;

      }
    content.vb: Property LongRunningOperationRetryTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient.Accounts
  commentId: P:Microsoft.Azure.Management.Batch.IBatchManagementClient.Accounts
  id: Accounts
  parent: Microsoft.Azure.Management.Batch.IBatchManagementClient
  langs:
  - csharp
  - vb
  name: Accounts
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient.Accounts
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Accounts
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nOperations for managing batch accounts\r\n"
  example: []
  syntax:
    content: >-
      IAccountOperations Accounts

      {

          get;

      }
    content.vb: ReadOnly Property Accounts As IAccountOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.IAccountOperations
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient.Applications
  commentId: P:Microsoft.Azure.Management.Batch.IBatchManagementClient.Applications
  id: Applications
  parent: Microsoft.Azure.Management.Batch.IBatchManagementClient
  langs:
  - csharp
  - vb
  name: Applications
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient.Applications
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Applications
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nOperations for managing applications.\r\n"
  example: []
  syntax:
    content: >-
      IApplicationOperations Applications

      {

          get;

      }
    content.vb: ReadOnly Property Applications As IApplicationOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.IApplicationOperations
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient.Subscriptions
  commentId: P:Microsoft.Azure.Management.Batch.IBatchManagementClient.Subscriptions
  id: Subscriptions
  parent: Microsoft.Azure.Management.Batch.IBatchManagementClient
  langs:
  - csharp
  - vb
  name: Subscriptions
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient.Subscriptions
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Subscriptions
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nOperations for managing Batch service properties at the\r\nsubscription level.\r\n"
  example: []
  syntax:
    content: >-
      ISubscriptionOperations Subscriptions

      {

          get;

      }
    content.vb: ReadOnly Property Subscriptions As ISubscriptionOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.ISubscriptionOperations
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient.GetAccountCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Batch.IBatchManagementClient.GetAccountCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetAccountCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Batch.IBatchManagementClient
  langs:
  - csharp
  - vb
  name: GetAccountCreateOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient.GetAccountCreateOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAccountCreateOperationStatusAsync
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 116
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nThe Get Account Create Operation Status operation returns the\r\nstatus of the account creation operation. After calling an\r\nasynchronous operation, you can call this method to determine\r\nwhether the operation has succeeded, failed, or is still in\r\nprogress.\r\n"
  example: []
  syntax:
    content: Task<BatchAccountCreateResponse> GetAccountCreateOperationStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Function GetAccountCreateOperationStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of BatchAccountCreateResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nLocation value returned by the BeginCreating operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse}
      description: "\r\nValues returned by the Create operation.\r\n"
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient.GetAccountDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Batch.IBatchManagementClient.GetAccountDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetAccountDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Batch.IBatchManagementClient
  langs:
  - csharp
  - vb
  name: GetAccountDeleteOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient.GetAccountDeleteOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAccountDeleteOperationStatusAsync
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/IBatchManagementClient.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nThe Get Delete Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Delete Operation Status to determine whether the\r\noperation has succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> GetAccountDeleteOperationStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Function GetAccountDeleteOperationStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nLocation value returned by the BeginDeleting operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
references:
- uid: Microsoft.Azure.Management.Batch
  isExternal: false
  name: Microsoft.Azure.Management.Batch
  fullName: Microsoft.Azure.Management.Batch
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: SubscriptionCloudCredentials
  isExternal: true
  name: SubscriptionCloudCredentials
  fullName: SubscriptionCloudCredentials
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Batch.IAccountOperations
  parent: Microsoft.Azure.Management.Batch
  isExternal: false
  name: IAccountOperations
  fullName: Microsoft.Azure.Management.Batch.IAccountOperations
- uid: Microsoft.Azure.Management.Batch.IApplicationOperations
  parent: Microsoft.Azure.Management.Batch
  isExternal: false
  name: IApplicationOperations
  fullName: Microsoft.Azure.Management.Batch.IApplicationOperations
- uid: Microsoft.Azure.Management.Batch.ISubscriptionOperations
  parent: Microsoft.Azure.Management.Batch
  isExternal: false
  name: ISubscriptionOperations
  fullName: Microsoft.Azure.Management.Batch.ISubscriptionOperations
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BatchAccountCreateResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse)
  name.vb: Task(Of BatchAccountCreateResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse
    name: BatchAccountCreateResponse
    fullName: Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse
    name: BatchAccountCreateResponse
    fullName: Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LongRunningOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse)
  name.vb: Task(Of LongRunningOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse
  - name: )
    fullName: )
