items:
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient
  commentId: T:Microsoft.Azure.Management.Batch.BatchManagementClient
  id: BatchManagementClient
  parent: Microsoft.Azure.Management.Batch
  children:
  - Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor
  - Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials)
  - Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri)
  - Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.Batch.BatchManagementClient.Accounts
  - Microsoft.Azure.Management.Batch.BatchManagementClient.ApiVersion
  - Microsoft.Azure.Management.Batch.BatchManagementClient.Applications
  - Microsoft.Azure.Management.Batch.BatchManagementClient.BaseUri
  - Microsoft.Azure.Management.Batch.BatchManagementClient.Clone(ServiceClient{Microsoft.Azure.Management.Batch.BatchManagementClient})
  - Microsoft.Azure.Management.Batch.BatchManagementClient.Credentials
  - Microsoft.Azure.Management.Batch.BatchManagementClient.GetAccountCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Batch.BatchManagementClient.GetAccountDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Batch.BatchManagementClient.LongRunningOperationInitialTimeout
  - Microsoft.Azure.Management.Batch.BatchManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.Batch.BatchManagementClient.Subscriptions
  langs:
  - csharp
  - vb
  name: BatchManagementClient
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BatchManagementClient
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  syntax:
    content: 'public class BatchManagementClient : ServiceClient<BatchManagementClient>, IBatchManagementClient, IDisposable'
    content.vb: >-
      Public Class BatchManagementClient

          Inherits ServiceClient(Of BatchManagementClient)

          Implements IBatchManagementClient, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Batch.IBatchManagementClient
  - System.IDisposable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.Batch.BatchManagementClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ApiVersion
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nGets the API version.\r\n"
  example: []
  syntax:
    content: >-
      public string ApiVersion

      {

          get;

      }
    content.vb: Public ReadOnly Property ApiVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Batch.BatchManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BaseUri
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nGets the URI used as the base for all cloud service requests.\r\n"
  example: []
  syntax:
    content: >-
      public Uri BaseUri

      {

          get;

      }
    content.vb: Public ReadOnly Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Batch.BatchManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Credentials
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nGets subscription credentials which uniquely identify Microsoft\r\nAzure subscription. The subscription ID forms part of the URI for\r\nevery service call.\r\n"
  example: []
  syntax:
    content: >-
      public SubscriptionCloudCredentials Credentials

      {

          get;

      }
    content.vb: Public ReadOnly Property Credentials As SubscriptionCloudCredentials
    parameters: []
    return:
      type: SubscriptionCloudCredentials
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.LongRunningOperationInitialTimeout
  commentId: P:Microsoft.Azure.Management.Batch.BatchManagementClient.LongRunningOperationInitialTimeout
  id: LongRunningOperationInitialTimeout
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationInitialTimeout
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.LongRunningOperationInitialTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationInitialTimeout
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nGets or sets the initial timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      public int LongRunningOperationInitialTimeout

      {

          get;

          set;

      }
    content.vb: Public Property LongRunningOperationInitialTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Batch.BatchManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationRetryTimeout
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nGets or sets the retry timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      public int LongRunningOperationRetryTimeout

      {

          get;

          set;

      }
    content.vb: Public Property LongRunningOperationRetryTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.Accounts
  commentId: P:Microsoft.Azure.Management.Batch.BatchManagementClient.Accounts
  id: Accounts
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: Accounts
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.Accounts
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Accounts
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nOperations for managing batch accounts\r\n"
  example: []
  syntax:
    content: >-
      public virtual IAccountOperations Accounts

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property Accounts As IAccountOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.IAccountOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.Applications
  commentId: P:Microsoft.Azure.Management.Batch.BatchManagementClient.Applications
  id: Applications
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: Applications
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.Applications
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Applications
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nOperations for managing applications.\r\n"
  example: []
  syntax:
    content: >-
      public virtual IApplicationOperations Applications

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property Applications As IApplicationOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.IApplicationOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.Subscriptions
  commentId: P:Microsoft.Azure.Management.Batch.BatchManagementClient.Subscriptions
  id: Subscriptions
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: Subscriptions
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.Subscriptions
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Subscriptions
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nOperations for managing Batch service properties at the\r\nsubscription level.\r\n"
  example: []
  syntax:
    content: >-
      public virtual ISubscriptionOperations Subscriptions

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property Subscriptions As ISubscriptionOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Batch.ISubscriptionOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor
  commentId: M:Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: BatchManagementClient()
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.BatchManagementClient()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nInitializes a new instance of the BatchManagementClient class.\r\n"
  example: []
  syntax:
    content: public BatchManagementClient()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri)
  commentId: M:Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri)
  id: '#ctor(SubscriptionCloudCredentials,System.Uri)'
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: BatchManagementClient(SubscriptionCloudCredentials, Uri)
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.BatchManagementClient(SubscriptionCloudCredentials, System.Uri)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 150
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nInitializes a new instance of the BatchManagementClient class.\r\n"
  example: []
  syntax:
    content: public BatchManagementClient(SubscriptionCloudCredentials credentials, Uri baseUri)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, baseUri As Uri)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
    - id: baseUri
      type: System.Uri
      description: "\r\nOptional. Gets the URI used as the base for all cloud service\r\nrequests.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials)
  commentId: M:Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials)
  id: '#ctor(SubscriptionCloudCredentials)'
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: BatchManagementClient(SubscriptionCloudCredentials)
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.BatchManagementClient(SubscriptionCloudCredentials)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nInitializes a new instance of the BatchManagementClient class.\r\n"
  example: []
  syntax:
    content: public BatchManagementClient(SubscriptionCloudCredentials credentials)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: BatchManagementClient(HttpClient)
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.BatchManagementClient(System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nInitializes a new instance of the BatchManagementClient class.\r\n"
  example: []
  syntax:
    content: public BatchManagementClient(HttpClient httpClient)
    content.vb: Public Sub New(httpClient As HttpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\r\nThe Http client\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  id: '#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: BatchManagementClient(SubscriptionCloudCredentials, Uri, HttpClient)
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.BatchManagementClient(SubscriptionCloudCredentials, System.Uri, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 221
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nInitializes a new instance of the BatchManagementClient class.\r\n"
  example: []
  syntax:
    content: public BatchManagementClient(SubscriptionCloudCredentials credentials, Uri baseUri, HttpClient httpClient)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, baseUri As Uri, httpClient As HttpClient)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
    - id: baseUri
      type: System.Uri
      description: "\r\nOptional. Gets the URI used as the base for all cloud service\r\nrequests.\r\n"
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\r\nThe Http client\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.Batch.BatchManagementClient.#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  id: '#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: BatchManagementClient(SubscriptionCloudCredentials, HttpClient)
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.BatchManagementClient(SubscriptionCloudCredentials, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 249
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nInitializes a new instance of the BatchManagementClient class.\r\n"
  example: []
  syntax:
    content: public BatchManagementClient(SubscriptionCloudCredentials credentials, HttpClient httpClient)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, httpClient As HttpClient)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\r\nThe Http client\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.Clone(ServiceClient{Microsoft.Azure.Management.Batch.BatchManagementClient})
  commentId: M:Microsoft.Azure.Management.Batch.BatchManagementClient.Clone(ServiceClient{Microsoft.Azure.Management.Batch.BatchManagementClient})
  id: Clone(ServiceClient{Microsoft.Azure.Management.Batch.BatchManagementClient})
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: Clone(ServiceClient<BatchManagementClient>)
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.Clone(ServiceClient<Microsoft.Azure.Management.Batch.BatchManagementClient>)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Clone
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 269
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nClones properties from current instance to another\r\nBatchManagementClient instance\r\n"
  example: []
  syntax:
    content: protected override void Clone(ServiceClient<BatchManagementClient> client)
    content.vb: Protected Overrides Sub Clone(client As ServiceClient(Of BatchManagementClient))
    parameters:
    - id: client
      type: ServiceClient{Microsoft.Azure.Management.Batch.BatchManagementClient}
      description: "\r\nInstance of BatchManagementClient to clone to\r\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Azure.Management.Batch.BatchManagementClient.Clone(ServiceClient(Of Microsoft.Azure.Management.Batch.BatchManagementClient))
  name.vb: Clone(ServiceClient(Of BatchManagementClient))
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.GetAccountCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Batch.BatchManagementClient.GetAccountCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetAccountCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: GetAccountCreateOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.GetAccountCreateOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAccountCreateOperationStatusAsync
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 355
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nThe Get Account Create Operation Status operation returns the\r\nstatus of the account creation operation. After calling an\r\nasynchronous operation, you can call this method to determine\r\nwhether the operation has succeeded, failed, or is still in\r\nprogress.\r\n"
  example: []
  syntax:
    content: public Task<BatchAccountCreateResponse> GetAccountCreateOperationStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Public Function GetAccountCreateOperationStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of BatchAccountCreateResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the BeginCreating operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse}
      description: "\r\nValues returned by the Create operation.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Batch.BatchManagementClient.GetAccountDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Batch.BatchManagementClient.GetAccountDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetAccountDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Batch.BatchManagementClient
  langs:
  - csharp
  - vb
  name: GetAccountDeleteOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Batch.BatchManagementClient.GetAccountDeleteOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAccountDeleteOperationStatusAsync
    path: src/src/ResourceManagement/Batch/BatchManagement/Generated/BatchManagementClient.cs
    startLine: 615
  assemblies:
  - Microsoft.Azure.Management.Batch
  namespace: Microsoft.Azure.Management.Batch
  summary: "\r\nThe Get Delete Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Delete Operation Status to determine whether the\r\noperation has succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public Task<LongRunningOperationResponse> GetAccountDeleteOperationStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Public Function GetAccountDeleteOperationStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the BeginDeleting operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Batch
  isExternal: false
  name: Microsoft.Azure.Management.Batch
  fullName: Microsoft.Azure.Management.Batch
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Batch.IBatchManagementClient
  parent: Microsoft.Azure.Management.Batch
  isExternal: false
  name: IBatchManagementClient
  fullName: Microsoft.Azure.Management.Batch.IBatchManagementClient
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: SubscriptionCloudCredentials
  isExternal: true
  name: SubscriptionCloudCredentials
  fullName: SubscriptionCloudCredentials
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Batch.IAccountOperations
  parent: Microsoft.Azure.Management.Batch
  isExternal: false
  name: IAccountOperations
  fullName: Microsoft.Azure.Management.Batch.IAccountOperations
- uid: Microsoft.Azure.Management.Batch.IApplicationOperations
  parent: Microsoft.Azure.Management.Batch
  isExternal: false
  name: IApplicationOperations
  fullName: Microsoft.Azure.Management.Batch.IApplicationOperations
- uid: Microsoft.Azure.Management.Batch.ISubscriptionOperations
  parent: Microsoft.Azure.Management.Batch
  isExternal: false
  name: ISubscriptionOperations
  fullName: Microsoft.Azure.Management.Batch.ISubscriptionOperations
- uid: System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: ServiceClient{Microsoft.Azure.Management.Batch.BatchManagementClient}
  definition: ServiceClient`1
  name: ServiceClient<BatchManagementClient>
  fullName: ServiceClient<Microsoft.Azure.Management.Batch.BatchManagementClient>
  fullname.vb: ServiceClient(Of Microsoft.Azure.Management.Batch.BatchManagementClient)
  name.vb: ServiceClient(Of BatchManagementClient)
  spec.csharp:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Batch.BatchManagementClient
    name: BatchManagementClient
    fullName: Microsoft.Azure.Management.Batch.BatchManagementClient
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Batch.BatchManagementClient
    name: BatchManagementClient
    fullName: Microsoft.Azure.Management.Batch.BatchManagementClient
  - name: )
    fullName: )
- uid: ServiceClient`1
  isExternal: true
  name: ServiceClient<>
  fullName: ServiceClient<>
  fullname.vb: ServiceClient(Of )
  name.vb: ServiceClient(Of )
  spec.csharp:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BatchAccountCreateResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse)
  name.vb: Task(Of BatchAccountCreateResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse
    name: BatchAccountCreateResponse
    fullName: Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse
    name: BatchAccountCreateResponse
    fullName: Microsoft.Azure.Management.Batch.Models.BatchAccountCreateResponse
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LongRunningOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse)
  name.vb: Task(Of LongRunningOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.Batch.Models.LongRunningOperationResponse
  - name: )
    fullName: )
