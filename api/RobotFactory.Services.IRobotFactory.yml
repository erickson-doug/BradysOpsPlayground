items:
- uid: RobotFactory.Services.IRobotFactory
  commentId: T:RobotFactory.Services.IRobotFactory
  id: IRobotFactory
  parent: RobotFactory.Services
  children:
  - RobotFactory.Services.IRobotFactory.AttachRobot(RobotFactory.Models.Robot)
  - RobotFactory.Services.IRobotFactory.DetachRobot(System.Int32)
  - RobotFactory.Services.IRobotFactory.RechargeRobot(System.Int32)
  - RobotFactory.Services.IRobotFactory.RobotUsed
  - RobotFactory.Services.IRobotFactory.SomeGenericMethod``1(``0)
  - RobotFactory.Services.IRobotFactory.UseRobot(System.Int32)
  langs:
  - csharp
  - vb
  name: IRobotFactory
  fullName: RobotFactory.Services.IRobotFactory
  type: Interface
  source:
    remote:
      path: src/RobotFactory/Services/IRobotFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IRobotFactory
    path: src/RobotFactory/Services/IRobotFactory.cs
    startLine: 12
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  summary: "\r\nThis is the developer-supplied summary. No one will ever see it as long as there's a remarks override. \r\n"
  example: []
  syntax:
    content: public interface IRobotFactory
    content.vb: Public Interface IRobotFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: RobotFactory.Services.IRobotFactory.AttachRobot(RobotFactory.Models.Robot)
  commentId: M:RobotFactory.Services.IRobotFactory.AttachRobot(RobotFactory.Models.Robot)
  id: AttachRobot(RobotFactory.Models.Robot)
  parent: RobotFactory.Services.IRobotFactory
  langs:
  - csharp
  - vb
  name: AttachRobot(Robot)
  fullName: RobotFactory.Services.IRobotFactory.AttachRobot(RobotFactory.Models.Robot)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/IRobotFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AttachRobot
    path: src/RobotFactory/Services/IRobotFactory.cs
    startLine: 19
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  summary: "\r\nAttach the robot to the assembly line.\r\n"
  example: []
  syntax:
    content: bool AttachRobot(Robot robot)
    content.vb: Function AttachRobot(robot As Robot) As Boolean
    parameters:
    - id: robot
      type: RobotFactory.Models.Robot
      description: The <em>robot</em> parameter is the robot you want to install.
    return:
      type: System.Boolean
      description: 
- uid: RobotFactory.Services.IRobotFactory.DetachRobot(System.Int32)
  commentId: M:RobotFactory.Services.IRobotFactory.DetachRobot(System.Int32)
  id: DetachRobot(System.Int32)
  parent: RobotFactory.Services.IRobotFactory
  langs:
  - csharp
  - vb
  name: DetachRobot(Int32)
  fullName: RobotFactory.Services.IRobotFactory.DetachRobot(System.Int32)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/IRobotFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DetachRobot
    path: src/RobotFactory/Services/IRobotFactory.cs
    startLine: 21
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: bool DetachRobot(int robotId)
    content.vb: Function DetachRobot(robotId As Integer) As Boolean
    parameters:
    - id: robotId
      type: System.Int32
    return:
      type: System.Boolean
- uid: RobotFactory.Services.IRobotFactory.RechargeRobot(System.Int32)
  commentId: M:RobotFactory.Services.IRobotFactory.RechargeRobot(System.Int32)
  id: RechargeRobot(System.Int32)
  parent: RobotFactory.Services.IRobotFactory
  langs:
  - csharp
  - vb
  name: RechargeRobot(Int32)
  fullName: RobotFactory.Services.IRobotFactory.RechargeRobot(System.Int32)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/IRobotFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RechargeRobot
    path: src/RobotFactory/Services/IRobotFactory.cs
    startLine: 22
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: bool RechargeRobot(int robotId)
    content.vb: Function RechargeRobot(robotId As Integer) As Boolean
    parameters:
    - id: robotId
      type: System.Int32
    return:
      type: System.Boolean
- uid: RobotFactory.Services.IRobotFactory.UseRobot(System.Int32)
  commentId: M:RobotFactory.Services.IRobotFactory.UseRobot(System.Int32)
  id: UseRobot(System.Int32)
  parent: RobotFactory.Services.IRobotFactory
  langs:
  - csharp
  - vb
  name: UseRobot(Int32)
  fullName: RobotFactory.Services.IRobotFactory.UseRobot(System.Int32)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/IRobotFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UseRobot
    path: src/RobotFactory/Services/IRobotFactory.cs
    startLine: 23
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: bool UseRobot(int robotId)
    content.vb: Function UseRobot(robotId As Integer) As Boolean
    parameters:
    - id: robotId
      type: System.Int32
    return:
      type: System.Boolean
- uid: RobotFactory.Services.IRobotFactory.SomeGenericMethod``1(``0)
  commentId: M:RobotFactory.Services.IRobotFactory.SomeGenericMethod``1(``0)
  id: SomeGenericMethod``1(``0)
  parent: RobotFactory.Services.IRobotFactory
  langs:
  - csharp
  - vb
  name: SomeGenericMethod<T>(T)
  fullName: RobotFactory.Services.IRobotFactory.SomeGenericMethod<T>(T)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/IRobotFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SomeGenericMethod
    path: src/RobotFactory/Services/IRobotFactory.cs
    startLine: 33
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  summary: "\r\nMethod used to simply test out the <em>T</em>. \r\n"
  remarks: "\r\nRepresents the status of an asynchronous <strong>operation</strong> and provides support for cancellation.\r\n"
  example: []
  syntax:
    content: void SomeGenericMethod<T>(T input)
    content.vb: Sub SomeGenericMethod(Of T)(input As T)
    parameters:
    - id: input
      type: '{T}'
      description: The instance to pass in.
    typeParameters:
    - id: T
      description: The type to be handled.
  fullName.vb: RobotFactory.Services.IRobotFactory.SomeGenericMethod(Of T)(T)
  name.vb: SomeGenericMethod(Of T)(T)
- uid: RobotFactory.Services.IRobotFactory.RobotUsed
  commentId: E:RobotFactory.Services.IRobotFactory.RobotUsed
  id: RobotUsed
  parent: RobotFactory.Services.IRobotFactory
  langs:
  - csharp
  - vb
  name: RobotUsed
  fullName: RobotFactory.Services.IRobotFactory.RobotUsed
  type: Event
  source:
    remote:
      path: src/RobotFactory/Services/IRobotFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RobotUsed
    path: src/RobotFactory/Services/IRobotFactory.cs
    startLine: 35
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: event EventHandler<Robot> RobotUsed
    content.vb: Event RobotUsed As EventHandler(Of Robot)
    return:
      type: System.EventHandler{RobotFactory.Models.Robot}
references:
- uid: RobotFactory.Services
  isExternal: false
  name: RobotFactory.Services
  fullName: RobotFactory.Services
- uid: RobotFactory.Models.Robot
  parent: RobotFactory.Models
  isExternal: false
  name: Robot
  fullName: RobotFactory.Models.Robot
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: RobotFactory.Models
  isExternal: false
  name: RobotFactory.Models
  fullName: RobotFactory.Models
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.EventHandler{RobotFactory.Models.Robot}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<Robot>
  fullName: System.EventHandler<RobotFactory.Models.Robot>
  fullname.vb: System.EventHandler(Of RobotFactory.Models.Robot)
  name.vb: EventHandler(Of Robot)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    fullName: <
  - uid: RobotFactory.Models.Robot
    name: Robot
    fullName: RobotFactory.Models.Robot
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: RobotFactory.Models.Robot
    name: Robot
    fullName: RobotFactory.Models.Robot
  - name: )
    fullName: )
- uid: System.EventHandler`1
  parent: System
  isExternal: true
  name: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    fullName: <
  - name: TEventArgs
    fullName: TEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    fullName: TEventArgs
  - name: )
    fullName: )
