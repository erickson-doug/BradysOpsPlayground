items:
- uid: RobotFactory.Models.Robot
  commentId: T:RobotFactory.Models.Robot
  id: Robot
  parent: RobotFactory.Models
  children:
  - RobotFactory.Models.Robot.BatteryLeft
  - RobotFactory.Models.Robot.Id
  - RobotFactory.Models.Robot.Name
  langs:
  - csharp
  - vb
  name: Robot
  fullName: RobotFactory.Models.Robot
  type: Class
  source:
    remote:
      path: src/RobotFactory/Models/Robot.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Robot
    path: src/RobotFactory/Models/Robot.cs
    startLine: 8
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Models
  syntax:
    content: public class Robot
    content.vb: Public Class Robot
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RobotFactory.Models.Robot.Id
  commentId: P:RobotFactory.Models.Robot.Id
  id: Id
  parent: RobotFactory.Models.Robot
  langs:
  - csharp
  - vb
  name: Id
  fullName: RobotFactory.Models.Robot.Id
  type: Property
  source:
    remote:
      path: src/RobotFactory/Models/Robot.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Id
    path: src/RobotFactory/Models/Robot.cs
    startLine: 10
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Models
  syntax:
    content: >-
      public int Id

      {

          get;

          set;

      }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotFactory.Models.Robot.Name
  commentId: P:RobotFactory.Models.Robot.Name
  id: Name
  parent: RobotFactory.Models.Robot
  langs:
  - csharp
  - vb
  name: Name
  fullName: RobotFactory.Models.Robot.Name
  type: Property
  source:
    remote:
      path: src/RobotFactory/Models/Robot.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/RobotFactory/Models/Robot.cs
    startLine: 11
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Models
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: RobotFactory.Models.Robot.BatteryLeft
  commentId: P:RobotFactory.Models.Robot.BatteryLeft
  id: BatteryLeft
  parent: RobotFactory.Models.Robot
  langs:
  - csharp
  - vb
  name: BatteryLeft
  fullName: RobotFactory.Models.Robot.BatteryLeft
  type: Property
  source:
    remote:
      path: src/RobotFactory/Models/Robot.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BatteryLeft
    path: src/RobotFactory/Models/Robot.cs
    startLine: 12
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Models
  syntax:
    content: >-
      public int BatteryLeft

      {

          get;

          set;

      }
    content.vb: Public Property BatteryLeft As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: RobotFactory.Models
  isExternal: false
  name: RobotFactory.Models
  fullName: RobotFactory.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
