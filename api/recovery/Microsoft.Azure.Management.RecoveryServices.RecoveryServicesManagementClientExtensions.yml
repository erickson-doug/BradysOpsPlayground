items:
- uid: Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions
  commentId: T:Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions
  id: RecoveryServicesManagementClientExtensions
  parent: Microsoft.Azure.Management.RecoveryServices
  children:
  - Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions.GetOperationStatus(Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient,System.String)
  - Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions.GetOperationStatusAsync(Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient,System.String)
  langs:
  - csharp
  - vb
  name: RecoveryServicesManagementClientExtensions
  fullName: Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices/RecoveryServicesManagement/Generated/RecoveryServicesManagementClientExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RecoveryServicesManagementClientExtensions
    path: src/src/ResourceManagement/RecoveryServices/RecoveryServicesManagement/Generated/RecoveryServicesManagementClientExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices
  namespace: Microsoft.Azure.Management.RecoveryServices
  syntax:
    content: public class RecoveryServicesManagementClientExtensions
    content.vb: Public Class RecoveryServicesManagementClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions.GetOperationStatus(Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions.GetOperationStatus(Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient,System.String)
  id: GetOperationStatus(Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient,System.String)
  parent: Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatus(IRecoveryServicesManagementClient, String)
  fullName: Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions.GetOperationStatus(Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices/RecoveryServicesManagement/Generated/RecoveryServicesManagementClientExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetOperationStatus
    path: src/src/ResourceManagement/RecoveryServices/RecoveryServicesManagement/Generated/RecoveryServicesManagementClientExtensions.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices
  namespace: Microsoft.Azure.Management.RecoveryServices
  summary: "\r\nThe Get Operation Status operation returns the status of\r\nthespecified operation. After calling an asynchronous operation,\r\nyou can call Get Operation Status to determine whether the\r\noperation has succeeded, failed, or is still in progress.  (see\r\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460783.aspx\r\nfor more information)\r\n"
  example: []
  syntax:
    content: public static RecoveryServicesOperationStatusResponse GetOperationStatus(IRecoveryServicesManagementClient operations, string requestId)
    content.vb: Public Shared Function GetOperationStatus(operations As IRecoveryServicesManagementClient, requestId As String) As RecoveryServicesOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient.\r\n"
    - id: requestId
      type: System.String
      description: "\r\nRequired. The request ID for the request you wish to track. The\r\nrequest ID is returned in the x-ms-request-id response header for\r\nevery request.\r\n"
    return:
      type: Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself.  If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request.  If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request, and also includes error\r\ninformation regarding the failure.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions.GetOperationStatusAsync(Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions.GetOperationStatusAsync(Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient,System.String)
  id: GetOperationStatusAsync(Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient,System.String)
  parent: Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetOperationStatusAsync(IRecoveryServicesManagementClient, String)
  fullName: Microsoft.Azure.Management.RecoveryServices.RecoveryServicesManagementClientExtensions.GetOperationStatusAsync(Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices/RecoveryServicesManagement/Generated/RecoveryServicesManagementClientExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetOperationStatusAsync
    path: src/src/ResourceManagement/RecoveryServices/RecoveryServicesManagement/Generated/RecoveryServicesManagementClientExtensions.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices
  namespace: Microsoft.Azure.Management.RecoveryServices
  summary: "\r\nThe Get Operation Status operation returns the status of\r\nthespecified operation. After calling an asynchronous operation,\r\nyou can call Get Operation Status to determine whether the\r\noperation has succeeded, failed, or is still in progress.  (see\r\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460783.aspx\r\nfor more information)\r\n"
  example: []
  syntax:
    content: public static Task<RecoveryServicesOperationStatusResponse> GetOperationStatusAsync(IRecoveryServicesManagementClient operations, string requestId)
    content.vb: Public Shared Function GetOperationStatusAsync(operations As IRecoveryServicesManagementClient, requestId As String) As Task(Of RecoveryServicesOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient.\r\n"
    - id: requestId
      type: System.String
      description: "\r\nRequired. The request ID for the request you wish to track. The\r\nrequest ID is returned in the x-ms-request-id response header for\r\nevery request.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself.  If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request.  If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request, and also includes error\r\ninformation regarding the failure.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.RecoveryServices
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices
  fullName: Microsoft.Azure.Management.RecoveryServices
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient
  parent: Microsoft.Azure.Management.RecoveryServices
  isExternal: false
  name: IRecoveryServicesManagementClient
  fullName: Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesManagementClient
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse
  parent: Microsoft.Azure.Management.RecoveryServices.Models
  isExternal: false
  name: RecoveryServicesOperationStatusResponse
  fullName: Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse
- uid: Microsoft.Azure.Management.RecoveryServices.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Models
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RecoveryServicesOperationStatusResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse)
  name.vb: Task(Of RecoveryServicesOperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse
    name: RecoveryServicesOperationStatusResponse
    fullName: Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse
    name: RecoveryServicesOperationStatusResponse
    fullName: Microsoft.Azure.Management.RecoveryServices.Models.RecoveryServicesOperationStatusResponse
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
