items:
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry
  id: ListBlobEntry
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.CopyState
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Metadata
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Name
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Properties
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.SnapshotTime
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Uri
  langs:
  - csharp
  - vb
  name: ListBlobEntry
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry
  type: Class
  source:
    remote:
      path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobEntry
    path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\r\nRepresents a blob item returned in the XML response for a blob listing operation.\r\n"
  example: []
  syntax:
    content: 'public sealed class ListBlobEntry : IListBlobEntry'
    content.vb: >-
      Public NotInheritable Class ListBlobEntry
          Implements IListBlobEntry
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.IListBlobEntry
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Name
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\r\nGets the name of the blob item.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {
          get;
      }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string containing the name of the blob item.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Properties
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Properties
    path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\r\nGets the blob item's system properties.\r\n"
  example: []
  syntax:
    content: >-
      public BlobProperties Properties

      {
          get;
      }
    content.vb: Public ReadOnly Property Properties As BlobProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobProperties" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry
  langs:
  - csharp
  - vb
  name: Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Metadata
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Metadata
    path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\r\nGets the user-defined metadata for the blob item.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> Metadata

      {
          get;
      }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: An <xref href="System.Collections.Generic.IDictionary`2" data-throw-if-not-resolved="false"></xref> object containing the blob item's metadata as a collection of name-value pairs.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.Uri
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Uri
    path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\r\nGets the blob item's URI.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Uri

      {
          get;
      }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
      description: The absolute URI to the blob item.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.SnapshotTime
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.SnapshotTime
  id: SnapshotTime
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry
  langs:
  - csharp
  - vb
  name: SnapshotTime
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.SnapshotTime
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SnapshotTime
    path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\r\nGets the date and time that the blob snapshot was taken, if this blob is a snapshot.\r\n"
  remarks: "\r\nIf the blob is not a snapshot, the value of this property is <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public DateTimeOffset? SnapshotTime

      {
          get;
      }
    content.vb: Public ReadOnly Property SnapshotTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: The blob's snapshot time if the blob is a snapshot; otherwise, <code>null</code>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.CopyState
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.CopyState
  id: CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry
  langs:
  - csharp
  - vb
  name: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.CopyState
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CopyState
    path: src/Storage/Common/Blob/Protocol/ListBlobEntry.cs
    startLine: 109
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\r\nGets the state of the most recent or pending copy operation.\r\n"
  example: []
  syntax:
    content: >-
      public CopyState CopyState

      {
          get;
      }
    content.vb: Public ReadOnly Property CopyState As CopyState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CopyState
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.CopyState" data-throw-if-not-resolved="false"></xref> object containing the copy state, or <code>null</code> if no copy blob state exists for this blob.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.IListBlobEntry
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol
  isExternal: false
  name: IListBlobEntry
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.IListBlobEntry
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.ListBlobEntry.CopyState
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState
