items:
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CopyState
  id: CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.CopyState.BytesCopied
  - Microsoft.WindowsAzure.Storage.Blob.CopyState.CompletionTime
  - Microsoft.WindowsAzure.Storage.Blob.CopyState.CopyId
  - Microsoft.WindowsAzure.Storage.Blob.CopyState.Source
  - Microsoft.WindowsAzure.Storage.Blob.CopyState.Status
  - Microsoft.WindowsAzure.Storage.Blob.CopyState.StatusDescription
  - Microsoft.WindowsAzure.Storage.Blob.CopyState.TotalBytes
  langs:
  - csharp
  - vb
  name: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CopyState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CopyState
    path: src/Storage/Lib/Common/Blob/CopyState.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRepresents the attributes of a copy operation.\r\n"
  example: []
  syntax:
    content: public sealed class CopyState
    content.vb: Public NotInheritable Class CopyState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState.CopyId
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CopyState.CopyId
  id: CopyId
  parent: Microsoft.WindowsAzure.Storage.Blob.CopyState
  langs:
  - csharp
  - vb
  name: CopyId
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState.CopyId
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CopyState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CopyId
    path: src/Storage/Lib/Common/Blob/CopyState.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the ID of the copy operation.\r\n"
  example: []
  syntax:
    content: >-
      public string CopyId

      {
          get;
      }
    content.vb: Public ReadOnly Property CopyId As String
    parameters: []
    return:
      type: System.String
      description: A copy ID string.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState.CompletionTime
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CopyState.CompletionTime
  id: CompletionTime
  parent: Microsoft.WindowsAzure.Storage.Blob.CopyState
  langs:
  - csharp
  - vb
  name: CompletionTime
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState.CompletionTime
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CopyState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CompletionTime
    path: src/Storage/Lib/Common/Blob/CopyState.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the time the copy operation completed, and indicates whether completion was due to a successful copy, the cancelling of the operation, or a failure.\r\n"
  example: []
  syntax:
    content: >-
      public DateTimeOffset? CompletionTime

      {
          get;
      }
    content.vb: Public ReadOnly Property CompletionTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> containing the completion time, or <code>null</code> if the operation has not completed.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState.Status
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CopyState.Status
  id: Status
  parent: Microsoft.WindowsAzure.Storage.Blob.CopyState
  langs:
  - csharp
  - vb
  name: Status
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState.Status
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CopyState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Status
    path: src/Storage/Lib/Common/Blob/CopyState.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the status of the copy operation.\r\n"
  example: []
  syntax:
    content: >-
      public CopyStatus Status

      {
          get;
      }
    content.vb: Public ReadOnly Property Status As CopyStatus
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CopyStatus
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CopyStatus" data-throw-if-not-resolved="false"></xref> enumeration indicating the status of the operation.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState.Source
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CopyState.Source
  id: Source
  parent: Microsoft.WindowsAzure.Storage.Blob.CopyState
  langs:
  - csharp
  - vb
  name: Source
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState.Source
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CopyState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Source
    path: src/Storage/Lib/Common/Blob/CopyState.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the source URI of a copy operation.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Source

      {
          get;
      }
    content.vb: Public ReadOnly Property Source As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> indicating the source of a copy operation, or <code>null</code>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState.BytesCopied
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CopyState.BytesCopied
  id: BytesCopied
  parent: Microsoft.WindowsAzure.Storage.Blob.CopyState
  langs:
  - csharp
  - vb
  name: BytesCopied
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState.BytesCopied
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CopyState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BytesCopied
    path: src/Storage/Lib/Common/Blob/CopyState.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the number of bytes copied in the operation so far.\r\n"
  example: []
  syntax:
    content: >-
      public long ? BytesCopied

      {
          get;
      }
    content.vb: Public ReadOnly Property BytesCopied As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The number of bytes copied in the operation so far, or <code>null</code>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState.TotalBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CopyState.TotalBytes
  id: TotalBytes
  parent: Microsoft.WindowsAzure.Storage.Blob.CopyState
  langs:
  - csharp
  - vb
  name: TotalBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState.TotalBytes
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CopyState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TotalBytes
    path: src/Storage/Lib/Common/Blob/CopyState.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the total number of bytes in the source of the copy.\r\n"
  example: []
  syntax:
    content: >-
      public long ? TotalBytes

      {
          get;
      }
    content.vb: Public ReadOnly Property TotalBytes As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The number of bytes in the source, or <code>null</code>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState.StatusDescription
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CopyState.StatusDescription
  id: StatusDescription
  parent: Microsoft.WindowsAzure.Storage.Blob.CopyState
  langs:
  - csharp
  - vb
  name: StatusDescription
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState.StatusDescription
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CopyState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StatusDescription
    path: src/Storage/Lib/Common/Blob/CopyState.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the description of the current status, if any.\r\n"
  example: []
  syntax:
    content: >-
      public string StatusDescription

      {
          get;
      }
    content.vb: Public ReadOnly Property StatusDescription As String
    parameters: []
    return:
      type: System.String
      description: A status description string, or <code>null</code>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyStatus
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CopyStatus
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyStatus
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
