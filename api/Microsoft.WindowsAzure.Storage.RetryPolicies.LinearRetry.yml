items:
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry
  id: LinearRetry
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  children:
  - Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.#ctor
  - Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.#ctor(System.TimeSpan,System.Int32)
  - Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.CreateInstance
  - Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  langs:
  - csharp
  - vb
  name: LinearRetry
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry
  type: Class
  source:
    remote:
      path: src/Storage/Common/RetryPolicies/LinearRetry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LinearRetry
    path: src/Storage/Common/RetryPolicies/LinearRetry.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\r\nRepresents a retry policy that performs a specified number of retries, using a specified fixed time interval between retries.\r\n"
  example: []
  syntax:
    content: 'public sealed class LinearRetry : IExtendedRetryPolicy, IRetryPolicy'
    content.vb: >-
      Public NotInheritable Class LinearRetry
          Implements IExtendedRetryPolicy, IRetryPolicy
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy
  - Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry
  langs:
  - csharp
  - vb
  name: LinearRetry()
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.LinearRetry()
  type: Constructor
  source:
    remote:
      path: src/Storage/Common/RetryPolicies/LinearRetry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Common/RetryPolicies/LinearRetry.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public LinearRetry()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.#ctor(System.TimeSpan,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.#ctor(System.TimeSpan,System.Int32)
  id: '#ctor(System.TimeSpan,System.Int32)'
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry
  langs:
  - csharp
  - vb
  name: LinearRetry(TimeSpan, Int32)
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.LinearRetry(System.TimeSpan, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Storage/Common/RetryPolicies/LinearRetry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Common/RetryPolicies/LinearRetry.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry\" data-throw-if-not-resolved=\"false\"></xref> class using the specified delta and maximum number of retries.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId = "Backoff", Justification = "Reviewed: Backoff is allowed.")]

      public LinearRetry(TimeSpan deltaBackoff, int maxAttempts)
    content.vb: >-
      <SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId:="Backoff", Justification:="Reviewed: Backoff is allowed.")>

      Public Sub New(deltaBackoff As TimeSpan, maxAttempts As Integer)
    parameters:
    - id: deltaBackoff
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the back-off interval between retries.
    - id: maxAttempts
      type: System.Int32
      description: An integer specifying the maximum number of retry attempts.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1704:IdentifiersShouldBeSpelledCorrectly
    namedArguments:
    - name: MessageId
      type: System.String
      value: Backoff
    - name: Justification
      type: System.String
      value: 'Reviewed: Backoff is allowed.'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry
  langs:
  - csharp
  - vb
  name: ShouldRetry(Int32, Int32, Exception, out TimeSpan, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.ShouldRetry(System.Int32, System.Int32, System.Exception, out System.TimeSpan, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Common/RetryPolicies/LinearRetry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ShouldRetry
    path: src/Storage/Common/RetryPolicies/LinearRetry.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\r\nDetermines whether the operation should be retried and the interval until the next retry.\r\n"
  example: []
  syntax:
    content: public bool ShouldRetry(int currentRetryCount, int statusCode, Exception lastException, out TimeSpan retryInterval, OperationContext operationContext)
    content.vb: Public Function ShouldRetry(currentRetryCount As Integer, statusCode As Integer, lastException As Exception, ByRef retryInterval As TimeSpan, operationContext As OperationContext) As Boolean
    parameters:
    - id: currentRetryCount
      type: System.Int32
      description: An integer specifying the number of retries for the given operation. A value of zero signifies this is the first error encountered.
    - id: statusCode
      type: System.Int32
      description: An integer containing the status code for the last operation.
    - id: lastException
      type: System.Exception
      description: An <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> object that represents the last exception encountered.
    - id: retryInterval
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> indicating the interval to wait until the next retry.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the operation should be retried; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.ShouldRetry(System.Int32, System.Int32, System.Exception, ByRef System.TimeSpan, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ShouldRetry(Int32, Int32, Exception, ByRef TimeSpan, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry
  langs:
  - csharp
  - vb
  name: Evaluate(RetryContext, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Common/RetryPolicies/LinearRetry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Evaluate
    path: src/Storage/Common/RetryPolicies/LinearRetry.cs
    startLine: 94
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\r\nDetermines whether the operation should be retried and the interval until the next retry.\r\n"
  example: []
  syntax:
    content: public RetryInfo Evaluate(RetryContext retryContext, OperationContext operationContext)
    content.vb: Public Function Evaluate(retryContext As RetryContext, operationContext As OperationContext) As RetryInfo
    parameters:
    - id: retryContext
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
      description: A <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext" data-throw-if-not-resolved="false"></xref> object that indicates the number of retries, the results of the last request, and whether the next retry should happen in the primary or secondary location, and specifies the location mode.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
      description: A <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo" data-throw-if-not-resolved="false"></xref> object that indicates the location mode, and whether the next retry should happen in the primary or secondary location. If <code>null</code>, the operation will not be retried.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.CreateInstance
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.CreateInstance
  id: CreateInstance
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry
  langs:
  - csharp
  - vb
  name: CreateInstance()
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry.CreateInstance()
  type: Method
  source:
    remote:
      path: src/Storage/Common/RetryPolicies/LinearRetry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateInstance
    path: src/Storage/Common/RetryPolicies/LinearRetry.cs
    startLine: 160
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\r\nGenerates a new retry policy for the current request attempt.\r\n"
  example: []
  syntax:
    content: public IRetryPolicy CreateInstance()
    content.vb: Public Function CreateInstance As IRetryPolicy
    return:
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: An <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy" data-throw-if-not-resolved="false"></xref> object that represents the retry policy for the current request attempt.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.RetryPolicies
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: IExtendedRetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: IRetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry
  isExternal: false
  name: LinearRetry
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LinearRetry
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  fullName: System.Exception
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: RetryContext
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: RetryInfo
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
