items:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  id: QueueHttpResponseParsers
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetNextVisibleTime(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetPopReceipt(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetRequestId(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers(System.IO.Stream,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  langs:
  - csharp
  - vb
  name: QueueHttpResponseParsers
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueueHttpResponseParsers
    path: src/Storage/Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nProvides a set of methods for parsing a response containing queue data from the Queue service.\r\n"
  example: []
  syntax:
    content: public class QueueHttpResponseParsers
    content.vb: Public Class QueueHttpResponseParsers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetRequestId(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetRequestId(System.Net.HttpWebResponse)
  id: GetRequestId(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetRequestId(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetRequestId(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/Protocol/QueueHttpResponseParsers.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetRequestId
    path: src/Storage/Lib/ClassLibraryCommon/Queue/Protocol/QueueHttpResponseParsers.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nGets the request ID from the response.\r\n"
  example: []
  syntax:
    content: public static string GetRequestId(HttpWebResponse response)
    content.vb: Public Shared Function GetRequestId(response As HttpWebResponse) As String
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: System.String
      description: A unique value associated with the request.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount(System.Net.HttpWebResponse)
  id: GetApproximateMessageCount(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetApproximateMessageCount(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetApproximateMessageCount(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/Protocol/QueueHttpResponseParsers.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetApproximateMessageCount
    path: src/Storage/Lib/ClassLibraryCommon/Queue/Protocol/QueueHttpResponseParsers.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nGets the approximate message count for the queue.\r\n"
  example: []
  syntax:
    content: public static string GetApproximateMessageCount(HttpWebResponse response)
    content.vb: Public Shared Function GetApproximateMessageCount(response As HttpWebResponse) As String
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: System.String
      description: The approximate count for the queue.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata(System.Net.HttpWebResponse)
  id: GetMetadata(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetMetadata(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetMetadata(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/Protocol/QueueHttpResponseParsers.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMetadata
    path: src/Storage/Lib/ClassLibraryCommon/Queue/Protocol/QueueHttpResponseParsers.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nGets the user-defined metadata.\r\n"
  example: []
  syntax:
    content: public static IDictionary<string, string> GetMetadata(HttpWebResponse response)
    content.vb: Public Shared Function GetMetadata(response As HttpWebResponse) As IDictionary(Of String, String)
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The response from server.
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: An object of type <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> containing the metadata.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetPopReceipt(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetPopReceipt(System.Net.HttpWebResponse)
  id: GetPopReceipt(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetPopReceipt(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetPopReceipt(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/Protocol/QueueHttpResponseParsers.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPopReceipt
    path: src/Storage/Lib/ClassLibraryCommon/Queue/Protocol/QueueHttpResponseParsers.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nExtracts the pop receipt from a web response header.\r\n"
  example: []
  syntax:
    content: public static string GetPopReceipt(HttpWebResponse response)
    content.vb: Public Shared Function GetPopReceipt(response As HttpWebResponse) As String
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: System.String
      description: The pop receipt stored in the header of the response.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetNextVisibleTime(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetNextVisibleTime(System.Net.HttpWebResponse)
  id: GetNextVisibleTime(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetNextVisibleTime(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.GetNextVisibleTime(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Queue/Protocol/QueueHttpResponseParsers.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetNextVisibleTime
    path: src/Storage/Lib/ClassLibraryCommon/Queue/Protocol/QueueHttpResponseParsers.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nExtracts the next visibility time from a web response header.\r\n"
  example: []
  syntax:
    content: public static DateTime GetNextVisibleTime(HttpWebResponse response)
    content.vb: Public Shared Function GetNextVisibleTime(response As HttpWebResponse) As Date
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: System.DateTime
      description: The time of next visibility stored in the header of the response.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties(System.IO.Stream)
  id: ReadServiceProperties(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: ReadServiceProperties(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceProperties(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReadServiceProperties
    path: src/Storage/Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nReads service properties from a stream.\r\n"
  example: []
  syntax:
    content: public static ServiceProperties ReadServiceProperties(Stream inputStream)
    content.vb: Public Shared Function ReadServiceProperties(inputStream As Stream) As ServiceProperties
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: The stream from which to read the service properties.
    return:
      type: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
      description: The service properties stored in the stream.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats(System.IO.Stream)
  id: ReadServiceStats(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: ReadServiceStats(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadServiceStats(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReadServiceStats
    path: src/Storage/Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nReads service stats from a stream.\r\n"
  example: []
  syntax:
    content: public static ServiceStats ReadServiceStats(Stream inputStream)
    content.vb: Public Shared Function ReadServiceStats(inputStream As Stream) As ServiceStats
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: The stream from which to read the service stats.
    return:
      type: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
      description: The service stats stored in the stream.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers(System.IO.Stream,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers(System.IO.Stream,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  id: ReadSharedAccessIdentifiers(System.IO.Stream,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers
  langs:
  - csharp
  - vb
  name: ReadSharedAccessIdentifiers(Stream, QueuePermissions)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpResponseParsers.ReadSharedAccessIdentifiers(System.IO.Stream, Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReadSharedAccessIdentifiers
    path: src/Storage/Lib/Common/Queue/Protocol/QueueHttpResponseParsers.Common.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nReads the share access policies from a stream in XML.\r\n"
  example: []
  syntax:
    content: public static void ReadSharedAccessIdentifiers(Stream inputStream, QueuePermissions permissions)
    content.vb: Public Shared Sub ReadSharedAccessIdentifiers(inputStream As Stream, permissions As QueuePermissions)
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: The stream of XML policies.
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
      description: The permissions object to which the policies are to be written.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.HttpWebResponse
  parent: System.Net
  isExternal: true
  name: HttpWebResponse
  fullName: System.Net.HttpWebResponse
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Collections.IDictionary
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: ServiceProperties
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Shared.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: ServiceStats
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: QueuePermissions
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueuePermissions
