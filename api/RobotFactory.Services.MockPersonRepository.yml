items:
- uid: RobotFactory.Services.MockPersonRepository
  commentId: T:RobotFactory.Services.MockPersonRepository
  id: MockPersonRepository
  parent: RobotFactory.Services
  children:
  - RobotFactory.Services.MockPersonRepository.CreatePerson(RobotFactory.Models.Person)
  - RobotFactory.Services.MockPersonRepository.DeletePerson(System.Int32)
  - RobotFactory.Services.MockPersonRepository.GetPeople
  langs:
  - csharp
  - vb
  name: MockPersonRepository
  fullName: RobotFactory.Services.MockPersonRepository
  type: Class
  source:
    remote:
      path: src/RobotFactory/Services/MockPersonRepository.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MockPersonRepository
    path: src/RobotFactory/Services/MockPersonRepository.cs
    startLine: 9
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: 'public class MockPersonRepository : IPersonRepository'
    content.vb: >-
      Public Class MockPersonRepository
          Implements IPersonRepository
  inheritance:
  - System.Object
  implements:
  - RobotFactory.Services.IPersonRepository
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RobotFactory.Services.MockPersonRepository.CreatePerson(RobotFactory.Models.Person)
  commentId: M:RobotFactory.Services.MockPersonRepository.CreatePerson(RobotFactory.Models.Person)
  id: CreatePerson(RobotFactory.Models.Person)
  parent: RobotFactory.Services.MockPersonRepository
  langs:
  - csharp
  - vb
  name: CreatePerson(Person)
  fullName: RobotFactory.Services.MockPersonRepository.CreatePerson(RobotFactory.Models.Person)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/MockPersonRepository.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreatePerson
    path: src/RobotFactory/Services/MockPersonRepository.cs
    startLine: 11
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: public bool CreatePerson(Person person)
    content.vb: Public Function CreatePerson(person As Person) As Boolean
    parameters:
    - id: person
      type: RobotFactory.Models.Person
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotFactory.Services.MockPersonRepository.DeletePerson(System.Int32)
  commentId: M:RobotFactory.Services.MockPersonRepository.DeletePerson(System.Int32)
  id: DeletePerson(System.Int32)
  parent: RobotFactory.Services.MockPersonRepository
  langs:
  - csharp
  - vb
  name: DeletePerson(Int32)
  fullName: RobotFactory.Services.MockPersonRepository.DeletePerson(System.Int32)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/MockPersonRepository.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeletePerson
    path: src/RobotFactory/Services/MockPersonRepository.cs
    startLine: 16
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: public bool DeletePerson(int personId)
    content.vb: Public Function DeletePerson(personId As Integer) As Boolean
    parameters:
    - id: personId
      type: System.Int32
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotFactory.Services.MockPersonRepository.GetPeople
  commentId: M:RobotFactory.Services.MockPersonRepository.GetPeople
  id: GetPeople
  parent: RobotFactory.Services.MockPersonRepository
  langs:
  - csharp
  - vb
  name: GetPeople()
  fullName: RobotFactory.Services.MockPersonRepository.GetPeople()
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/MockPersonRepository.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPeople
    path: src/RobotFactory/Services/MockPersonRepository.cs
    startLine: 21
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: public IEnumerable<Person> GetPeople()
    content.vb: Public Function GetPeople As IEnumerable(Of Person)
    return:
      type: System.Collections.Generic.IEnumerable{RobotFactory.Models.Person}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: RobotFactory.Services
  isExternal: false
  name: RobotFactory.Services
  fullName: RobotFactory.Services
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: RobotFactory.Services.IPersonRepository
  parent: RobotFactory.Services
  isExternal: false
  name: IPersonRepository
  fullName: RobotFactory.Services.IPersonRepository
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: RobotFactory.Models.Person
  parent: RobotFactory.Models
  isExternal: false
  name: Person
  fullName: RobotFactory.Models.Person
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: RobotFactory.Models
  isExternal: false
  name: RobotFactory.Models
  fullName: RobotFactory.Models
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{RobotFactory.Models.Person}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Person>
  fullName: System.Collections.Generic.IEnumerable<RobotFactory.Models.Person>
  fullname.vb: System.Collections.Generic.IEnumerable(Of RobotFactory.Models.Person)
  name.vb: IEnumerable(Of Person)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: RobotFactory.Models.Person
    name: Person
    fullName: RobotFactory.Models.Person
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: RobotFactory.Models.Person
    name: Person
    fullName: RobotFactory.Models.Person
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
