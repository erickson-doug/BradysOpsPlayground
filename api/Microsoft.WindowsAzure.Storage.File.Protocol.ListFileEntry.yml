items:
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  commentId: T:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  id: ListFileEntry
  parent: Microsoft.WindowsAzure.Storage.File.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri
  langs:
  - csharp
  - vb
  name: ListFileEntry
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/File/Protocol/ListFileEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListFileEntry
    path: src/Storage/Lib/Common/File/Protocol/ListFileEntry.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\r\nRepresents a file item returned in the XML response for a file listing operation.\r\n"
  example: []
  syntax:
    content: 'public sealed class ListFileEntry : IListFileEntry'
    content.vb: >-
      Public NotInheritable Class ListFileEntry

          Implements IListFileEntry
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Name
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/File/Protocol/ListFileEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/Storage/Lib/Common/File/Protocol/ListFileEntry.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\r\nGets the name of the file item.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

      }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The name of the file item.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Properties
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/File/Protocol/ListFileEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Properties
    path: src/Storage/Lib/Common/File/Protocol/ListFileEntry.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\r\nGets the file item's system properties.\r\n"
  example: []
  syntax:
    content: >-
      public FileProperties Properties

      {

          get;

      }
    content.vb: Public ReadOnly Property Properties As FileProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.FileProperties
      description: The file item's properties.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  langs:
  - csharp
  - vb
  name: Metadata
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Metadata
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/File/Protocol/ListFileEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Metadata
    path: src/Storage/Lib/Common/File/Protocol/ListFileEntry.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\r\nGets the user-defined metadata for the file item.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> Metadata

      {

          get;

      }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: The file item's metadata, as a collection of name-value pairs.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFileEntry.Uri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/File/Protocol/ListFileEntry.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Uri
    path: src/Storage/Lib/Common/File/Protocol/ListFileEntry.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\r\nGets the file item's URI.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Uri

      {

          get;

      }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
      description: The absolute URI to the file item.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.File.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.File.Protocol
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  parent: Microsoft.WindowsAzure.Storage.File.Protocol
  isExternal: false
  name: IListFileEntry
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: FileProperties
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties
- uid: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.File
  fullName: Microsoft.WindowsAzure.Storage.File
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
