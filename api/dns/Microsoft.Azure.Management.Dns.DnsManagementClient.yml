items:
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient
  commentId: T:Microsoft.Azure.Management.Dns.DnsManagementClient
  id: DnsManagementClient
  parent: Microsoft.Azure.Management.Dns
  children:
  - Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor
  - Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials)
  - Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri)
  - Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.Dns.DnsManagementClient.ApiVersion
  - Microsoft.Azure.Management.Dns.DnsManagementClient.BaseUri
  - Microsoft.Azure.Management.Dns.DnsManagementClient.Clone(ServiceClient{Microsoft.Azure.Management.Dns.DnsManagementClient})
  - Microsoft.Azure.Management.Dns.DnsManagementClient.Credentials
  - Microsoft.Azure.Management.Dns.DnsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Dns.DnsManagementClient.LongRunningOperationInitialTimeout
  - Microsoft.Azure.Management.Dns.DnsManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.Dns.DnsManagementClient.RecordSets
  - Microsoft.Azure.Management.Dns.DnsManagementClient.Zones
  langs:
  - csharp
  - vb
  name: DnsManagementClient
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DnsManagementClient
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nClient for managing DNS zones and record.\r\n"
  example: []
  syntax:
    content: 'public class DnsManagementClient : ServiceClient<DnsManagementClient>, IDnsManagementClient, IDisposable'
    content.vb: >-
      Public Class DnsManagementClient

          Inherits ServiceClient(Of DnsManagementClient)

          Implements IDnsManagementClient, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Dns.IDnsManagementClient
  - System.IDisposable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.Dns.DnsManagementClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ApiVersion
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nGets the API version.\r\n"
  example: []
  syntax:
    content: >-
      public string ApiVersion

      {

          get;

      }
    content.vb: Public ReadOnly Property ApiVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Dns.DnsManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BaseUri
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nGets the URI used as the base for all cloud service requests.\r\n"
  example: []
  syntax:
    content: >-
      public Uri BaseUri

      {

          get;

      }
    content.vb: Public ReadOnly Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Dns.DnsManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Credentials
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nGets subscription credentials which uniquely identify Microsoft\r\nAzure subscription. The subscription ID forms part of the URI for\r\nevery service call.\r\n"
  example: []
  syntax:
    content: >-
      public SubscriptionCloudCredentials Credentials

      {

          get;

      }
    content.vb: Public ReadOnly Property Credentials As SubscriptionCloudCredentials
    parameters: []
    return:
      type: SubscriptionCloudCredentials
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.LongRunningOperationInitialTimeout
  commentId: P:Microsoft.Azure.Management.Dns.DnsManagementClient.LongRunningOperationInitialTimeout
  id: LongRunningOperationInitialTimeout
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationInitialTimeout
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.LongRunningOperationInitialTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationInitialTimeout
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nGets or sets the initial timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      public int LongRunningOperationInitialTimeout

      {

          get;

          set;

      }
    content.vb: Public Property LongRunningOperationInitialTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Dns.DnsManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationRetryTimeout
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nGets or sets the retry timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      public int LongRunningOperationRetryTimeout

      {

          get;

          set;

      }
    content.vb: Public Property LongRunningOperationRetryTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.RecordSets
  commentId: P:Microsoft.Azure.Management.Dns.DnsManagementClient.RecordSets
  id: RecordSets
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: RecordSets
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.RecordSets
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RecordSets
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nOperations for managing the RecordSets in a DNS zone.\r\n"
  example: []
  syntax:
    content: >-
      public virtual IRecordSetOperations RecordSets

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property RecordSets As IRecordSetOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Dns.IRecordSetOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.Zones
  commentId: P:Microsoft.Azure.Management.Dns.DnsManagementClient.Zones
  id: Zones
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: Zones
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.Zones
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Zones
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nOperations for managing DNS zones.\r\n"
  example: []
  syntax:
    content: >-
      public virtual IZoneOperations Zones

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property Zones As IZoneOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Dns.IZoneOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor
  commentId: M:Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: DnsManagementClient()
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.DnsManagementClient()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nInitializes a new instance of the DnsManagementClient class.\r\n"
  example: []
  syntax:
    content: public DnsManagementClient()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri)
  commentId: M:Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri)
  id: '#ctor(SubscriptionCloudCredentials,System.Uri)'
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: DnsManagementClient(SubscriptionCloudCredentials, Uri)
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.DnsManagementClient(SubscriptionCloudCredentials, System.Uri)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nInitializes a new instance of the DnsManagementClient class.\r\n"
  example: []
  syntax:
    content: public DnsManagementClient(SubscriptionCloudCredentials credentials, Uri baseUri)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, baseUri As Uri)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
    - id: baseUri
      type: System.Uri
      description: "\r\nOptional. Gets the URI used as the base for all cloud service\r\nrequests.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials)
  commentId: M:Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials)
  id: '#ctor(SubscriptionCloudCredentials)'
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: DnsManagementClient(SubscriptionCloudCredentials)
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.DnsManagementClient(SubscriptionCloudCredentials)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 165
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nInitializes a new instance of the DnsManagementClient class.\r\n"
  example: []
  syntax:
    content: public DnsManagementClient(SubscriptionCloudCredentials credentials)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: DnsManagementClient(HttpClient)
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.DnsManagementClient(System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 184
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nInitializes a new instance of the DnsManagementClient class.\r\n"
  example: []
  syntax:
    content: public DnsManagementClient(HttpClient httpClient)
    content.vb: Public Sub New(httpClient As HttpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\r\nThe Http client\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  id: '#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: DnsManagementClient(SubscriptionCloudCredentials, Uri, HttpClient)
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.DnsManagementClient(SubscriptionCloudCredentials, System.Uri, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 210
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nInitializes a new instance of the DnsManagementClient class.\r\n"
  example: []
  syntax:
    content: public DnsManagementClient(SubscriptionCloudCredentials credentials, Uri baseUri, HttpClient httpClient)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, baseUri As Uri, httpClient As HttpClient)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
    - id: baseUri
      type: System.Uri
      description: "\r\nOptional. Gets the URI used as the base for all cloud service\r\nrequests.\r\n"
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\r\nThe Http client\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.Dns.DnsManagementClient.#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  id: '#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: DnsManagementClient(SubscriptionCloudCredentials, HttpClient)
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.DnsManagementClient(SubscriptionCloudCredentials, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 238
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nInitializes a new instance of the DnsManagementClient class.\r\n"
  example: []
  syntax:
    content: public DnsManagementClient(SubscriptionCloudCredentials credentials, HttpClient httpClient)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, httpClient As HttpClient)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\r\nThe Http client\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.Clone(ServiceClient{Microsoft.Azure.Management.Dns.DnsManagementClient})
  commentId: M:Microsoft.Azure.Management.Dns.DnsManagementClient.Clone(ServiceClient{Microsoft.Azure.Management.Dns.DnsManagementClient})
  id: Clone(ServiceClient{Microsoft.Azure.Management.Dns.DnsManagementClient})
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: Clone(ServiceClient<DnsManagementClient>)
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.Clone(ServiceClient<Microsoft.Azure.Management.Dns.DnsManagementClient>)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Clone
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 258
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nClones properties from current instance to another\r\nDnsManagementClient instance\r\n"
  example: []
  syntax:
    content: protected override void Clone(ServiceClient<DnsManagementClient> client)
    content.vb: Protected Overrides Sub Clone(client As ServiceClient(Of DnsManagementClient))
    parameters:
    - id: client
      type: ServiceClient{Microsoft.Azure.Management.Dns.DnsManagementClient}
      description: "\r\nInstance of DnsManagementClient to clone to\r\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Azure.Management.Dns.DnsManagementClient.Clone(ServiceClient(Of Microsoft.Azure.Management.Dns.DnsManagementClient))
  name.vb: Clone(ServiceClient(Of DnsManagementClient))
- uid: Microsoft.Azure.Management.Dns.DnsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Dns.DnsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Dns.DnsManagementClient
  langs:
  - csharp
  - vb
  name: GetLongRunningOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Dns.DnsManagementClient.GetLongRunningOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetLongRunningOperationStatusAsync
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/DnsManagementClient.cs
    startLine: 291
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public Task<ZoneDeleteResponse> GetLongRunningOperationStatusAsync(string azureAsyncOperation, CancellationToken cancellationToken)
    content.vb: Public Function GetLongRunningOperationStatusAsync(azureAsyncOperation As String, cancellationToken As CancellationToken) As Task(Of ZoneDeleteResponse)
    parameters:
    - id: azureAsyncOperation
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse}
      description: "\r\nThe response to a Zone Delete operation.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Dns
  isExternal: false
  name: Microsoft.Azure.Management.Dns
  fullName: Microsoft.Azure.Management.Dns
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Dns.IDnsManagementClient
  parent: Microsoft.Azure.Management.Dns
  isExternal: false
  name: IDnsManagementClient
  fullName: Microsoft.Azure.Management.Dns.IDnsManagementClient
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: SubscriptionCloudCredentials
  isExternal: true
  name: SubscriptionCloudCredentials
  fullName: SubscriptionCloudCredentials
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Dns.IRecordSetOperations
  parent: Microsoft.Azure.Management.Dns
  isExternal: false
  name: IRecordSetOperations
  fullName: Microsoft.Azure.Management.Dns.IRecordSetOperations
- uid: Microsoft.Azure.Management.Dns.IZoneOperations
  parent: Microsoft.Azure.Management.Dns
  isExternal: false
  name: IZoneOperations
  fullName: Microsoft.Azure.Management.Dns.IZoneOperations
- uid: System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: ServiceClient{Microsoft.Azure.Management.Dns.DnsManagementClient}
  definition: ServiceClient`1
  name: ServiceClient<DnsManagementClient>
  fullName: ServiceClient<Microsoft.Azure.Management.Dns.DnsManagementClient>
  fullname.vb: ServiceClient(Of Microsoft.Azure.Management.Dns.DnsManagementClient)
  name.vb: ServiceClient(Of DnsManagementClient)
  spec.csharp:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.DnsManagementClient
    name: DnsManagementClient
    fullName: Microsoft.Azure.Management.Dns.DnsManagementClient
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.DnsManagementClient
    name: DnsManagementClient
    fullName: Microsoft.Azure.Management.Dns.DnsManagementClient
  - name: )
    fullName: )
- uid: ServiceClient`1
  isExternal: true
  name: ServiceClient<>
  fullName: ServiceClient<>
  fullname.vb: ServiceClient(Of )
  name.vb: ServiceClient(Of )
  spec.csharp:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ZoneDeleteResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse)
  name.vb: Task(Of ZoneDeleteResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse
    name: ZoneDeleteResponse
    fullName: Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse
    name: ZoneDeleteResponse
    fullName: Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
