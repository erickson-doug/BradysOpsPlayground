items:
- uid: Microsoft.Azure.Management.Dns.IDnsManagementClient
  commentId: T:Microsoft.Azure.Management.Dns.IDnsManagementClient
  id: IDnsManagementClient
  parent: Microsoft.Azure.Management.Dns
  children:
  - Microsoft.Azure.Management.Dns.IDnsManagementClient.ApiVersion
  - Microsoft.Azure.Management.Dns.IDnsManagementClient.BaseUri
  - Microsoft.Azure.Management.Dns.IDnsManagementClient.Credentials
  - Microsoft.Azure.Management.Dns.IDnsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Dns.IDnsManagementClient.LongRunningOperationInitialTimeout
  - Microsoft.Azure.Management.Dns.IDnsManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.Dns.IDnsManagementClient.RecordSets
  - Microsoft.Azure.Management.Dns.IDnsManagementClient.Zones
  langs:
  - csharp
  - vb
  name: IDnsManagementClient
  fullName: Microsoft.Azure.Management.Dns.IDnsManagementClient
  type: Interface
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IDnsManagementClient
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nClient for managing DNS zones and record.\r\n"
  example: []
  syntax:
    content: 'public interface IDnsManagementClient : IDisposable'
    content.vb: >-
      Public Interface IDnsManagementClient

          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Dns.IDnsManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.Dns.IDnsManagementClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Management.Dns.IDnsManagementClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  fullName: Microsoft.Azure.Management.Dns.IDnsManagementClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ApiVersion
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nGets the API version.\r\n"
  example: []
  syntax:
    content: >-
      string ApiVersion

      {

          get;

      }
    content.vb: ReadOnly Property ApiVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Dns.IDnsManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Dns.IDnsManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.Dns.IDnsManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  fullName: Microsoft.Azure.Management.Dns.IDnsManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BaseUri
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nGets the URI used as the base for all cloud service requests.\r\n"
  example: []
  syntax:
    content: >-
      Uri BaseUri

      {

          get;

      }
    content.vb: ReadOnly Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Dns.IDnsManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Dns.IDnsManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.Dns.IDnsManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: Microsoft.Azure.Management.Dns.IDnsManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Credentials
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nGets subscription credentials which uniquely identify Microsoft\r\nAzure subscription. The subscription ID forms part of the URI for\r\nevery service call.\r\n"
  example: []
  syntax:
    content: >-
      SubscriptionCloudCredentials Credentials

      {

          get;

      }
    content.vb: ReadOnly Property Credentials As SubscriptionCloudCredentials
    parameters: []
    return:
      type: SubscriptionCloudCredentials
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Dns.IDnsManagementClient.LongRunningOperationInitialTimeout
  commentId: P:Microsoft.Azure.Management.Dns.IDnsManagementClient.LongRunningOperationInitialTimeout
  id: LongRunningOperationInitialTimeout
  parent: Microsoft.Azure.Management.Dns.IDnsManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationInitialTimeout
  fullName: Microsoft.Azure.Management.Dns.IDnsManagementClient.LongRunningOperationInitialTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationInitialTimeout
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nGets or sets the initial timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      int LongRunningOperationInitialTimeout

      {

          get;

          set;

      }
    content.vb: Property LongRunningOperationInitialTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Azure.Management.Dns.IDnsManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Dns.IDnsManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Dns.IDnsManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Dns.IDnsManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationRetryTimeout
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nGets or sets the retry timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      int LongRunningOperationRetryTimeout

      {

          get;

          set;

      }
    content.vb: Property LongRunningOperationRetryTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Azure.Management.Dns.IDnsManagementClient.RecordSets
  commentId: P:Microsoft.Azure.Management.Dns.IDnsManagementClient.RecordSets
  id: RecordSets
  parent: Microsoft.Azure.Management.Dns.IDnsManagementClient
  langs:
  - csharp
  - vb
  name: RecordSets
  fullName: Microsoft.Azure.Management.Dns.IDnsManagementClient.RecordSets
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RecordSets
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nOperations for managing the RecordSets in a DNS zone.\r\n"
  example: []
  syntax:
    content: >-
      IRecordSetOperations RecordSets

      {

          get;

      }
    content.vb: ReadOnly Property RecordSets As IRecordSetOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Dns.IRecordSetOperations
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Dns.IDnsManagementClient.Zones
  commentId: P:Microsoft.Azure.Management.Dns.IDnsManagementClient.Zones
  id: Zones
  parent: Microsoft.Azure.Management.Dns.IDnsManagementClient
  langs:
  - csharp
  - vb
  name: Zones
  fullName: Microsoft.Azure.Management.Dns.IDnsManagementClient.Zones
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Zones
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nOperations for managing DNS zones.\r\n"
  example: []
  syntax:
    content: >-
      IZoneOperations Zones

      {

          get;

      }
    content.vb: ReadOnly Property Zones As IZoneOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Dns.IZoneOperations
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Dns.IDnsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Dns.IDnsManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Dns.IDnsManagementClient
  langs:
  - csharp
  - vb
  name: GetLongRunningOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Dns.IDnsManagementClient.GetLongRunningOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetLongRunningOperationStatusAsync
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/IDnsManagementClient.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: Task<ZoneDeleteResponse> GetLongRunningOperationStatusAsync(string azureAsyncOperation, CancellationToken cancellationToken)
    content.vb: Function GetLongRunningOperationStatusAsync(azureAsyncOperation As String, cancellationToken As CancellationToken) As Task(Of ZoneDeleteResponse)
    parameters:
    - id: azureAsyncOperation
      type: System.String
      description: "\r\nLocation value returned by the Begin operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse}
      description: "\r\nThe response to a Zone Delete operation.\r\n"
references:
- uid: Microsoft.Azure.Management.Dns
  isExternal: false
  name: Microsoft.Azure.Management.Dns
  fullName: Microsoft.Azure.Management.Dns
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: SubscriptionCloudCredentials
  isExternal: true
  name: SubscriptionCloudCredentials
  fullName: SubscriptionCloudCredentials
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Dns.IRecordSetOperations
  parent: Microsoft.Azure.Management.Dns
  isExternal: false
  name: IRecordSetOperations
  fullName: Microsoft.Azure.Management.Dns.IRecordSetOperations
- uid: Microsoft.Azure.Management.Dns.IZoneOperations
  parent: Microsoft.Azure.Management.Dns
  isExternal: false
  name: IZoneOperations
  fullName: Microsoft.Azure.Management.Dns.IZoneOperations
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ZoneDeleteResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse)
  name.vb: Task(Of ZoneDeleteResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse
    name: ZoneDeleteResponse
    fullName: Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse
    name: ZoneDeleteResponse
    fullName: Microsoft.Azure.Management.Dns.Models.ZoneDeleteResponse
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
