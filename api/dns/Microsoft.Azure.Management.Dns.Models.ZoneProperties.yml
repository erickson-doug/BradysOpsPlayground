items:
- uid: Microsoft.Azure.Management.Dns.Models.ZoneProperties
  commentId: T:Microsoft.Azure.Management.Dns.Models.ZoneProperties
  id: ZoneProperties
  parent: Microsoft.Azure.Management.Dns.Models
  children:
  - Microsoft.Azure.Management.Dns.Models.ZoneProperties.#ctor
  - Microsoft.Azure.Management.Dns.Models.ZoneProperties.MaxNumberOfRecordSets
  - Microsoft.Azure.Management.Dns.Models.ZoneProperties.NameServers
  - Microsoft.Azure.Management.Dns.Models.ZoneProperties.NumberOfRecordSets
  - Microsoft.Azure.Management.Dns.Models.ZoneProperties.ParentResourceGroupName
  langs:
  - csharp
  - vb
  name: ZoneProperties
  fullName: Microsoft.Azure.Management.Dns.Models.ZoneProperties
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ZoneProperties
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nRepresents the properties of the zone.\r\n"
  example: []
  syntax:
    content: public class ZoneProperties
    content.vb: Public Class ZoneProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Dns.Models.ZoneProperties.MaxNumberOfRecordSets
  commentId: P:Microsoft.Azure.Management.Dns.Models.ZoneProperties.MaxNumberOfRecordSets
  id: MaxNumberOfRecordSets
  parent: Microsoft.Azure.Management.Dns.Models.ZoneProperties
  langs:
  - csharp
  - vb
  name: MaxNumberOfRecordSets
  fullName: Microsoft.Azure.Management.Dns.Models.ZoneProperties.MaxNumberOfRecordSets
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MaxNumberOfRecordSets
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the maximum number of record sets that can\r\nbe created in this zone.\r\n"
  example: []
  syntax:
    content: >-
      public long ? MaxNumberOfRecordSets

      {

          get;

          set;

      }
    content.vb: Public Property MaxNumberOfRecordSets As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.ZoneProperties.NameServers
  commentId: P:Microsoft.Azure.Management.Dns.Models.ZoneProperties.NameServers
  id: NameServers
  parent: Microsoft.Azure.Management.Dns.Models.ZoneProperties
  langs:
  - csharp
  - vb
  name: NameServers
  fullName: Microsoft.Azure.Management.Dns.Models.ZoneProperties.NameServers
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NameServers
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets the name servers populated for this zone. This is a\r\nread-only property and any attempt to set this value will be\r\nignored.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> NameServers

      {

          get;

          set;

      }
    content.vb: Public Property NameServers As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.ZoneProperties.NumberOfRecordSets
  commentId: P:Microsoft.Azure.Management.Dns.Models.ZoneProperties.NumberOfRecordSets
  id: NumberOfRecordSets
  parent: Microsoft.Azure.Management.Dns.Models.ZoneProperties
  langs:
  - csharp
  - vb
  name: NumberOfRecordSets
  fullName: Microsoft.Azure.Management.Dns.Models.ZoneProperties.NumberOfRecordSets
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NumberOfRecordSets
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the current number of record sets in this\r\nzone.\r\n"
  example: []
  syntax:
    content: >-
      public long ? NumberOfRecordSets

      {

          get;

          set;

      }
    content.vb: Public Property NumberOfRecordSets As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.ZoneProperties.ParentResourceGroupName
  commentId: P:Microsoft.Azure.Management.Dns.Models.ZoneProperties.ParentResourceGroupName
  id: ParentResourceGroupName
  parent: Microsoft.Azure.Management.Dns.Models.ZoneProperties
  langs:
  - csharp
  - vb
  name: ParentResourceGroupName
  fullName: Microsoft.Azure.Management.Dns.Models.ZoneProperties.ParentResourceGroupName
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ParentResourceGroupName
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets the resource group name for this zone. THis is a\r\nread-only property and any attempt to set this value will be\r\nignored.\r\n"
  example: []
  syntax:
    content: >-
      public string ParentResourceGroupName

      {

          get;

          set;

      }
    content.vb: Public Property ParentResourceGroupName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.ZoneProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Dns.Models.ZoneProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Dns.Models.ZoneProperties
  langs:
  - csharp
  - vb
  name: ZoneProperties()
  fullName: Microsoft.Azure.Management.Dns.Models.ZoneProperties.ZoneProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/ZoneProperties.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nInitializes a new instance of the ZoneProperties class.\r\n"
  example: []
  syntax:
    content: public ZoneProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Dns.Models
  isExternal: false
  name: Microsoft.Azure.Management.Dns.Models
  fullName: Microsoft.Azure.Management.Dns.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
