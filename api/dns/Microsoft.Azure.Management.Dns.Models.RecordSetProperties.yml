items:
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  commentId: T:Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  id: RecordSetProperties
  parent: Microsoft.Azure.Management.Dns.Models
  children:
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.#ctor
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.AaaaRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.ARecords
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.CnameRecord
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.Metadata
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.MxRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.NsRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.PtrRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.SoaRecord
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.SrvRecords
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.Ttl
  - Microsoft.Azure.Management.Dns.Models.RecordSetProperties.TxtRecords
  langs:
  - csharp
  - vb
  name: RecordSetProperties
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RecordSetProperties
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nRepresents the properties of the records in the RecordSet.\r\n"
  example: []
  syntax:
    content: public class RecordSetProperties
    content.vb: Public Class RecordSetProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.AaaaRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.AaaaRecords
  id: AaaaRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: AaaaRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.AaaaRecords
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AaaaRecords
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the list of AAAA records in the RecordSet.\r\n"
  example: []
  syntax:
    content: >-
      public IList<AaaaRecord> AaaaRecords

      {

          get;

          set;

      }
    content.vb: Public Property AaaaRecords As IList(Of AaaaRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.AaaaRecord}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.ARecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.ARecords
  id: ARecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: ARecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.ARecords
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ARecords
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the list of A records in the RecordSet.\r\n"
  example: []
  syntax:
    content: >-
      public IList<ARecord> ARecords

      {

          get;

          set;

      }
    content.vb: Public Property ARecords As IList(Of ARecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.ARecord}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.CnameRecord
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.CnameRecord
  id: CnameRecord
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: CnameRecord
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.CnameRecord
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CnameRecord
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the CNAME record in the RecordSet.\r\n"
  example: []
  syntax:
    content: >-
      public CnameRecord CnameRecord

      {

          get;

          set;

      }
    content.vb: Public Property CnameRecord As CnameRecord
    parameters: []
    return:
      type: Microsoft.Azure.Management.Dns.Models.CnameRecord
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.Metadata
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.Metadata
  id: Metadata
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: Metadata
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.Metadata
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Metadata
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the metadata attached to the resource.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> Metadata

      {

          get;

          set;

      }
    content.vb: Public Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.MxRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.MxRecords
  id: MxRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: MxRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.MxRecords
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MxRecords
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the list of MX records in the RecordSet.\r\n"
  example: []
  syntax:
    content: >-
      public IList<MxRecord> MxRecords

      {

          get;

          set;

      }
    content.vb: Public Property MxRecords As IList(Of MxRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.MxRecord}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.NsRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.NsRecords
  id: NsRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: NsRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.NsRecords
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NsRecords
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the list of NS records in the RecordSet.\r\n"
  example: []
  syntax:
    content: >-
      public IList<NsRecord> NsRecords

      {

          get;

          set;

      }
    content.vb: Public Property NsRecords As IList(Of NsRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.NsRecord}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.PtrRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.PtrRecords
  id: PtrRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: PtrRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.PtrRecords
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PtrRecords
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the list of PTR records in the RecordSet.\r\n"
  example: []
  syntax:
    content: >-
      public IList<PtrRecord> PtrRecords

      {

          get;

          set;

      }
    content.vb: Public Property PtrRecords As IList(Of PtrRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.PtrRecord}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.SoaRecord
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.SoaRecord
  id: SoaRecord
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: SoaRecord
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.SoaRecord
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SoaRecord
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 116
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the SOA record in the RecordSet.\r\n"
  example: []
  syntax:
    content: >-
      public SoaRecord SoaRecord

      {

          get;

          set;

      }
    content.vb: Public Property SoaRecord As SoaRecord
    parameters: []
    return:
      type: Microsoft.Azure.Management.Dns.Models.SoaRecord
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.SrvRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.SrvRecords
  id: SrvRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: SrvRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.SrvRecords
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SrvRecords
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the list of SRV records in the RecordSet.\r\n"
  example: []
  syntax:
    content: >-
      public IList<SrvRecord> SrvRecords

      {

          get;

          set;

      }
    content.vb: Public Property SrvRecords As IList(Of SrvRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.SrvRecord}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.Ttl
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.Ttl
  id: Ttl
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: Ttl
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.Ttl
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Ttl
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the TTL of the records in the RecordSet.\r\n"
  example: []
  syntax:
    content: >-
      public uint Ttl

      {

          get;

          set;

      }
    content.vb: Public Property Ttl As UInteger
    parameters: []
    return:
      type: System.UInt32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.TxtRecords
  commentId: P:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.TxtRecords
  id: TxtRecords
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: TxtRecords
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.TxtRecords
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TxtRecords
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 149
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nOptional. Gets or sets the list of TXT records in the RecordSet.\r\n"
  example: []
  syntax:
    content: >-
      public IList<TxtRecord> TxtRecords

      {

          get;

          set;

      }
    content.vb: Public Property TxtRecords As IList(Of TxtRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.TxtRecord}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Dns.Models.RecordSetProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Dns.Models.RecordSetProperties
  langs:
  - csharp
  - vb
  name: RecordSetProperties()
  fullName: Microsoft.Azure.Management.Dns.Models.RecordSetProperties.RecordSetProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Dns/DnsManagement/Generated/Models/RecordSetProperties.cs
    startLine: 158
  assemblies:
  - Microsoft.Azure.Management.Dns
  namespace: Microsoft.Azure.Management.Dns.Models
  summary: "\r\nInitializes a new instance of the RecordSetProperties class.\r\n"
  example: []
  syntax:
    content: public RecordSetProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Dns.Models
  isExternal: false
  name: Microsoft.Azure.Management.Dns.Models
  fullName: Microsoft.Azure.Management.Dns.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.AaaaRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<AaaaRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.AaaaRecord>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.AaaaRecord)
  name.vb: IList(Of AaaaRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.AaaaRecord
    name: AaaaRecord
    fullName: Microsoft.Azure.Management.Dns.Models.AaaaRecord
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.AaaaRecord
    name: AaaaRecord
    fullName: Microsoft.Azure.Management.Dns.Models.AaaaRecord
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.ARecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ARecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.ARecord>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.ARecord)
  name.vb: IList(Of ARecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.ARecord
    name: ARecord
    fullName: Microsoft.Azure.Management.Dns.Models.ARecord
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.ARecord
    name: ARecord
    fullName: Microsoft.Azure.Management.Dns.Models.ARecord
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Dns.Models.CnameRecord
  parent: Microsoft.Azure.Management.Dns.Models
  isExternal: false
  name: CnameRecord
  fullName: Microsoft.Azure.Management.Dns.Models.CnameRecord
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.MxRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MxRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.MxRecord>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.MxRecord)
  name.vb: IList(Of MxRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.MxRecord
    name: MxRecord
    fullName: Microsoft.Azure.Management.Dns.Models.MxRecord
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.MxRecord
    name: MxRecord
    fullName: Microsoft.Azure.Management.Dns.Models.MxRecord
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.NsRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<NsRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.NsRecord>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.NsRecord)
  name.vb: IList(Of NsRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.NsRecord
    name: NsRecord
    fullName: Microsoft.Azure.Management.Dns.Models.NsRecord
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.NsRecord
    name: NsRecord
    fullName: Microsoft.Azure.Management.Dns.Models.NsRecord
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.PtrRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PtrRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.PtrRecord>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.PtrRecord)
  name.vb: IList(Of PtrRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.PtrRecord
    name: PtrRecord
    fullName: Microsoft.Azure.Management.Dns.Models.PtrRecord
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.PtrRecord
    name: PtrRecord
    fullName: Microsoft.Azure.Management.Dns.Models.PtrRecord
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Dns.Models.SoaRecord
  parent: Microsoft.Azure.Management.Dns.Models
  isExternal: false
  name: SoaRecord
  fullName: Microsoft.Azure.Management.Dns.Models.SoaRecord
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.SrvRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SrvRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.SrvRecord>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.SrvRecord)
  name.vb: IList(Of SrvRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.SrvRecord
    name: SrvRecord
    fullName: Microsoft.Azure.Management.Dns.Models.SrvRecord
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.SrvRecord
    name: SrvRecord
    fullName: Microsoft.Azure.Management.Dns.Models.SrvRecord
  - name: )
    fullName: )
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  fullName: System.UInt32
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Dns.Models.TxtRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TxtRecord>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Dns.Models.TxtRecord>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Dns.Models.TxtRecord)
  name.vb: IList(Of TxtRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Dns.Models.TxtRecord
    name: TxtRecord
    fullName: Microsoft.Azure.Management.Dns.Models.TxtRecord
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Dns.Models.TxtRecord
    name: TxtRecord
    fullName: Microsoft.Azure.Management.Dns.Models.TxtRecord
  - name: )
    fullName: )
