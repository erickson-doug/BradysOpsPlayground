items:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  id: QueueHttpWebRequestFactory
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMessage(Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMessage(Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMetadata(HttpWebRequest,IDictionary{System.String,System.String})
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMetadata(HttpWebRequest,System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.ClearMessages(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.ClearMessages(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Create(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Create(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Delete(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Delete(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.DeleteMessage(Uri,System.Nullable{System.Int32},System.String,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.DeleteMessage(Uri,System.Nullable{System.Int32},System.String,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetAcl(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetAcl(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Nullable{TimeSpan},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMetadata(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMetadata(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetServiceProperties(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetServiceStats(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.List(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.List(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.PeekMessages(Uri,System.Nullable{System.Int32},System.Int32,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.PeekMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetAcl(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetAcl(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetMetadata(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetMetadata(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetServiceProperties(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.UpdateMessage(Uri,System.Nullable{System.Int32},System.String,System.Int32,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.UpdateMessage(Uri,System.Nullable{System.Int32},System.String,System.Int32,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.WriteServiceProperties(Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties,Stream)
  langs:
  - csharp
  - vb
  name: QueueHttpWebRequestFactory
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  type: Class
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueueHttpWebRequestFactory
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nA factory class for constructing a web request to manage queues in the Queue service.\r\n"
  example: []
  syntax:
    content: 'public class QueueHttpWebRequestFactory : object'
    content.vb: >-
      Public Class QueueHttpWebRequestFactory
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetServiceProperties(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetServiceProperties(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetServiceProperties(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: GetServiceProperties(Uri, UriQueryBuilder, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetServiceProperties(Uri, Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetServiceProperties
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nCreates a web request to get the properties of the Queue service.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest GetServiceProperties(Uri uri, UriQueryBuilder builder, int ? timeout, OperationContext operationContext)
    content.vb: Public Shared Function GetServiceProperties(uri As Uri, builder As UriQueryBuilder, timeout As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the Queue service endpoint.
    - id: builder
      type: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
      description: A <xref href="Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder" data-throw-if-not-resolved="false"></xref> object specifying additional parameters to add to the URI query string.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: The server timeout interval, in seconds.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetServiceProperties(Uri, Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetServiceProperties(Uri, UriQueryBuilder, Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetServiceProperties(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetServiceProperties(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetServiceProperties(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: SetServiceProperties(Uri, UriQueryBuilder, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetServiceProperties(Uri, Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetServiceProperties
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nCreates a web request to set the properties of the Queue service.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest SetServiceProperties(Uri uri, UriQueryBuilder builder, int ? timeout, OperationContext operationContext)
    content.vb: Public Shared Function SetServiceProperties(uri As Uri, builder As UriQueryBuilder, timeout As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the Queue service endpoint.
    - id: builder
      type: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
      description: A <xref href="Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder" data-throw-if-not-resolved="false"></xref> object specifying additional parameters to add to the URI query string.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: The server timeout interval, in seconds.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetServiceProperties(Uri, Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: SetServiceProperties(Uri, UriQueryBuilder, Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetServiceStats(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetServiceStats(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetServiceStats(Uri,Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: GetServiceStats(Uri, UriQueryBuilder, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetServiceStats(Uri, Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetServiceStats
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nCreates a web request to get Queue service stats.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest GetServiceStats(Uri uri, UriQueryBuilder builder, int ? timeout, OperationContext operationContext)
    content.vb: Public Shared Function GetServiceStats(uri As Uri, builder As UriQueryBuilder, timeout As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the Queue service endpoint.
    - id: builder
      type: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
      description: A <xref href="Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder" data-throw-if-not-resolved="false"></xref> object specifying additional parameters to add to the URI query string.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: The server timeout interval, in seconds.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetServiceStats(Uri, Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetServiceStats(Uri, UriQueryBuilder, Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.WriteServiceProperties(Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties,Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.WriteServiceProperties(Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties,Stream)
  id: WriteServiceProperties(Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties,Stream)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: WriteServiceProperties(ServiceProperties, Stream)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.WriteServiceProperties(Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties, Stream)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WriteServiceProperties
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 119
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nWrites Queue service properties to a stream, formatted in XML.\r\n"
  example: []
  syntax:
    content: public static void WriteServiceProperties(ServiceProperties properties, Stream outputStream)
    content.vb: Public Shared Sub WriteServiceProperties(properties As ServiceProperties, outputStream As Stream)
    parameters:
    - id: properties
      type: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
      description: A <xref href="Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties" data-throw-if-not-resolved="false"></xref> object.
    - id: outputStream
      type: Stream
      description: The <see cref="!:System.IO.Stream"></see> object to which the formatted properties are to be written.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Create(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Create(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: Create(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: Create(Uri, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Create(Uri, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Create
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 133
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to create a new queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest Create(Uri uri, int ? timeout, OperationContext operationContext)
    content.vb: Public Shared Function Create(uri As Uri, timeout As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Create(Uri, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: Create(Uri, Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Create(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Create(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Create(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: Create(Uri, Nullable<Int32>, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Create(Uri, System.Nullable<System.Int32>, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Create
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 146
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to create a new queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest Create(Uri uri, int ? timeout, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function Create(uri As Uri, timeout As Integer?, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Create(Uri, System.Nullable(Of System.Int32), System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: Create(Uri, Nullable(Of Int32), Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Delete(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Delete(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: Delete(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: Delete(Uri, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Delete(Uri, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Delete
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 158
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to delete the queue and all of the messages within it.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest Delete(Uri uri, int ? timeout, OperationContext operationContext)
    content.vb: Public Shared Function Delete(uri As Uri, timeout As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Delete(Uri, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: Delete(Uri, Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Delete(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Delete(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Delete(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: Delete(Uri, Nullable<Int32>, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Delete(Uri, System.Nullable<System.Int32>, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Delete
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 171
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to delete the queue and all of the messages within it.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest Delete(Uri uri, int ? timeout, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function Delete(uri As Uri, timeout As Integer?, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.Delete(Uri, System.Nullable(Of System.Int32), System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: Delete(Uri, Nullable(Of Int32), Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.ClearMessages(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.ClearMessages(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: ClearMessages(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: ClearMessages(Uri, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.ClearMessages(Uri, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ClearMessages
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 184
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to clear all messages in the queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest ClearMessages(Uri uri, int ? timeout, OperationContext operationContext)
    content.vb: Public Shared Function ClearMessages(uri As Uri, timeout As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.ClearMessages(Uri, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ClearMessages(Uri, Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.ClearMessages(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.ClearMessages(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ClearMessages(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: ClearMessages(Uri, Nullable<Int32>, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.ClearMessages(Uri, System.Nullable<System.Int32>, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ClearMessages
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 197
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to clear all messages in the queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest ClearMessages(Uri uri, int ? timeout, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function ClearMessages(uri As Uri, timeout As Integer?, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.ClearMessages(Uri, System.Nullable(Of System.Int32), System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ClearMessages(Uri, Nullable(Of Int32), Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMetadata(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMetadata(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetMetadata(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: GetMetadata(Uri, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMetadata(Uri, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMetadata
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 210
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nGenerates a web request to return the user-defined metadata for this queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest GetMetadata(Uri uri, int ? timeout, OperationContext operationContext)
    content.vb: Public Shared Function GetMetadata(uri As Uri, timeout As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMetadata(Uri, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetMetadata(Uri, Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMetadata(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMetadata(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetMetadata(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: GetMetadata(Uri, Nullable<Int32>, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMetadata(Uri, System.Nullable<System.Int32>, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMetadata
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 223
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nGenerates a web request to return the user-defined metadata for this queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest GetMetadata(Uri uri, int ? timeout, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function GetMetadata(uri As Uri, timeout As Integer?, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMetadata(Uri, System.Nullable(Of System.Int32), System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetMetadata(Uri, Nullable(Of Int32), Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetMetadata(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetMetadata(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadata(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: SetMetadata(Uri, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetMetadata(Uri, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadata
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 236
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nGenerates a web request to set user-defined metadata for the queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest SetMetadata(Uri uri, int ? timeout, OperationContext operationContext)
    content.vb: Public Shared Function SetMetadata(uri As Uri, timeout As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetMetadata(Uri, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: SetMetadata(Uri, Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetMetadata(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetMetadata(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadata(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: SetMetadata(Uri, Nullable<Int32>, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetMetadata(Uri, System.Nullable<System.Int32>, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadata
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 249
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nGenerates a web request to set user-defined metadata for the queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest SetMetadata(Uri uri, int ? timeout, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function SetMetadata(uri As Uri, timeout As Integer?, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetMetadata(Uri, System.Nullable(Of System.Int32), System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: SetMetadata(Uri, Nullable(Of Int32), Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMetadata(HttpWebRequest,IDictionary{System.String,System.String})
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMetadata(HttpWebRequest,IDictionary{System.String,System.String})
  id: AddMetadata(HttpWebRequest,IDictionary{System.String,System.String})
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: AddMetadata(HttpWebRequest, IDictionary<String, String>)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMetadata(HttpWebRequest, IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddMetadata
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 260
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nAdds user-defined metadata to the request as one or more name-value pairs.\r\n"
  example: []
  syntax:
    content: public static void AddMetadata(HttpWebRequest request, IDictionary<string, string> metadata)
    content.vb: Public Shared Sub AddMetadata(request As HttpWebRequest, metadata As IDictionary(Of String, String))
    parameters:
    - id: request
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
    - id: metadata
      type: IDictionary{System.String,System.String}
      description: A <see cref="!:Dictionary<TKey,TValue>"></see> object containing the user-defined metadata.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMetadata(HttpWebRequest, IDictionary(Of System.String, System.String))
  name.vb: AddMetadata(HttpWebRequest, IDictionary(Of String, String))
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMetadata(HttpWebRequest,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMetadata(HttpWebRequest,System.String,System.String)
  id: AddMetadata(HttpWebRequest,System.String,System.String)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: AddMetadata(HttpWebRequest, String, String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMetadata(HttpWebRequest, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddMetadata
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 271
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nAdds user-defined metadata to the request as a single name-value pair.\r\n"
  example: []
  syntax:
    content: public static void AddMetadata(HttpWebRequest request, string name, string value)
    content.vb: Public Shared Sub AddMetadata(request As HttpWebRequest, name As String, value As String)
    parameters:
    - id: request
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
    - id: name
      type: System.String
      description: A string containing the metadata name.
    - id: value
      type: System.String
      description: A string containing the metadata value.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.List(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.List(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails,Microsoft.WindowsAzure.Storage.OperationContext)
  id: List(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: List(Uri, Nullable<Int32>, ListingContext, QueueListingDetails, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.List(Uri, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext, Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: List
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 285
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to return a listing of all queues in this storage account.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest List(Uri uri, int ? timeout, ListingContext listingContext, QueueListingDetails detailsIncluded, OperationContext operationContext)
    content.vb: Public Shared Function List(uri As Uri, timeout As Integer?, listingContext As ListingContext, detailsIncluded As QueueListingDetails, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the Queue service endpoint.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: listingContext
      type: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext
      description: A <xref href="Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext" data-throw-if-not-resolved="false"></xref> object.
    - id: detailsIncluded
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails" data-throw-if-not-resolved="false"></xref> enumeration value that indicates whether to return queue metadata with the listing.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.List(Uri, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext, Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: List(Uri, Nullable(Of Int32), ListingContext, QueueListingDetails, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.List(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.List(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: List(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: List(Uri, Nullable<Int32>, ListingContext, QueueListingDetails, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.List(Uri, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext, Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: List
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 300
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to return a listing of all queues in this storage account.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest List(Uri uri, int ? timeout, ListingContext listingContext, QueueListingDetails detailsIncluded, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function List(uri As Uri, timeout As Integer?, listingContext As ListingContext, detailsIncluded As QueueListingDetails, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the Queue service endpoint.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: listingContext
      type: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext
      description: A <xref href="Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext" data-throw-if-not-resolved="false"></xref> object.
    - id: detailsIncluded
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails" data-throw-if-not-resolved="false"></xref> enumeration value that indicates whether to return queue metadata with the listing.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.List(Uri, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext, Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: List(Uri, Nullable(Of Int32), ListingContext, QueueListingDetails, Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetAcl(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetAcl(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetAcl(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: GetAcl(Uri, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetAcl(Uri, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAcl
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 339
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to return the ACL for a queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest GetAcl(Uri uri, int ? timeout, OperationContext operationContext)
    content.vb: Public Shared Function GetAcl(uri As Uri, timeout As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetAcl(Uri, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetAcl(Uri, Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetAcl(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetAcl(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetAcl(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: GetAcl(Uri, Nullable<Int32>, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetAcl(Uri, System.Nullable<System.Int32>, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAcl
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 352
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to return the ACL for a queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest GetAcl(Uri uri, int ? timeout, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function GetAcl(uri As Uri, timeout As Integer?, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetAcl(Uri, System.Nullable(Of System.Int32), System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetAcl(Uri, Nullable(Of Int32), Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetAcl(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetAcl(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetAcl(Uri,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: SetAcl(Uri, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetAcl(Uri, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetAcl
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 365
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to set the ACL for a queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest SetAcl(Uri uri, int ? timeout, OperationContext operationContext)
    content.vb: Public Shared Function SetAcl(uri As Uri, timeout As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetAcl(Uri, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: SetAcl(Uri, Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetAcl(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetAcl(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetAcl(Uri,System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: SetAcl(Uri, Nullable<Int32>, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetAcl(Uri, System.Nullable<System.Int32>, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetAcl
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 378
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to set the ACL for a queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest SetAcl(Uri uri, int ? timeout, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function SetAcl(uri As Uri, timeout As Integer?, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.SetAcl(Uri, System.Nullable(Of System.Int32), System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: SetAcl(Uri, Nullable(Of Int32), Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMessage(Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMessage(Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  id: AddMessage(Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: AddMessage(Uri, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMessage(Uri, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddMessage
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 393
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to add a message for a queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest AddMessage(Uri uri, int ? timeout, int ? timeToLiveInSeconds, int ? visibilityTimeoutInSeconds, OperationContext operationContext)
    content.vb: Public Shared Function AddMessage(uri As Uri, timeout As Integer?, timeToLiveInSeconds As Integer?, visibilityTimeoutInSeconds As Integer?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: timeToLiveInSeconds
      type: System.Nullable{System.Int32}
      description: The message time-to-live, in seconds.
    - id: visibilityTimeoutInSeconds
      type: System.Nullable{System.Int32}
      description: The length of time during which the message will be invisible, in seconds.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMessage(Uri, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AddMessage(Uri, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMessage(Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMessage(Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AddMessage(Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: AddMessage(Uri, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMessage(Uri, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddMessage
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 408
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to add a message for a queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest AddMessage(Uri uri, int ? timeout, int ? timeToLiveInSeconds, int ? visibilityTimeoutInSeconds, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function AddMessage(uri As Uri, timeout As Integer?, timeToLiveInSeconds As Integer?, visibilityTimeoutInSeconds As Integer?, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: timeToLiveInSeconds
      type: System.Nullable{System.Int32}
      description: The message time-to-live, in seconds.
    - id: visibilityTimeoutInSeconds
      type: System.Nullable{System.Int32}
      description: The length of time during which the message will be invisible, in seconds.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.AddMessage(Uri, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AddMessage(Uri, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.UpdateMessage(Uri,System.Nullable{System.Int32},System.String,System.Int32,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.UpdateMessage(Uri,System.Nullable{System.Int32},System.String,System.Int32,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UpdateMessage(Uri,System.Nullable{System.Int32},System.String,System.Int32,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: UpdateMessage(Uri, Nullable<Int32>, String, Int32, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.UpdateMessage(Uri, System.Nullable<System.Int32>, System.String, System.Int32, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdateMessage
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 435
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to update a message.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest UpdateMessage(Uri uri, int ? timeout, string popReceipt, int visibilityTimeoutInSeconds, OperationContext operationContext)
    content.vb: Public Shared Function UpdateMessage(uri As Uri, timeout As Integer?, popReceipt As String, visibilityTimeoutInSeconds As Integer, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the message to update.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: The server timeout interval, in seconds.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt of the message.
    - id: visibilityTimeoutInSeconds
      type: System.Int32
      description: The length of time during which the message will be invisible, in seconds.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.UpdateMessage(Uri, System.Nullable(Of System.Int32), System.String, System.Int32, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: UpdateMessage(Uri, Nullable(Of Int32), String, Int32, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.UpdateMessage(Uri,System.Nullable{System.Int32},System.String,System.Int32,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.UpdateMessage(Uri,System.Nullable{System.Int32},System.String,System.Int32,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UpdateMessage(Uri,System.Nullable{System.Int32},System.String,System.Int32,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: UpdateMessage(Uri, Nullable<Int32>, String, Int32, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.UpdateMessage(Uri, System.Nullable<System.Int32>, System.String, System.Int32, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdateMessage
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 450
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to update a message.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest UpdateMessage(Uri uri, int ? timeout, string popReceipt, int visibilityTimeoutInSeconds, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function UpdateMessage(uri As Uri, timeout As Integer?, popReceipt As String, visibilityTimeoutInSeconds As Integer, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the message to update.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: The server timeout interval, in seconds.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt of the message.
    - id: visibilityTimeoutInSeconds
      type: System.Int32
      description: The length of time during which the message will be invisible, in seconds.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.UpdateMessage(Uri, System.Nullable(Of System.Int32), System.String, System.Int32, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: UpdateMessage(Uri, Nullable(Of Int32), String, Int32, Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.DeleteMessage(Uri,System.Nullable{System.Int32},System.String,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.DeleteMessage(Uri,System.Nullable{System.Int32},System.String,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteMessage(Uri,System.Nullable{System.Int32},System.String,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: DeleteMessage(Uri, Nullable<Int32>, String, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.DeleteMessage(Uri, System.Nullable<System.Int32>, System.String, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessage
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 469
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to update a message.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest DeleteMessage(Uri uri, int ? timeout, string popReceipt, OperationContext operationContext)
    content.vb: Public Shared Function DeleteMessage(uri As Uri, timeout As Integer?, popReceipt As String, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the message to update.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: The server timeout interval, in seconds.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt of the message.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.DeleteMessage(Uri, System.Nullable(Of System.Int32), System.String, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DeleteMessage(Uri, Nullable(Of Int32), String, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.DeleteMessage(Uri,System.Nullable{System.Int32},System.String,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.DeleteMessage(Uri,System.Nullable{System.Int32},System.String,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteMessage(Uri,System.Nullable{System.Int32},System.String,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: DeleteMessage(Uri, Nullable<Int32>, String, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.DeleteMessage(Uri, System.Nullable<System.Int32>, System.String, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteMessage
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 483
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to update a message.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest DeleteMessage(Uri uri, int ? timeout, string popReceipt, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function DeleteMessage(uri As Uri, timeout As Integer?, popReceipt As String, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the message to update.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: The server timeout interval, in seconds.
    - id: popReceipt
      type: System.String
      description: A string specifying the pop receipt of the message.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.DeleteMessage(Uri, System.Nullable(Of System.Int32), System.String, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DeleteMessage(Uri, Nullable(Of Int32), String, Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Nullable{TimeSpan},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: GetMessages(Uri, Nullable<Int32>, Int32, Nullable<TimeSpan>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMessages(Uri, System.Nullable<System.Int32>, System.Int32, System.Nullable<TimeSpan>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessages
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 501
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to get messages from a queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest GetMessages(Uri uri, int ? timeout, int numberOfMessages, TimeSpan? visibilityTimeout, OperationContext operationContext)
    content.vb: Public Shared Function GetMessages(uri As Uri, timeout As Integer?, numberOfMessages As Integer, visibilityTimeout As TimeSpan?, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: numberOfMessages
      type: System.Int32
      description: An integer specifying the number of messages to get.
    - id: visibilityTimeout
      type: System.Nullable{TimeSpan}
      description: A <see cref="!:TimeSpan"></see> value specifying the visibility timeout.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMessages(Uri, System.Nullable(Of System.Int32), System.Int32, System.Nullable(Of TimeSpan), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetMessages(Uri, Nullable(Of Int32), Int32, Nullable(Of TimeSpan), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Nullable{TimeSpan},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Nullable{TimeSpan},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Nullable{TimeSpan},System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: GetMessages(Uri, Nullable<Int32>, Int32, Nullable<TimeSpan>, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMessages(Uri, System.Nullable<System.Int32>, System.Int32, System.Nullable<TimeSpan>, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetMessages
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 516
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to get messages from a queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest GetMessages(Uri uri, int ? timeout, int numberOfMessages, TimeSpan? visibilityTimeout, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function GetMessages(uri As Uri, timeout As Integer?, numberOfMessages As Integer, visibilityTimeout As TimeSpan?, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: numberOfMessages
      type: System.Int32
      description: An integer specifying the number of messages to get.
    - id: visibilityTimeout
      type: System.Nullable{TimeSpan}
      description: A <see cref="!:TimeSpan"></see> value specifying the visibility timeout.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.GetMessages(Uri, System.Nullable(Of System.Int32), System.Int32, System.Nullable(Of TimeSpan), System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: GetMessages(Uri, Nullable(Of Int32), Int32, Nullable(Of TimeSpan), Boolean, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.PeekMessages(Uri,System.Nullable{System.Int32},System.Int32,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.PeekMessages(Uri,System.Nullable{System.Int32},System.Int32,Microsoft.WindowsAzure.Storage.OperationContext)
  id: PeekMessages(Uri,System.Nullable{System.Int32},System.Int32,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: PeekMessages(Uri, Nullable<Int32>, Int32, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.PeekMessages(Uri, System.Nullable<System.Int32>, System.Int32, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessages
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 539
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to peek messages from a queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest PeekMessages(Uri uri, int ? timeout, int numberOfMessages, OperationContext operationContext)
    content.vb: Public Shared Function PeekMessages(uri As Uri, timeout As Integer?, numberOfMessages As Integer, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: numberOfMessages
      type: System.Int32
      description: An integer specifying the number of messages to peek.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.PeekMessages(Uri, System.Nullable(Of System.Int32), System.Int32, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: PeekMessages(Uri, Nullable(Of Int32), Int32, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.PeekMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.PeekMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  id: PeekMessages(Uri,System.Nullable{System.Int32},System.Int32,System.Boolean,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory
  langs:
  - csharp
  - vb
  name: PeekMessages(Uri, Nullable<Int32>, Int32, Boolean, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.PeekMessages(Uri, System.Nullable<System.Int32>, System.Int32, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PeekMessages
    path: src/ClassLibraryCommon/Queue/Protocol/QueueHttpWebRequestFactory.cs
    startLine: 553
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nConstructs a web request to peek messages from a queue.\r\n"
  example: []
  syntax:
    content: public static HttpWebRequest PeekMessages(Uri uri, int ? timeout, int numberOfMessages, bool useVersionHeader, OperationContext operationContext)
    content.vb: Public Shared Function PeekMessages(uri As Uri, timeout As Integer?, numberOfMessages As Integer, useVersionHeader As Boolean, operationContext As OperationContext) As HttpWebRequest
    parameters:
    - id: uri
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the queue.
    - id: timeout
      type: System.Nullable{System.Int32}
      description: An integer specifying the server timeout interval.
    - id: numberOfMessages
      type: System.Int32
      description: An integer specifying the number of messages to peek.
    - id: useVersionHeader
      type: System.Boolean
      description: A boolean value indicating whether to set the <em>x-ms-version</em> HTTP header.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: HttpWebRequest
      description: A <see cref="!:System.Net.HttpWebRequest"></see> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueHttpWebRequestFactory.PeekMessages(Uri, System.Nullable(Of System.Int32), System.Int32, System.Boolean, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: PeekMessages(Uri, Nullable(Of Int32), Int32, Boolean, OperationContext)
references:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
  parent: Microsoft.WindowsAzure.Storage.Core
  isExternal: false
  name: UriQueryBuilder
  fullName: Microsoft.WindowsAzure.Storage.Core.UriQueryBuilder
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Uri
  isExternal: true
  name: Uri
  fullName: Uri
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: HttpWebRequest
  isExternal: true
  name: HttpWebRequest
  fullName: HttpWebRequest
- uid: Microsoft.WindowsAzure.Storage.Core
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Core
  fullName: Microsoft.WindowsAzure.Storage.Core
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: ServiceProperties
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
- uid: Stream
  isExternal: true
  name: Stream
  fullName: Stream
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Shared.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: IDictionary{System.String,System.String}
  definition: IDictionary`2
  name: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: ListingContext
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: QueueListingDetails
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Nullable{TimeSpan}
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  fullname.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    fullName: )
