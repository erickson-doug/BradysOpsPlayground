items:
- uid: Microsoft.WindowsAzure.Storage.Table.TableResult
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableResult
  id: TableResult
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.TableResult.Etag
  - Microsoft.WindowsAzure.Storage.Table.TableResult.HttpStatusCode
  - Microsoft.WindowsAzure.Storage.Table.TableResult.Result
  langs:
  - csharp
  - vb
  name: TableResult
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
  type: Class
  source:
    remote:
      path: src/Common/Table/TableResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TableResult
    path: src/Common/Table/TableResult.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nRepresents the result of a table operation.\r\n"
  remarks: The <xref href="Microsoft.WindowsAzure.Storage.Table.TableResult" data-throw-if-not-resolved="false"></xref> class encapsulates the HTTP response and any entities returned for a particular <xref href="Microsoft.WindowsAzure.Storage.Table.TableOperation" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public sealed class TableResult
    content.vb: Public NotInheritable Class TableResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.TableResult.Result
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableResult.Result
  id: Result
  parent: Microsoft.WindowsAzure.Storage.Table.TableResult
  langs:
  - csharp
  - vb
  name: Result
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResult.Result
  type: Property
  source:
    remote:
      path: src/Common/Table/TableResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Result
    path: src/Common/Table/TableResult.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nGets or sets the result returned by the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableOperation\" data-throw-if-not-resolved=\"false\"></xref> as an <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: >-
      public object Result

      {
          get;
          set;
      }
    content.vb: Public Property Result As Object
    parameters: []
    return:
      type: System.Object
      description: The result of the table operation as an <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableResult.HttpStatusCode
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableResult.HttpStatusCode
  id: HttpStatusCode
  parent: Microsoft.WindowsAzure.Storage.Table.TableResult
  langs:
  - csharp
  - vb
  name: HttpStatusCode
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResult.HttpStatusCode
  type: Property
  source:
    remote:
      path: src/Common/Table/TableResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HttpStatusCode
    path: src/Common/Table/TableResult.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nGets or sets the HTTP status code returned by a <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableOperation\" data-throw-if-not-resolved=\"false\"></xref> request.\r\n"
  example: []
  syntax:
    content: >-
      public int HttpStatusCode

      {
          get;
          set;
      }
    content.vb: Public Property HttpStatusCode As Integer
    parameters: []
    return:
      type: System.Int32
      description: The HTTP status code returned by a <xref href="Microsoft.WindowsAzure.Storage.Table.TableOperation" data-throw-if-not-resolved="false"></xref> request.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableResult.Etag
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableResult.Etag
  id: Etag
  parent: Microsoft.WindowsAzure.Storage.Table.TableResult
  langs:
  - csharp
  - vb
  name: Etag
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResult.Etag
  type: Property
  source:
    remote:
      path: src/Common/Table/TableResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Etag
    path: src/Common/Table/TableResult.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nGets or sets the ETag returned with the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableOperation\" data-throw-if-not-resolved=\"false\"></xref> request results.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId = "Etag", Justification = "Reviewed: Etag can be used for identifier names.")]

      public string Etag

      {
          get;
          set;
      }
    content.vb: >-
      <SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId:="Etag", Justification:="Reviewed: Etag can be used for identifier names.")>

      Public Property Etag As String
    parameters: []
    return:
      type: System.String
      description: The ETag returned with the <xref href="Microsoft.WindowsAzure.Storage.Table.TableOperation" data-throw-if-not-resolved="false"></xref> request results.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1704:IdentifiersShouldBeSpelledCorrectly
    namedArguments:
    - name: MessageId
      type: System.String
      value: Etag
    - name: Justification
      type: System.String
      value: 'Reviewed: Etag can be used for identifier names.'
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Table.TableResult
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableResult
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResult
- uid: Microsoft.WindowsAzure.Storage.Table.TableOperation
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableOperation
  fullName: Microsoft.WindowsAzure.Storage.Table.TableOperation
- uid: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
