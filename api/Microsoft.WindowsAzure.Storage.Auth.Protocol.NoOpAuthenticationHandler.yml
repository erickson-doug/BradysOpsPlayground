items:
- uid: Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler
  commentId: T:Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler
  id: NoOpAuthenticationHandler
  parent: Microsoft.WindowsAzure.Storage.Auth.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler.#ctor
  - Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler.SignRequest(System.Net.HttpWebRequest,Microsoft.WindowsAzure.Storage.OperationContext)
  langs:
  - csharp
  - vb
  name: NoOpAuthenticationHandler
  fullName: Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler
  type: Class
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Auth/Protocol/NoOpAuthenticationHandler.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NoOpAuthenticationHandler
    path: src/Storage/Lib/ClassLibraryCommon/Auth/Protocol/NoOpAuthenticationHandler.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Auth.Protocol
  summary: "\r\nRepresents a handler that signs HTTP requests with no authentication information.\r\n"
  example: []
  syntax:
    content: 'public sealed class NoOpAuthenticationHandler : IAuthenticationHandler'
    content.vb: >-
      Public NotInheritable Class NoOpAuthenticationHandler

          Implements IAuthenticationHandler
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.Auth.Protocol.IAuthenticationHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler
  langs:
  - csharp
  - vb
  name: NoOpAuthenticationHandler()
  fullName: Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler.NoOpAuthenticationHandler()
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Auth/Protocol/NoOpAuthenticationHandler.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/ClassLibraryCommon/Auth/Protocol/NoOpAuthenticationHandler.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Auth.Protocol
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public NoOpAuthenticationHandler()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler.SignRequest(System.Net.HttpWebRequest,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler.SignRequest(System.Net.HttpWebRequest,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SignRequest(System.Net.HttpWebRequest,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler
  langs:
  - csharp
  - vb
  name: SignRequest(HttpWebRequest, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler.SignRequest(System.Net.HttpWebRequest, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Auth/Protocol/NoOpAuthenticationHandler.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SignRequest
    path: src/Storage/Lib/ClassLibraryCommon/Auth/Protocol/NoOpAuthenticationHandler.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Auth.Protocol
  summary: "\r\nSigns the specified HTTP request with no authentication information.\r\n"
  example: []
  syntax:
    content: public void SignRequest(HttpWebRequest request, OperationContext operationContext)
    content.vb: Public Sub SignRequest(request As HttpWebRequest, operationContext As OperationContext)
    parameters:
    - id: request
      type: System.Net.HttpWebRequest
      description: The HTTP request to sign.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Auth.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Auth.Protocol
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Auth.Protocol.IAuthenticationHandler
  parent: Microsoft.WindowsAzure.Storage.Auth.Protocol
  isExternal: false
  name: IAuthenticationHandler
  fullName: Microsoft.WindowsAzure.Storage.Auth.Protocol.IAuthenticationHandler
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler
  isExternal: false
  name: NoOpAuthenticationHandler
  fullName: Microsoft.WindowsAzure.Storage.Auth.Protocol.NoOpAuthenticationHandler
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: System.Net.HttpWebRequest
  parent: System.Net
  isExternal: true
  name: HttpWebRequest
  fullName: System.Net.HttpWebRequest
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
