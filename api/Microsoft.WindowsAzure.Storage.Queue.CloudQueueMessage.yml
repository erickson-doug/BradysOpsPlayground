items:
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  id: CloudQueueMessage
  parent: Microsoft.WindowsAzure.Storage.Queue
  children:
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CreateCloudQueueMessageFromByteArray(System.Byte[])
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte[])
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.String)
  langs:
  - csharp
  - vb
  name: CloudQueueMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  type: Class
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CloudQueueMessage
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nRepresents a message in the Microsoft Azure Queue service.\r\n"
  example: []
  syntax:
    content: public sealed class CloudQueueMessage
    content.vb: Public NotInheritable Class CloudQueueMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CreateCloudQueueMessageFromByteArray(System.Byte[])
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CreateCloudQueueMessageFromByteArray(System.Byte[])
  id: CreateCloudQueueMessageFromByteArray(System.Byte[])
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: CreateCloudQueueMessageFromByteArray(Byte[])
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CreateCloudQueueMessageFromByteArray(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Storage/WindowsRuntime/Queue/CloudQueueMessage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateCloudQueueMessageFromByteArray
    path: src/Storage/WindowsRuntime/Queue/CloudQueueMessage.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\"></xref> class with the given byte array.\r\n"
  example: []
  syntax:
    content: public static CloudQueueMessage CreateCloudQueueMessageFromByteArray([ReadOnlyArray] byte[] content)
    content.vb: Public Shared Function CreateCloudQueueMessageFromByteArray(content As Byte()) As CloudQueueMessage
    parameters:
    - id: content
      type: System.Byte[]
      description: The content of the message as a byte array.
      attributes:
      - type: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
        ctor: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
        arguments: []
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
      description: The new message as a <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CreateCloudQueueMessageFromByteArray(System.Byte())
  name.vb: CreateCloudQueueMessageFromByteArray(Byte())
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte[])
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte[])
  id: SetMessageContent(System.Byte[])
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: SetMessageContent(Byte[])
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Storage/WindowsRuntime/Queue/CloudQueueMessage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMessageContent
    path: src/Storage/WindowsRuntime/Queue/CloudQueueMessage.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nSets the content of this message.\r\n"
  example: []
  syntax:
    content: >-
      [DefaultOverload]

      public void SetMessageContent([ReadOnlyArray] byte[] content)
    content.vb: >-
      <DefaultOverload>

      Public Sub SetMessageContent(content As Byte())
    parameters:
    - id: content
      type: System.Byte[]
      description: The new message content.
      attributes:
      - type: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
        ctor: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
        arguments: []
  attributes:
  - type: Windows.Foundation.Metadata.DefaultOverloadAttribute
    ctor: Windows.Foundation.Metadata.DefaultOverloadAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte())
  name.vb: SetMessageContent(Byte())
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize
  id: MaxMessageSize
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: MaxMessageSize
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MaxMessageSize
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the maximum message size in bytes.\r\n"
  example: []
  syntax:
    content: >-
      public static long MaxMessageSize

      {
          get;
      }
    content.vb: Public Shared ReadOnly Property MaxMessageSize As Long
    parameters: []
    return:
      type: System.Int64
      description: The maximum message size in bytes.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive
  id: MaxTimeToLive
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: MaxTimeToLive
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MaxTimeToLive
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the maximum amount of time a message is kept in the queue.\r\n"
  example: []
  syntax:
    content: >-
      public static TimeSpan MaxTimeToLive

      {
          get;
      }
    content.vb: Public Shared ReadOnly Property MaxTimeToLive As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the maximum amount of time a message is kept in the queue.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek
  id: MaxNumberOfMessagesToPeek
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: MaxNumberOfMessagesToPeek
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MaxNumberOfMessagesToPeek
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 74
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the maximum number of messages that can be peeked at a time.\r\n"
  example: []
  syntax:
    content: >-
      public static int MaxNumberOfMessagesToPeek

      {
          get;
      }
    content.vb: Public Shared ReadOnly Property MaxNumberOfMessagesToPeek As Integer
    parameters: []
    return:
      type: System.Int32
      description: The maximum number of messages that can be peeked at a time.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: CloudQueueMessage(String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CloudQueueMessage(System.String)
  type: Constructor
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 98
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\"></xref> class with the given string.\r\n"
  example: []
  syntax:
    content: public CloudQueueMessage(string content)
    content.vb: Public Sub New(content As String)
    parameters:
    - id: content
      type: System.String
      description: The content of the message as a string of text.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: CloudQueueMessage(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CloudQueueMessage(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 111
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\"></xref> class with the given message ID and pop receipt.\r\n"
  example: []
  syntax:
    content: public CloudQueueMessage(string messageId, string popReceipt)
    content.vb: Public Sub New(messageId As String, popReceipt As String)
    parameters:
    - id: messageId
      type: System.String
      description: A string specifying the message ID.
    - id: popReceipt
      type: System.String
      description: A string containing the pop receipt token.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes
  id: AsBytes
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: AsBytes
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AsBytes
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 138
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the content of the message as a byte array.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Performance", "CA1819:PropertiesShouldNotReturnArrays", Justification = "Reviewed.")]

      public byte[] AsBytes

      {
          get;
      }
    content.vb: >-
      <SuppressMessage("Microsoft.Performance", "CA1819:PropertiesShouldNotReturnArrays", Justification:="Reviewed.")>

      Public ReadOnly Property AsBytes As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: The content of the message as a byte array.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Performance
    - type: System.String
      value: CA1819:PropertiesShouldNotReturnArrays
    namedArguments:
    - name: Justification
      type: System.String
      value: Reviewed.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id
  id: Id
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Id
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 162
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the message ID.\r\n"
  example: []
  syntax:
    content: >-
      public string Id

      {
          get;
      }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
      description: A string containing the message ID.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt
  id: PopReceipt
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: PopReceipt
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PopReceipt
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 168
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the message's pop receipt.\r\n"
  example: []
  syntax:
    content: >-
      public string PopReceipt

      {
          get;
      }
    content.vb: Public ReadOnly Property PopReceipt As String
    parameters: []
    return:
      type: System.String
      description: A string containing the pop receipt value.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime
  id: InsertionTime
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: InsertionTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InsertionTime
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 174
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the time that the message was added to the queue.\r\n"
  example: []
  syntax:
    content: >-
      public DateTimeOffset? InsertionTime

      {
          get;
      }
    content.vb: Public ReadOnly Property InsertionTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> indicating the time that the message was added to the queue.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime
  id: ExpirationTime
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: ExpirationTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExpirationTime
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 180
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the time that the message expires.\r\n"
  example: []
  syntax:
    content: >-
      public DateTimeOffset? ExpirationTime

      {
          get;
      }
    content.vb: Public ReadOnly Property ExpirationTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> indicating the time that the message expires.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime
  id: NextVisibleTime
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: NextVisibleTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NextVisibleTime
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 186
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the time that the message will next be visible.\r\n"
  example: []
  syntax:
    content: >-
      public DateTimeOffset? NextVisibleTime

      {
          get;
      }
    content.vb: Public ReadOnly Property NextVisibleTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> indicating the time that the message will next be visible.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString
  id: AsString
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: AsString
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AsString
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 192
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the content of the message, as a string.\r\n"
  example: []
  syntax:
    content: >-
      public string AsString

      {
          get;
      }
    content.vb: Public ReadOnly Property AsString As String
    parameters: []
    return:
      type: System.String
      description: A string containing the message content.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount
  id: DequeueCount
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: DequeueCount
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount
  type: Property
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DequeueCount
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 216
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the number of times this message has been dequeued.\r\n"
  example: []
  syntax:
    content: >-
      public int DequeueCount

      {
          get;
      }
    content.vb: Public ReadOnly Property DequeueCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of times this message has been dequeued.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.String)
  id: SetMessageContent(System.String)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: SetMessageContent(String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMessageContent
    path: src/Storage/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 326
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nSets the content of this message.\r\n"
  example: []
  syntax:
    content: public void SetMessageContent(string content)
    content.vb: Public Sub SetMessageContent(content As String)
    parameters:
    - id: content
      type: System.String
      description: A string containing the new message content.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue
  fullName: Microsoft.WindowsAzure.Storage.Queue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: CloudQueueMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
