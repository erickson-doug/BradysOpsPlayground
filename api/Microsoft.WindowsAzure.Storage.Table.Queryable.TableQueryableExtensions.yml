items:
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  commentId: T:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  id: TableQueryableExtensions
  parent: Microsoft.WindowsAzure.Storage.Table.Queryable
  children:
  - Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1(System.Linq.IQueryable{``0})
  - Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
  - Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  langs:
  - csharp
  - vb
  name: TableQueryableExtensions
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  type: Class
  source:
    remote:
      path: src/Storage/Common/Table/Queryable/TableQueryableExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TableQueryableExtensions
    path: src/Storage/Common/Table/Queryable/TableQueryableExtensions.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.Queryable
  summary: "\r\nProvides a set of extension methods for objects of type <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableQuery\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public class TableQueryableExtensions
    content.vb: Public Class TableQueryableExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  id: WithOptions``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  parent: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  langs:
  - csharp
  - vb
  name: WithOptions<TElement>(IQueryable<TElement>, TableRequestOptions)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions<TElement>(System.Linq.IQueryable<TElement>, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Table/Queryable/TableQueryableExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WithOptions
    path: src/Storage/Common/Table/Queryable/TableQueryableExtensions.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.Queryable
  summary: "\r\nSpecifies a set of <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> with which the query will be executed.\r\n"
  example: []
  syntax:
    content: public static TableQuery<TElement> WithOptions<TElement>(IQueryable<TElement> query, TableRequestOptions options)
    content.vb: Public Shared Function WithOptions(Of TElement)(query As IQueryable(Of TElement), options As TableRequestOptions) As TableQuery(Of TElement)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TElement}}
      description: A query that implements <xref href="System.Linq.IQueryable`1" data-throw-if-not-resolved="false"></xref>.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    typeParameters:
    - id: TElement
      description: The entity type of the query.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery{{TElement}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> object with the specified request options set.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions(Of TElement)(System.Linq.IQueryable(Of TElement), Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  name.vb: WithOptions(Of TElement)(IQueryable(Of TElement), TableRequestOptions)
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.OperationContext)
  id: WithContext``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  langs:
  - csharp
  - vb
  name: WithContext<TElement>(IQueryable<TElement>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext<TElement>(System.Linq.IQueryable<TElement>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Table/Queryable/TableQueryableExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WithContext
    path: src/Storage/Common/Table/Queryable/TableQueryableExtensions.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.Queryable
  summary: "\r\nSpecifies an <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> for the query.\r\n"
  example: []
  syntax:
    content: public static TableQuery<TElement> WithContext<TElement>(IQueryable<TElement> query, OperationContext operationContext)
    content.vb: Public Shared Function WithContext(Of TElement)(query As IQueryable(Of TElement), operationContext As OperationContext) As TableQuery(Of TElement)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TElement}}
      description: A query that implements <xref href="System.Linq.IQueryable`1" data-throw-if-not-resolved="false"></xref>.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    typeParameters:
    - id: TElement
      description: The entity type of the query.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery{{TElement}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> object with the specified operation context.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext(Of TElement)(System.Linq.IQueryable(Of TElement), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: WithContext(Of TElement)(IQueryable(Of TElement), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
  id: Resolve``2(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
  parent: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  langs:
  - csharp
  - vb
  name: Resolve<TElement, TResolved>(IQueryable<TElement>, EntityResolver<TResolved>)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve<TElement, TResolved>(System.Linq.IQueryable<TElement>, Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResolved>)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Table/Queryable/TableQueryableExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Resolve
    path: src/Storage/Common/Table/Queryable/TableQueryableExtensions.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.Queryable
  summary: "\r\nSpecifies an entity resolver for the query.\r\n"
  example: []
  syntax:
    content: public static TableQuery<TResolved> Resolve<TElement, TResolved>(IQueryable<TElement> query, EntityResolver<TResolved> resolver)
    content.vb: Public Shared Function Resolve(Of TElement, TResolved)(query As IQueryable(Of TElement), resolver As EntityResolver(Of TResolved)) As TableQuery(Of TResolved)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TElement}}
      description: A query that implements <xref href="System.Linq.IQueryable`1" data-throw-if-not-resolved="false"></xref>.
    - id: resolver
      type: Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResolved}}
      description: The entity resolver, of type <xref href="Microsoft.WindowsAzure.Storage.Table.EntityResolver`1" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: TElement
      description: The entity type of the query.
    - id: TResolved
      description: The type of the resolver.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery{{TResolved}}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref> with the specified resolver.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve(Of TElement, TResolved)(System.Linq.IQueryable(Of TElement), Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResolved))
  name.vb: Resolve(Of TElement, TResolved)(IQueryable(Of TElement), EntityResolver(Of TResolved))
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1(System.Linq.IQueryable{``0})
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1(System.Linq.IQueryable{``0})
  id: AsTableQuery``1(System.Linq.IQueryable{``0})
  parent: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  langs:
  - csharp
  - vb
  name: AsTableQuery<TElement>(IQueryable<TElement>)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery<TElement>(System.Linq.IQueryable<TElement>)
  type: Method
  source:
    remote:
      path: src/Storage/Common/Table/Queryable/TableQueryableExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AsTableQuery
    path: src/Storage/Common/Table/Queryable/TableQueryableExtensions.cs
    startLine: 125
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.Queryable
  summary: "\r\nSpecifies that a query be returned as a <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableQuery\" data-throw-if-not-resolved=\"false\"></xref> object.\r\n"
  example: []
  syntax:
    content: public static TableQuery<TElement> AsTableQuery<TElement>(IQueryable<TElement> query)
    content.vb: Public Shared Function AsTableQuery(Of TElement)(query As IQueryable(Of TElement)) As TableQuery(Of TElement)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TElement}}
      description: A query that implements <xref href="System.Linq.IQueryable`1" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: TElement
      description: The entity type of the query.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuery{{TElement}}
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuery" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery(Of TElement)(System.Linq.IQueryable(Of TElement))
  name.vb: AsTableQuery(Of TElement)(IQueryable(Of TElement))
references:
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableQuery
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table.Queryable
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
- uid: System.Linq.IQueryable`1
  parent: System.Linq
  isExternal: true
  name: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.NotSupportedException
- uid: System.Linq.IQueryable{{TElement}}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TElement>
  fullName: System.Linq.IQueryable<TElement>
  fullname.vb: System.Linq.IQueryable(Of TElement)
  name.vb: IQueryable(Of TElement)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery{{TElement}}
  parent: Microsoft.WindowsAzure.Storage.Table
  definition: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  name: TableQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement)
  name.vb: TableQuery(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TElement>
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TElement)
  name.vb: TableQuery(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: EntityResolver<T>
  fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver<T>
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of T)
  name.vb: EntityResolver(Of T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResolved}}
  parent: Microsoft.WindowsAzure.Storage.Table
  definition: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
  name: EntityResolver<TResolved>
  fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResolved>
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResolved)
  name.vb: EntityResolver(Of TResolved)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: <
    fullName: <
  - name: TResolved
    fullName: TResolved
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: '(Of '
    fullName: '(Of '
  - name: TResolved
    fullName: TResolved
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuery{{TResolved}}
  parent: Microsoft.WindowsAzure.Storage.Table
  definition: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
  name: TableQuery<TResolved>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery<TResolved>
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuery(Of TResolved)
  name.vb: TableQuery(Of TResolved)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: <
    fullName: <
  - name: TResolved
    fullName: TResolved
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuery`1
    name: TableQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuery
  - name: '(Of '
    fullName: '(Of '
  - name: TResolved
    fullName: TResolved
  - name: )
    fullName: )
