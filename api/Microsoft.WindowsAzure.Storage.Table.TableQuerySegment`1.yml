items:
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  id: TableQuerySegment`1
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.ContinuationToken
  - Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.GetEnumerator
  - Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.Results
  - Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: TableQuerySegment<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>
  type: Class
  source:
    remote:
      path: src/Storage/Common/Table/TableQuerySegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TableQuerySegment
    path: src/Storage/Common/Table/TableQuerySegment.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nRepresents a segment of results and contains continuation token information.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix", Justification = "Back compatibility.")]

      public class TableQuerySegment<TElement> : IEnumerable<TElement>, IEnumerable
    content.vb: >-
      <SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix", Justification:="Back compatibility.")>

      Public Class TableQuerySegment(Of TElement)

          Implements IEnumerable(Of TElement), IEnumerable
    typeParameters:
    - id: TElement
      description: The type of the result that the segment contains.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{{TElement}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1710:IdentifiersShouldHaveCorrectSuffix
    namedArguments:
    - name: Justification
      type: System.String
      value: Back compatibility.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement)
  name.vb: TableQuerySegment(Of TElement)
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.Results
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.Results
  id: Results
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  langs:
  - csharp
  - vb
  name: Results
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>.Results
  type: Property
  source:
    remote:
      path: src/Storage/Common/Table/TableQuerySegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Results
    path: src/Storage/Common/Table/TableQuerySegment.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nGets an enumerable collection of results.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists", Justification = "Reviewed.")]

      public List<TElement> Results

      {

          get;

      }
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists", Justification:="Reviewed.")>

      Public ReadOnly Property Results As List(Of TElement)
    parameters: []
    return:
      type: System.Collections.Generic.List{{TElement}}
      description: An enumerable collection of results.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1002:DoNotExposeGenericLists
    namedArguments:
    - name: Justification
      type: System.String
      value: Reviewed.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement).Results
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.ContinuationToken
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.ContinuationToken
  id: ContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  langs:
  - csharp
  - vb
  name: ContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>.ContinuationToken
  type: Property
  source:
    remote:
      path: src/Storage/Common/Table/TableQuerySegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContinuationToken
    path: src/Storage/Common/Table/TableQuerySegment.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nGets a continuation token to use to retrieve the next set of results with a subsequent call to the operation.\r\n"
  example: []
  syntax:
    content: >-
      public TableContinuationToken ContinuationToken

      {

          get;

      }
    content.vb: Public ReadOnly Property ContinuationToken As TableContinuationToken
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement).ContinuationToken
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.GetEnumerator
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Storage/Common/Table/TableQuerySegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetEnumerator
    path: src/Storage/Common/Table/TableQuerySegment.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nReturns an enumerator that iterates through the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public IEnumerator<TElement> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of TElement)
    return:
      type: System.Collections.Generic.IEnumerator{{TElement}}
      description: An enumerator that iterates through the <xref href="Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement).GetEnumerator()
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Storage/Common/Table/TableQuerySegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Storage/Common/Table/TableQuerySegment.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TElement>
  fullName: System.Collections.Generic.IEnumerable<TElement>
  fullname.vb: System.Collections.Generic.IEnumerable(Of TElement)
  name.vb: IEnumerable(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.List{{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TElement>
  fullName: System.Collections.Generic.List<TElement>
  fullname.vb: System.Collections.Generic.List(Of TElement)
  name.vb: List(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  fullName: System.Collections.Generic.List<T>
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableQuerySegment<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement)
  name.vb: TableQuerySegment(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TElement>
  fullName: System.Collections.Generic.IEnumerator<TElement>
  fullname.vb: System.Collections.Generic.IEnumerator(Of TElement)
  name.vb: IEnumerator(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
