items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
  id: DomainJoinCredentials
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.Domain
  - Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.Password
  - Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.UserName
  langs:
  - csharp
  - vb
  name: DomainJoinCredentials
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DomainJoinCredentials
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nSpecifies the values to use to join the virtual machine to the domain.\r\n"
  example: []
  syntax:
    content: public class DomainJoinCredentials
    content.vb: Public Class DomainJoinCredentials
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.Domain
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.Domain
  id: Domain
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
  langs:
  - csharp
  - vb
  name: Domain
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.Domain
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Domain
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the name of the domain used to authenticate an\r\naccount. The value is a fully qualified DNS domain. If the domains\r\nname is not specified, Username must specify the user principal\r\nname (UPN) format (user@fully-qualified-DNS-domain) or the\r\nfully-qualified-DNS-domain\\\\username format. Example: example.com.\r\n"
  example: []
  syntax:
    content: >-
      public string Domain

      {

          get;

          set;

      }
    content.vb: Public Property Domain As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.Password
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.Password
  id: Password
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
  langs:
  - csharp
  - vb
  name: Password
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.Password
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Password
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Specifies the password to use to join the domain.\r\n"
  example: []
  syntax:
    content: >-
      public string Password

      {

          get;

          set;

      }
    content.vb: Public Property Password As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.UserName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.UserName
  id: UserName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
  langs:
  - csharp
  - vb
  name: UserName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.UserName
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UserName
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Specifies a user name in the domain that can be used to\r\njoin the domain.\r\n"
  example: []
  syntax:
    content: >-
      public string UserName

      {

          get;

          set;

      }
    content.vb: Public Property UserName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
  langs:
  - csharp
  - vb
  name: DomainJoinCredentials()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.DomainJoinCredentials()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the DomainJoinCredentials class.\r\n"
  example: []
  syntax:
    content: public DomainJoinCredentials()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
  langs:
  - csharp
  - vb
  name: DomainJoinCredentials(String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials.DomainJoinCredentials(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinCredentials.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the DomainJoinCredentials class with\r\nrequired arguments.\r\n"
  example: []
  syntax:
    content: public DomainJoinCredentials(string userName, string password)
    content.vb: Public Sub New(userName As String, password As String)
    parameters:
    - id: userName
      type: System.String
    - id: password
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
