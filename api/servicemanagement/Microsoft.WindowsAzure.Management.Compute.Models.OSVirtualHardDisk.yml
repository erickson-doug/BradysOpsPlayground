items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  id: OSVirtualHardDisk
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.HostCaching
  - Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.IOType
  - Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.Label
  - Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.MediaLink
  - Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.Name
  - Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.OperatingSystem
  - Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.RemoteSourceImageLink
  - Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.ResizedSizeInGB
  - Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.SourceImageName
  langs:
  - csharp
  - vb
  name: OSVirtualHardDisk
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OSVirtualHardDisk
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nThe parameters Azure uses to create the operating system disk for the\r\nvirtual machine.\r\n"
  example: []
  syntax:
    content: public class OSVirtualHardDisk
    content.vb: Public Class OSVirtualHardDisk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.HostCaching
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.HostCaching
  id: HostCaching
  parent: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  langs:
  - csharp
  - vb
  name: HostCaching
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.HostCaching
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HostCaching
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the platform caching behavior of the operating\r\nsystem disk blob for read/write efficiency.\r\n"
  example: []
  syntax:
    content: >-
      public string HostCaching

      {

          get;

          set;

      }
    content.vb: Public Property HostCaching As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.IOType
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.IOType
  id: IOType
  parent: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  langs:
  - csharp
  - vb
  name: IOType
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.IOType
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IOType
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the IO type.\r\n"
  example: []
  syntax:
    content: >-
      public string IOType

      {

          get;

          set;

      }
    content.vb: Public Property IOType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.Label
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  langs:
  - csharp
  - vb
  name: Label
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.Label
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Label
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the friendly name of an operating system image\r\nin the image repository.\r\n"
  example: []
  syntax:
    content: >-
      public string Label

      {

          get;

          set;

      }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.MediaLink
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.MediaLink
  id: MediaLink
  parent: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  langs:
  - csharp
  - vb
  name: MediaLink
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.MediaLink
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MediaLink
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the location of the operating system disk in\r\nAzure storage.\r\n"
  example: []
  syntax:
    content: >-
      public Uri MediaLink

      {

          get;

          set;

      }
    content.vb: Public Property MediaLink As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.Name
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.Name
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 85
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the name of an operating system image in the\r\nimage repository.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.OperatingSystem
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.OperatingSystem
  id: OperatingSystem
  parent: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  langs:
  - csharp
  - vb
  name: OperatingSystem
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.OperatingSystem
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OperatingSystem
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 96
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The operating system running in the virtual machine.\r\n"
  example: []
  syntax:
    content: >-
      public string OperatingSystem

      {

          get;

          set;

      }
    content.vb: Public Property OperatingSystem As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.RemoteSourceImageLink
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.RemoteSourceImageLink
  id: RemoteSourceImageLink
  parent: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  langs:
  - csharp
  - vb
  name: RemoteSourceImageLink
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.RemoteSourceImageLink
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RemoteSourceImageLink
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 111
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Uri of the source OS image that will be copied to the\r\ncustomer’s storage account of VM creation.If RemoteSourceImageLink\r\nis specified, then MediaLink must also be specified.If\r\nRemoteSourceImageLink is specified, thenSourceIamgeName must not\r\nbe specified.\r\n"
  example: []
  syntax:
    content: >-
      public Uri RemoteSourceImageLink

      {

          get;

          set;

      }
    content.vb: Public Property RemoteSourceImageLink As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.ResizedSizeInGB
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.ResizedSizeInGB
  id: ResizedSizeInGB
  parent: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  langs:
  - csharp
  - vb
  name: ResizedSizeInGB
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.ResizedSizeInGB
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ResizedSizeInGB
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 125
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. When an OS Image or a RemoteSourceImage is used to create\r\nan OSVirtualHardDisk, this parameter can be used to resize the new\r\nOSVirtualHardDisk to a larger size. ResizedSizeInGB must be larger\r\nthan the underlying OS Image’s LogicalSizeInGB.\r\n"
  example: []
  syntax:
    content: >-
      public int ? ResizedSizeInGB

      {

          get;

          set;

      }
    content.vb: Public Property ResizedSizeInGB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.SourceImageName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.SourceImageName
  id: SourceImageName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  langs:
  - csharp
  - vb
  name: SourceImageName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.SourceImageName
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SourceImageName
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 137
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the name of the source image that was used to\r\nprovision the virtual machine.\r\n"
  example: []
  syntax:
    content: >-
      public string SourceImageName

      {

          get;

          set;

      }
    content.vb: Public Property SourceImageName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk
  langs:
  - csharp
  - vb
  name: OSVirtualHardDisk()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.OSVirtualHardDisk.OSVirtualHardDisk()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/OSVirtualHardDisk.cs
    startLine: 146
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the OSVirtualHardDisk class.\r\n"
  example: []
  syntax:
    content: public OSVirtualHardDisk()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
