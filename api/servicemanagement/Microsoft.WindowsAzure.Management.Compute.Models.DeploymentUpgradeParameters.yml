items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  id: DeploymentUpgradeParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Configuration
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.ExtendedProperties
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.ExtensionConfiguration
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Force
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Label
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Mode
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.PackageUri
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.RoleToUpgrade
  langs:
  - csharp
  - vb
  name: DeploymentUpgradeParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeploymentUpgradeParameters
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nParameters supplied to the Upgrade Deployment operation.\r\n"
  example: []
  syntax:
    content: public class DeploymentUpgradeParameters
    content.vb: Public Class DeploymentUpgradeParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Configuration
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Configuration
  id: Configuration
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  langs:
  - csharp
  - vb
  name: Configuration
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Configuration
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Configuration
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. The service configuration file for the deployment. The\r\nclient library does the base-64 encoding from the plain text input.\r\n"
  example: []
  syntax:
    content: >-
      public string Configuration

      {

          get;

          set;

      }
    content.vb: Public Property Configuration As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.ExtendedProperties
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.ExtendedProperties
  id: ExtendedProperties
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  langs:
  - csharp
  - vb
  name: ExtendedProperties
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.ExtendedProperties
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExtendedProperties
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Represents the name of an extended deployment property.\r\nEach extended property must have a defined name and a value. You\r\ncan have a maximum of 25 extended property name/value pairs. The\r\nmaximum length of the name element is 64 characters, only\r\nalphanumeric characters and underscores are valid in the name, and\r\nthe name must start with a letter. Attempting to use other\r\ncharacters, starting the name with a non-letter character, or\r\nentering a name that is identical to that of another extended\r\nproperty owned by the same hosted service will result in a status\r\ncode 400 (Bad Request) error.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> ExtendedProperties

      {

          get;

          set;

      }
    content.vb: Public Property ExtendedProperties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.ExtensionConfiguration
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.ExtensionConfiguration
  id: ExtensionConfiguration
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  langs:
  - csharp
  - vb
  name: ExtensionConfiguration
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.ExtensionConfiguration
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExtensionConfiguration
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Represents an extension that is added to the cloud\r\nservice. In Azure, a process can run as an extension of a cloud\r\nservice. For example, Remote Desktop Access or the Azure\r\nDiagnostics Agent can run as extensions to the cloud service. You\r\nmust add an extension to the cloud service by using Add Extension\r\nbefore it can be added to the deployment.\r\n"
  example: []
  syntax:
    content: >-
      public ExtensionConfiguration ExtensionConfiguration

      {

          get;

          set;

      }
    content.vb: Public Property ExtensionConfiguration As ExtensionConfiguration
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Force
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Force
  id: Force
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  langs:
  - csharp
  - vb
  name: Force
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Force
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Force
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
    startLine: 88
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Specifies whether the rollback should proceed even when\r\nit will cause local data to be lost from some role instances.\r\n"
  example: []
  syntax:
    content: >-
      public bool Force

      {

          get;

          set;

      }
    content.vb: Public Property Force As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Label
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  langs:
  - csharp
  - vb
  name: Label
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Label
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Label
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. A name for the hosted service. The name can be up to 100\r\ncharacters in length. It is recommended that the label be unique\r\nwithin the subscription. The name can be used identify the hosted\r\nservice for your tracking purposes.\r\n"
  example: []
  syntax:
    content: >-
      public string Label

      {

          get;

          set;

      }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Mode
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Mode
  id: Mode
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  langs:
  - csharp
  - vb
  name: Mode
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.Mode
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Mode
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
    startLine: 120
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. The type of update to initiate. Role instances are\r\nallocated to update domains when the service is deployed. Updates\r\ncan be initiated manually in each update domain or initiated\r\nautomatically in all update domains. Possible values are Auto or\r\nManual. If not specified, the default value is Auto. If set to\r\nManual, WalkUpgradeDomain must be called to apply the update. If\r\nset to Auto, the update is automatically applied to each update\r\ndomain in sequence.\r\n"
  example: []
  syntax:
    content: >-
      public DeploymentUpgradeMode Mode

      {

          get;

          set;

      }
    content.vb: Public Property Mode As DeploymentUpgradeMode
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.PackageUri
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.PackageUri
  id: PackageUri
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  langs:
  - csharp
  - vb
  name: PackageUri
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.PackageUri
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PackageUri
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
    startLine: 137
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. A URL that refers to the location of the service package\r\nin the Blob service. The service package can be located either in\r\na storage account beneath the same subscription or a Shared Access\r\nSignature (SAS) URI from any storage account. For more information\r\nabout Shared Access Signatures, see Delegating Access with a\r\nShared Access Signature (REST API) at\r\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee395415.aspx.\r\n"
  example: []
  syntax:
    content: >-
      public Uri PackageUri

      {

          get;

          set;

      }
    content.vb: Public Property PackageUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.RoleToUpgrade
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.RoleToUpgrade
  id: RoleToUpgrade
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  langs:
  - csharp
  - vb
  name: RoleToUpgrade
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.RoleToUpgrade
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RoleToUpgrade
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
    startLine: 148
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The name of the specific role instance to update.\r\n"
  example: []
  syntax:
    content: >-
      public string RoleToUpgrade

      {

          get;

          set;

      }
    content.vb: Public Property RoleToUpgrade As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters
  langs:
  - csharp
  - vb
  name: DeploymentUpgradeParameters()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeParameters.DeploymentUpgradeParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentUpgradeParameters.cs
    startLine: 157
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the DeploymentUpgradeParameters class.\r\n"
  example: []
  syntax:
    content: public DeploymentUpgradeParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: ExtensionConfiguration
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeMode
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: DeploymentUpgradeMode
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentUpgradeMode
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
