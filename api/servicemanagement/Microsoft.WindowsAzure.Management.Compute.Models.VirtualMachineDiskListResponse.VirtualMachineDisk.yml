items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  id: VirtualMachineDiskListResponse.VirtualMachineDisk
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.AffinityGroup
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IOType
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IsCorrupted
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IsPremium
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Label
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Location
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.LogicalSizeInGB
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.MediaLinkUri
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Name
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.OperatingSystemType
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.SourceImageName
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.UsageDetails
  langs:
  - csharp
  - vb
  name: VirtualMachineDiskListResponse.VirtualMachineDisk
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineDisk
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 75
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nA virtual machine disk associated with your subscription.\r\n"
  example: []
  syntax:
    content: public class VirtualMachineDisk
    content.vb: Public Class VirtualMachineDisk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.AffinityGroup
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.AffinityGroup
  id: AffinityGroup
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: AffinityGroup
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.AffinityGroup
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AffinityGroup
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 86
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The affinity group in which the disk is located. The\r\nAffinityGroup value is derived from storage account that\r\ncontains the blob in which the media is located. If the\r\nstorage account does not belong to an affinity group the value\r\nis NULL.\r\n"
  example: []
  syntax:
    content: >-
      public string AffinityGroup

      {

          get;

          set;

      }
    content.vb: Public Property AffinityGroup As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IOType
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IOType
  id: IOType
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: IOType
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IOType
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IOType
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the IO type.\r\n"
  example: []
  syntax:
    content: >-
      public string IOType

      {

          get;

          set;

      }
    content.vb: Public Property IOType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IsCorrupted
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IsCorrupted
  id: IsCorrupted
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: IsCorrupted
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IsCorrupted
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsCorrupted
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 108
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies thether the disk is known to be corrupt.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? IsCorrupted

      {

          get;

          set;

      }
    content.vb: Public Property IsCorrupted As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IsPremium
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IsPremium
  id: IsPremium
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: IsPremium
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.IsPremium
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsPremium
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 120
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies whether or not the disk contains a premium\r\nvirtual machine image.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? IsPremium

      {

          get;

          set;

      }
    content.vb: Public Property IsPremium As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Label
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: Label
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Label
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Label
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 131
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The friendly name of the disk.\r\n"
  example: []
  syntax:
    content: >-
      public string Label

      {

          get;

          set;

      }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Location
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Location
  id: Location
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: Location
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Location
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Location
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 145
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The geo-location in which the disk is located. The\r\nLocation value is derived from storage account that contains\r\nthe blob in which the disk is located. If the storage account\r\nbelongs to an affinity group the value is NULL.\r\n"
  example: []
  syntax:
    content: >-
      public string Location

      {

          get;

          set;

      }
    content.vb: Public Property Location As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.LogicalSizeInGB
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.LogicalSizeInGB
  id: LogicalSizeInGB
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: LogicalSizeInGB
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.LogicalSizeInGB
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LogicalSizeInGB
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 156
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The size, in GB, of the disk.\r\n"
  example: []
  syntax:
    content: >-
      public int LogicalSizeInGB

      {

          get;

          set;

      }
    content.vb: Public Property LogicalSizeInGB As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.MediaLinkUri
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.MediaLinkUri
  id: MediaLinkUri
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: MediaLinkUri
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.MediaLinkUri
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MediaLinkUri
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 171
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The location of the blob in the blob store in which\r\nthe media for the disk is located. The blob location belongs\r\nto a storage account in the subscription specified by the\r\nSubscriptionId value in the operation call. Example:\r\nhttp://example.blob.core.windows.net/disks/mydisk.vhd.\r\n"
  example: []
  syntax:
    content: >-
      public Uri MediaLinkUri

      {

          get;

          set;

      }
    content.vb: Public Property MediaLinkUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Name
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.Name
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 183
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The name of the disk. This is the name that is used\r\nwhen creating one or more virtual machines using the disk.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.OperatingSystemType
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.OperatingSystemType
  id: OperatingSystemType
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: OperatingSystemType
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.OperatingSystemType
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OperatingSystemType
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 195
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The operating system type of the OS image. Possible\r\nValues are: Linux, Windows, or NULL.\r\n"
  example: []
  syntax:
    content: >-
      public string OperatingSystemType

      {

          get;

          set;

      }
    content.vb: Public Property OperatingSystemType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.SourceImageName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.SourceImageName
  id: SourceImageName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: SourceImageName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.SourceImageName
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SourceImageName
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 209
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The name of the OS Image from which the disk was\r\ncreated. This property is populated automatically when a disk\r\nis created from an OS image by calling the Add Role, Create\r\nDeployment, or Provision Disk operations.\r\n"
  example: []
  syntax:
    content: >-
      public string SourceImageName

      {

          get;

          set;

      }
    content.vb: Public Property SourceImageName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.UsageDetails
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.UsageDetails
  id: UsageDetails
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: UsageDetails
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.UsageDetails
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UsageDetails
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 222
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Contains properties that specify a virtual machine\r\nthat currently using the disk. A disk cannot be deleted as\r\nlong as it is attached to a virtual machine.\r\n"
  example: []
  syntax:
    content: >-
      public VirtualMachineDiskListResponse.VirtualMachineDiskUsageDetails UsageDetails

      {

          get;

          set;

      }
    content.vb: Public Property UsageDetails As VirtualMachineDiskListResponse.VirtualMachineDiskUsageDetails
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDiskUsageDetails
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk
  langs:
  - csharp
  - vb
  name: VirtualMachineDisk()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDisk.VirtualMachineDisk()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskListResponse.cs
    startLine: 231
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the VirtualMachineDisk class.\r\n"
  example: []
  syntax:
    content: public VirtualMachineDisk()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDiskUsageDetails
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: VirtualMachineDiskListResponse.VirtualMachineDiskUsageDetails
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskListResponse.VirtualMachineDiskUsageDetails
