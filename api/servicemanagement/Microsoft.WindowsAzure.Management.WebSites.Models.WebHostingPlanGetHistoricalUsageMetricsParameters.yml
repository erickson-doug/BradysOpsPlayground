items:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  commentId: T:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  id: WebHostingPlanGetHistoricalUsageMetricsParameters
  parent: Microsoft.WindowsAzure.Management.WebSites.Models
  children:
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.#ctor
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.EndTime
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.IncludeInstanceBreakdown
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.MetricNames
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.StartTime
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.TimeGrain
  langs:
  - csharp
  - vb
  name: WebHostingPlanGetHistoricalUsageMetricsParameters
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WebHostingPlanGetHistoricalUsageMetricsParameters
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nParameters supplied to the Get Historical Usage Metrics Web hosting\r\nplan operation.\r\n"
  example: []
  syntax:
    content: public class WebHostingPlanGetHistoricalUsageMetricsParameters
    content.vb: Public Class WebHostingPlanGetHistoricalUsageMetricsParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.EndTime
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.EndTime
  id: EndTime
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: EndTime
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.EndTime
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndTime
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. The ending time of the metrics to return. If this\r\nparameter is not specified, the current time is used.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? EndTime

      {

          get;

          set;

      }
    content.vb: Public Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.IncludeInstanceBreakdown
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.IncludeInstanceBreakdown
  id: IncludeInstanceBreakdown
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: IncludeInstanceBreakdown
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.IncludeInstanceBreakdown
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IncludeInstanceBreakdown
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. Flag which specifies if the metrics for each machine\r\ninstance should be included. For sites that run on more than one\r\nmachine this could be useful to identify a bad machine.\r\n"
  example: []
  syntax:
    content: >-
      public bool IncludeInstanceBreakdown

      {

          get;

          set;

      }
    content.vb: Public Property IncludeInstanceBreakdown As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.MetricNames
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.MetricNames
  id: MetricNames
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: MetricNames
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.MetricNames
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MetricNames
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. Specifies a comma-separated list of the names of the\r\nmetrics to return. If the names parameter is not specified, then\r\nall available metrics are returned.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> MetricNames

      {

          get;

          set;

      }
    content.vb: Public Property MetricNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.StartTime
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.StartTime
  id: StartTime
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: StartTime
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.StartTime
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartTime
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. The starting time of the metrics to return. If this\r\nparameter is not specified, the beginning of the current hour is\r\nused.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? StartTime

      {

          get;

          set;

      }
    content.vb: Public Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.TimeGrain
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.TimeGrain
  id: TimeGrain
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: TimeGrain
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.TimeGrain
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TimeGrain
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. The grain at which the metrics are returned. Supported\r\nvalues are PT1M (minute), PT1H (hour), P1D (day).\r\n"
  example: []
  syntax:
    content: >-
      public string TimeGrain

      {

          get;

          set;

      }
    content.vb: Public Property TimeGrain As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters
  langs:
  - csharp
  - vb
  name: WebHostingPlanGetHistoricalUsageMetricsParameters()
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebHostingPlanGetHistoricalUsageMetricsParameters.WebHostingPlanGetHistoricalUsageMetricsParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebHostingPlanGetHistoricalUsageMetricsParameters.cs
    startLine: 101
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nInitializes a new instance of the\r\nWebHostingPlanGetHistoricalUsageMetricsParameters class.\r\n"
  example: []
  syntax:
    content: public WebHostingPlanGetHistoricalUsageMetricsParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.WebSites.Models
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
