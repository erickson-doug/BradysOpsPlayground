items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  id: RoleInstance.PublicIP
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Address
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.DomainNameLabel
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Fqdns
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.IdleTimeoutInMinutes
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Name
  langs:
  - csharp
  - vb
  name: RoleInstance.PublicIP
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PublicIP
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 253
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nAn additional public IP that will be created for the role. The\r\npublic IP will be an additional IP for the role. The role\r\ncontinues to be addressable via the default deployment VIP.\r\n"
  example: []
  syntax:
    content: public class PublicIP
    content.vb: Public Class PublicIP
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Address
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Address
  id: Address
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  langs:
  - csharp
  - vb
  name: Address
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Address
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Address
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 260
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The address of the public IP.\r\n"
  example: []
  syntax:
    content: >-
      public string Address

      {

          get;

          set;

      }
    content.vb: Public Property Address As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.DomainNameLabel
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.DomainNameLabel
  id: DomainNameLabel
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  langs:
  - csharp
  - vb
  name: DomainNameLabel
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.DomainNameLabel
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DomainNameLabel
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 271
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The DNS name of the public IP.\r\n"
  example: []
  syntax:
    content: >-
      public string DomainNameLabel

      {

          get;

          set;

      }
    content.vb: Public Property DomainNameLabel As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Fqdns
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Fqdns
  id: Fqdns
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  langs:
  - csharp
  - vb
  name: Fqdns
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Fqdns
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Fqdns
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 282
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The list of FQDN for the public IP.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> Fqdns

      {

          get;

          set;

      }
    content.vb: Public Property Fqdns As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.IdleTimeoutInMinutes
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.IdleTimeoutInMinutes
  id: IdleTimeoutInMinutes
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  langs:
  - csharp
  - vb
  name: IdleTimeoutInMinutes
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.IdleTimeoutInMinutes
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IdleTimeoutInMinutes
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 293
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The idle timeout in minutes for this Public IP.\r\n"
  example: []
  syntax:
    content: >-
      public int ? IdleTimeoutInMinutes

      {

          get;

          set;

      }
    content.vb: Public Property IdleTimeoutInMinutes As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Name
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.Name
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 304
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The name of the public IP.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  langs:
  - csharp
  - vb
  name: PublicIP()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP.PublicIP()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 313
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the PublicIP class.\r\n"
  example: []
  syntax:
    content: public PublicIP()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
