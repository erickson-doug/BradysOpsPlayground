items:
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  id: ExtensionImageOperationsExtensions
  parent: Microsoft.WindowsAzure.Management.Compute
  children:
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Register(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Unregister(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UnregisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  - Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  langs:
  - csharp
  - vb
  name: ExtensionImageOperationsExtensions
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExtensionImageOperationsExtensions
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nThe Service Management API provides programmatic access to much of the\r\nfunctionality available through the Management Portal. The Service\r\nManagement API is a REST API. All API operations are performed over\r\nSSL, and are mutually authenticated using X.509 v3 certificates.  (see\r\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for\r\nmore information)\r\n"
  example: []
  syntax:
    content: public class ExtensionImageOperationsExtensions
    content.vb: Public Class ExtensionImageOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  id: BeginRegistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRegistering(IExtensionImageOperations, ExtensionImageRegisterParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginRegistering
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nRegister a new extension. An extension is identified by the\r\ncombination of its ProviderNamespace and Type (case-sensitive\r\nstring). It is not allowed to register an extension with the same\r\nidentity (i.e. combination of ProviderNamespace and Type) of an\r\nalready-registered extension. To register new version of an\r\nexisting extension, the Update Extension API should be used.\r\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginRegistering(IExtensionImageOperations operations, ExtensionImageRegisterParameters parameters)
    content.vb: Public Shared Function BeginRegistering(operations As IExtensionImageOperations, parameters As ExtensionImageRegisterParameters) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
      description: "\r\nRequired. Parameters supplied to the Register Virtual Machine\r\nExtension Image operation.\r\n"
    return:
      type: AzureOperationResponse
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  id: BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRegisteringAsync(IExtensionImageOperations, ExtensionImageRegisterParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginRegisteringAsync
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nRegister a new extension. An extension is identified by the\r\ncombination of its ProviderNamespace and Type (case-sensitive\r\nstring). It is not allowed to register an extension with the same\r\nidentity (i.e. combination of ProviderNamespace and Type) of an\r\nalready-registered extension. To register new version of an\r\nexisting extension, the Update Extension API should be used.\r\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginRegisteringAsync(IExtensionImageOperations operations, ExtensionImageRegisterParameters parameters)
    content.vb: Public Shared Function BeginRegisteringAsync(operations As IExtensionImageOperations, parameters As ExtensionImageRegisterParameters) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
      description: "\r\nRequired. Parameters supplied to the Register Virtual Machine\r\nExtension Image operation.\r\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  id: BeginUnregistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUnregistering(IExtensionImageOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregistering(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUnregistering
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 127
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUnregister a version of an extension that was previously registered\r\nusing either the Register Extension or Update Extension APIs. An\r\nextension version is identified by the combination of its\r\nProviderNamespace, Type and Version which are specified when\r\nregistering the extension. Unregistering is only allowed for\r\ninternal extensions, that is, the extensions for which the\r\nIsInternalExtension field is set to 'true' during registration or\r\nduring an update. There is a quota (15) on the number of\r\nextensions that can be registered per subscription. If your\r\nsubscription runs out of quota, you will wither need to unregister\r\nsome of the internal extensions or contact Azure (same email used\r\nto become a publisher)  to increase the quota.\r\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginUnregistering(IExtensionImageOperations operations, string providerNamespace, string type, string version)
    content.vb: Public Shared Function BeginUnregistering(operations As IExtensionImageOperations, providerNamespace As String, type As String, version As String) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: providerNamespace
      type: System.String
      description: "\r\nRequired. The provider namespace of the extension image to\r\nunregister.\r\n"
    - id: type
      type: System.String
      description: "\r\nRequired. The type of the extension image to unregister.\r\n"
    - id: version
      type: System.String
      description: "\r\nRequired. The version of the extension image to unregister.\r\n"
    return:
      type: AzureOperationResponse
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  id: BeginUnregisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUnregisteringAsync(IExtensionImageOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUnregisteringAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUnregisteringAsync
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 168
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUnregister a version of an extension that was previously registered\r\nusing either the Register Extension or Update Extension APIs. An\r\nextension version is identified by the combination of its\r\nProviderNamespace, Type and Version which are specified when\r\nregistering the extension. Unregistering is only allowed for\r\ninternal extensions, that is, the extensions for which the\r\nIsInternalExtension field is set to 'true' during registration or\r\nduring an update. There is a quota (15) on the number of\r\nextensions that can be registered per subscription. If your\r\nsubscription runs out of quota, you will wither need to unregister\r\nsome of the internal extensions or contact Azure (same email used\r\nto become a publisher)  to increase the quota.\r\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginUnregisteringAsync(IExtensionImageOperations operations, string providerNamespace, string type, string version)
    content.vb: Public Shared Function BeginUnregisteringAsync(operations As IExtensionImageOperations, providerNamespace As String, type As String, version As String) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: providerNamespace
      type: System.String
      description: "\r\nRequired. The provider namespace of the extension image to\r\nunregister.\r\n"
    - id: type
      type: System.String
      description: "\r\nRequired. The type of the extension image to unregister.\r\n"
    - id: version
      type: System.String
      description: "\r\nRequired. The version of the extension image to unregister.\r\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  id: BeginUpdating(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdating(IExtensionImageOperations, ExtensionImageUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdating(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUpdating
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 193
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUpdate a new extension. It is allowed to update an extension which\r\nhad already been registered with the same identity (i.e.\r\ncombination of ProviderNamespace and Type) but with different\r\nversion. It will fail if the extension to update has an identity\r\nthat has not been registered before, or there is already an\r\nextension with the same identity and same version.\r\n"
  example: []
  syntax:
    content: public static AzureOperationResponse BeginUpdating(IExtensionImageOperations operations, ExtensionImageUpdateParameters parameters)
    content.vb: Public Shared Function BeginUpdating(operations As IExtensionImageOperations, parameters As ExtensionImageUpdateParameters) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
      description: "\r\nRequired. Parameters supplied to the Update Virtual Machine\r\nExtension Image operation.\r\n"
    return:
      type: AzureOperationResponse
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  id: BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdatingAsync(IExtensionImageOperations, ExtensionImageUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUpdatingAsync
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 222
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUpdate a new extension. It is allowed to update an extension which\r\nhad already been registered with the same identity (i.e.\r\ncombination of ProviderNamespace and Type) but with different\r\nversion. It will fail if the extension to update has an identity\r\nthat has not been registered before, or there is already an\r\nextension with the same identity and same version.\r\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> BeginUpdatingAsync(IExtensionImageOperations operations, ExtensionImageUpdateParameters parameters)
    content.vb: Public Shared Function BeginUpdatingAsync(operations As IExtensionImageOperations, parameters As ExtensionImageUpdateParameters) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
      description: "\r\nRequired. Parameters supplied to the Update Virtual Machine\r\nExtension Image operation.\r\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Register(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Register(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  id: Register(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: Register(IExtensionImageOperations, ExtensionImageRegisterParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Register(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Register
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 254
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nRegister a new extension. An extension is identified by the\r\ncombination of its ProviderNamespace and Type (case-sensitive\r\nstring). It is not allowed to register an extension with the same\r\nidentity (i.e. combination of ProviderNamespace and Type) of an\r\nalready-registered extension. To register new version of an\r\nexisting extension, the Update Extension API should be used.\r\n"
  example: []
  syntax:
    content: public static OperationStatusResponse Register(IExtensionImageOperations operations, ExtensionImageRegisterParameters parameters)
    content.vb: Public Shared Function Register(operations As IExtensionImageOperations, parameters As ExtensionImageRegisterParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
      description: "\r\nRequired. Parameters supplied to the Register Virtual Machine\r\nExtension Image operation.\r\n"
    return:
      type: OperationStatusResponse
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  id: RegisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegisterAsync(IExtensionImageOperations, ExtensionImageRegisterParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RegisterAsync
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 290
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nRegister a new extension. An extension is identified by the\r\ncombination of its ProviderNamespace and Type (case-sensitive\r\nstring). It is not allowed to register an extension with the same\r\nidentity (i.e. combination of ProviderNamespace and Type) of an\r\nalready-registered extension. To register new version of an\r\nexisting extension, the Update Extension API should be used.\r\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> RegisterAsync(IExtensionImageOperations operations, ExtensionImageRegisterParameters parameters)
    content.vb: Public Shared Function RegisterAsync(operations As IExtensionImageOperations, parameters As ExtensionImageRegisterParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
      description: "\r\nRequired. Parameters supplied to the Register Virtual Machine\r\nExtension Image operation.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Unregister(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Unregister(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  id: Unregister(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: Unregister(IExtensionImageOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Unregister(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Unregister
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 334
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUnregister a version of an extension that was previously registered\r\nusing either the Register Extension or Update Extension APIs. An\r\nextension version is identified by the combination of its\r\nProviderNamespace, Type and Version which are specified when\r\nregistering the extension. Unregistering is only allowed for\r\ninternal extensions, that is, the extensions for which the\r\nIsInternalExtension field is set to 'true' during registration or\r\nduring an update. There is a quota (15) on the number of\r\nextensions that can be registered per subscription. If your\r\nsubscription runs out of quota, you will wither need to unregister\r\nsome of the internal extensions or contact Azure (same email used\r\nto become a publisher)  to increase the quota.\r\n"
  example: []
  syntax:
    content: public static OperationStatusResponse Unregister(IExtensionImageOperations operations, string providerNamespace, string type, string version)
    content.vb: Public Shared Function Unregister(operations As IExtensionImageOperations, providerNamespace As String, type As String, version As String) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: providerNamespace
      type: System.String
      description: "\r\nRequired. The provider namespace of the extension image to\r\nunregister.\r\n"
    - id: type
      type: System.String
      description: "\r\nRequired. The type of the extension image to unregister.\r\n"
    - id: version
      type: System.String
      description: "\r\nRequired. The version of the extension image to unregister.\r\n"
    return:
      type: OperationStatusResponse
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UnregisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UnregisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  id: UnregisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,System.String,System.String,System.String)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: UnregisterAsync(IExtensionImageOperations, String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UnregisterAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UnregisterAsync
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 382
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUnregister a version of an extension that was previously registered\r\nusing either the Register Extension or Update Extension APIs. An\r\nextension version is identified by the combination of its\r\nProviderNamespace, Type and Version which are specified when\r\nregistering the extension. Unregistering is only allowed for\r\ninternal extensions, that is, the extensions for which the\r\nIsInternalExtension field is set to 'true' during registration or\r\nduring an update. There is a quota (15) on the number of\r\nextensions that can be registered per subscription. If your\r\nsubscription runs out of quota, you will wither need to unregister\r\nsome of the internal extensions or contact Azure (same email used\r\nto become a publisher)  to increase the quota.\r\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> UnregisterAsync(IExtensionImageOperations operations, string providerNamespace, string type, string version)
    content.vb: Public Shared Function UnregisterAsync(operations As IExtensionImageOperations, providerNamespace As String, type As String, version As String) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: providerNamespace
      type: System.String
      description: "\r\nRequired. The provider namespace of the extension image to\r\nunregister.\r\n"
    - id: type
      type: System.String
      description: "\r\nRequired. The type of the extension image to unregister.\r\n"
    - id: version
      type: System.String
      description: "\r\nRequired. The version of the extension image to unregister.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  id: Update(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(IExtensionImageOperations, ExtensionImageUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.Update(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Update
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 414
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUpdate a new extension. It is allowed to update an extension which\r\nhad already been registered with the same identity (i.e.\r\ncombination of ProviderNamespace and Type) but with different\r\nversion. It will fail if the extension to update has an identity\r\nthat has not been registered before, or there is already an\r\nextension with the same identity and same version.\r\n"
  example: []
  syntax:
    content: public static OperationStatusResponse Update(IExtensionImageOperations operations, ExtensionImageUpdateParameters parameters)
    content.vb: Public Shared Function Update(operations As IExtensionImageOperations, parameters As ExtensionImageUpdateParameters) As OperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
      description: "\r\nRequired. Parameters supplied to the Update Virtual Machine\r\nExtension Image operation.\r\n"
    return:
      type: OperationStatusResponse
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  id: UpdateAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations,Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  parent: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(IExtensionImageOperations, ExtensionImageUpdateParameters)
  fullName: Microsoft.WindowsAzure.Management.Compute.ExtensionImageOperationsExtensions.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations, Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters)
  type: Method
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdateAsync
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/ExtensionImageOperationsExtensions.cs
    startLine: 450
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUpdate a new extension. It is allowed to update an extension which\r\nhad already been registered with the same identity (i.e.\r\ncombination of ProviderNamespace and Type) but with different\r\nversion. It will fail if the extension to update has an identity\r\nthat has not been registered before, or there is already an\r\nextension with the same identity and same version.\r\n"
  example: []
  syntax:
    content: public static Task<OperationStatusResponse> UpdateAsync(IExtensionImageOperations operations, ExtensionImageUpdateParameters parameters)
    content.vb: Public Shared Function UpdateAsync(operations As IExtensionImageOperations, parameters As ExtensionImageUpdateParameters) As Task(Of OperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.Management.Compute.IExtensionImageOperations.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
      description: "\r\nRequired. Parameters supplied to the Update Virtual Machine\r\nExtension Image operation.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Management.Compute
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute
  fullName: Microsoft.WindowsAzure.Management.Compute
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  parent: Microsoft.WindowsAzure.Management.Compute
  isExternal: false
  name: IExtensionImageOperations
  fullName: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: ExtensionImageRegisterParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: ExtensionImageUpdateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
- uid: OperationStatusResponse
  isExternal: true
  name: OperationStatusResponse
  fullName: OperationStatusResponse
- uid: System.Threading.Tasks.Task{OperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationStatusResponse>
  fullName: System.Threading.Tasks.Task<OperationStatusResponse>
  fullname.vb: System.Threading.Tasks.Task(Of OperationStatusResponse)
  name.vb: Task(Of OperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: )
    fullName: )
