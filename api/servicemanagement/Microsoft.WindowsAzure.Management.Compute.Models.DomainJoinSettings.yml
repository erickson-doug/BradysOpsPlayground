items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings
  id: DomainJoinSettings
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.Credentials
  - Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.DomainToJoin
  - Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.LdapMachineObjectOU
  - Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.Provisioning
  langs:
  - csharp
  - vb
  name: DomainJoinSettings
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DomainJoinSettings
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nContains properties that specify a domain to which the virtual machine\r\nwill be joined. This element is only used with the\r\nWindowsProvisioningConfiguration set.\r\n"
  example: []
  syntax:
    content: public class DomainJoinSettings
    content.vb: Public Class DomainJoinSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.Credentials
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.Credentials
  id: Credentials
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.Credentials
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Credentials
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the values to use to join the virtual machine\r\nto the domain.\r\n"
  example: []
  syntax:
    content: >-
      public DomainJoinCredentials Credentials

      {

          get;

          set;

      }
    content.vb: Public Property Credentials As DomainJoinCredentials
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.DomainToJoin
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.DomainToJoin
  id: DomainToJoin
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings
  langs:
  - csharp
  - vb
  name: DomainToJoin
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.DomainToJoin
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DomainToJoin
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the domain to join.\r\n"
  example: []
  syntax:
    content: >-
      public string DomainToJoin

      {

          get;

          set;

      }
    content.vb: Public Property DomainToJoin As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.LdapMachineObjectOU
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.LdapMachineObjectOU
  id: LdapMachineObjectOU
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings
  langs:
  - csharp
  - vb
  name: LdapMachineObjectOU
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.LdapMachineObjectOU
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LdapMachineObjectOU
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the Lightweight Directory Access Protocol\r\n(LDAP) X 500-distinguished name of the organizational unit (OU) in\r\nwhich the computer account is created. This account is in Active\r\nDirectory on a domain controller in the domain to which the\r\ncomputer is being joined. Example:\r\nOU=MyOu,OU=MyParentOu,DC=example.com,DC=MyCompany,DC=com.\r\n"
  example: []
  syntax:
    content: >-
      public string LdapMachineObjectOU

      {

          get;

          set;

      }
    content.vb: Public Property LdapMachineObjectOU As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.Provisioning
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.Provisioning
  id: Provisioning
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings
  langs:
  - csharp
  - vb
  name: Provisioning
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.Provisioning
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Provisioning
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Additional information for domain join provisioning.\r\n"
  example: []
  syntax:
    content: >-
      public DomainJoinProvisioning Provisioning

      {

          get;

          set;

      }
    content.vb: Public Property Provisioning As DomainJoinProvisioning
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinProvisioning
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings
  langs:
  - csharp
  - vb
  name: DomainJoinSettings()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinSettings.DomainJoinSettings()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DomainJoinSettings.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the DomainJoinSettings class.\r\n"
  example: []
  syntax:
    content: public DomainJoinSettings()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: DomainJoinCredentials
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinCredentials
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinProvisioning
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: DomainJoinProvisioning
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DomainJoinProvisioning
