items:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters
  commentId: T:Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters
  id: WebSiteUpdateParameters
  parent: Microsoft.WindowsAzure.Management.WebSites.Models
  children:
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.#ctor
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.HostNames
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.HostNameSslStates
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.ServerFarm
  - Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.State
  langs:
  - csharp
  - vb
  name: WebSiteUpdateParameters
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WebSiteUpdateParameters
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nParameters supplied to the Update Web Site operation.\r\n"
  example: []
  syntax:
    content: public class WebSiteUpdateParameters
    content.vb: Public Class WebSiteUpdateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.HostNames
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.HostNames
  id: HostNames
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters
  langs:
  - csharp
  - vb
  name: HostNames
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.HostNames
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HostNames
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. An array of strings that contains the public host names\r\nfor the web site, including custom domains. Important: When you\r\nadd a custom domain in a PUT operation, be sure to include every\r\nhost name that you want for the web site. To delete a custom\r\ndomain name in a PUT operation, include all of the host names for\r\nthe web site that you want to keep, but leave out the one that you\r\nwant to delete.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> HostNames

      {

          get;

          set;

      }
    content.vb: Public Property HostNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.HostNameSslStates
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.HostNameSslStates
  id: HostNameSslStates
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters
  langs:
  - csharp
  - vb
  name: HostNameSslStates
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.HostNameSslStates
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HostNameSslStates
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. SSL states of host names bound to the web site.\r\n"
  example: []
  syntax:
    content: >-
      public IList<WebSiteUpdateParameters.WebSiteHostNameSslState> HostNameSslStates

      {

          get;

          set;

      }
    content.vb: Public Property HostNameSslStates As IList(Of WebSiteUpdateParameters.WebSiteHostNameSslState)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.WebSiteHostNameSslState}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.ServerFarm
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.ServerFarm
  id: ServerFarm
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters
  langs:
  - csharp
  - vb
  name: ServerFarm
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.ServerFarm
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServerFarm
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. String specifying the Server Farm (Web Hosting Plan)\r\nwhere to place the site. Server Farm must exist.\r\n"
  example: []
  syntax:
    content: >-
      public string ServerFarm

      {

          get;

          set;

      }
    content.vb: Public Property ServerFarm As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.State
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.State
  id: State
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters
  langs:
  - csharp
  - vb
  name: State
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.State
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: State
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. A string that describes the state of the web site.\r\nPossible values include Stopped, Running, or QuotaExceeded.\r\n"
  example: []
  syntax:
    content: >-
      public string State

      {

          get;

          set;

      }
    content.vb: Public Property State As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters
  langs:
  - csharp
  - vb
  name: WebSiteUpdateParameters()
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.WebSiteUpdateParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteUpdateParameters.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nInitializes a new instance of the WebSiteUpdateParameters class.\r\n"
  example: []
  syntax:
    content: public WebSiteUpdateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.WebSites.Models
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.WebSiteHostNameSslState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<WebSiteUpdateParameters.WebSiteHostNameSslState>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.WebSiteHostNameSslState>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.WebSiteHostNameSslState)
  name.vb: IList(Of WebSiteUpdateParameters.WebSiteHostNameSslState)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.WebSiteHostNameSslState
    name: WebSiteUpdateParameters.WebSiteHostNameSslState
    fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.WebSiteHostNameSslState
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.WebSiteHostNameSslState
    name: WebSiteUpdateParameters.WebSiteHostNameSslState
    fullName: Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUpdateParameters.WebSiteHostNameSslState
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
