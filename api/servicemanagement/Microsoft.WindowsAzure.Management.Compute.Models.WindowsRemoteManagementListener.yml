items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener
  id: WindowsRemoteManagementListener
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.#ctor(Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineWindowsRemoteManagementListenerType)
  - Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.CertificateThumbprint
  - Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.ListenerType
  langs:
  - csharp
  - vb
  name: WindowsRemoteManagementListener
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/WindowsRemoteManagementListener.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WindowsRemoteManagementListener
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/WindowsRemoteManagementListener.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nContains the type and certificate information for the listener.\r\n"
  example: []
  syntax:
    content: public class WindowsRemoteManagementListener
    content.vb: Public Class WindowsRemoteManagementListener
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.CertificateThumbprint
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.CertificateThumbprint
  id: CertificateThumbprint
  parent: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener
  langs:
  - csharp
  - vb
  name: CertificateThumbprint
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.CertificateThumbprint
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/WindowsRemoteManagementListener.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CertificateThumbprint
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/WindowsRemoteManagementListener.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the certificate thumbprint for the secure\r\nconnection. If Type is Https then this value is an optional value\r\nthat is set to the thumbprint of the service certificate that is\r\nused to provision the WinRM HTTPS listener. If this value is not\r\nspecified, a self-signed certificate is generated and used for the\r\nvirtual machine.\r\n"
  example: []
  syntax:
    content: >-
      public string CertificateThumbprint

      {

          get;

          set;

      }
    content.vb: Public Property CertificateThumbprint As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.ListenerType
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.ListenerType
  id: ListenerType
  parent: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener
  langs:
  - csharp
  - vb
  name: ListenerType
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.ListenerType
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/WindowsRemoteManagementListener.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListenerType
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/WindowsRemoteManagementListener.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Specifies the type of listener. This value can be Http or\r\nHttps. The value is case sensitive.\r\n"
  example: []
  syntax:
    content: >-
      public VirtualMachineWindowsRemoteManagementListenerType ListenerType

      {

          get;

          set;

      }
    content.vb: Public Property ListenerType As VirtualMachineWindowsRemoteManagementListenerType
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineWindowsRemoteManagementListenerType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener
  langs:
  - csharp
  - vb
  name: WindowsRemoteManagementListener()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.WindowsRemoteManagementListener()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/WindowsRemoteManagementListener.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/WindowsRemoteManagementListener.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the WindowsRemoteManagementListener\r\nclass.\r\n"
  example: []
  syntax:
    content: public WindowsRemoteManagementListener()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.#ctor(Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineWindowsRemoteManagementListenerType)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.#ctor(Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineWindowsRemoteManagementListenerType)
  id: '#ctor(Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineWindowsRemoteManagementListenerType)'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener
  langs:
  - csharp
  - vb
  name: WindowsRemoteManagementListener(VirtualMachineWindowsRemoteManagementListenerType)
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.WindowsRemoteManagementListener.WindowsRemoteManagementListener(Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineWindowsRemoteManagementListenerType)
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/WindowsRemoteManagementListener.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/WindowsRemoteManagementListener.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the WindowsRemoteManagementListener\r\nclass with required arguments.\r\n"
  example: []
  syntax:
    content: public WindowsRemoteManagementListener(VirtualMachineWindowsRemoteManagementListenerType listenerType)
    content.vb: Public Sub New(listenerType As VirtualMachineWindowsRemoteManagementListenerType)
    parameters:
    - id: listenerType
      type: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineWindowsRemoteManagementListenerType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineWindowsRemoteManagementListenerType
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: VirtualMachineWindowsRemoteManagementListenerType
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineWindowsRemoteManagementListenerType
