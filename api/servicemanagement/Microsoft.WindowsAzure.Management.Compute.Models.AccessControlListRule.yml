items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule
  id: AccessControlListRule
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Action
  - Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Description
  - Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Order
  - Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.RemoteSubnet
  langs:
  - csharp
  - vb
  name: AccessControlListRule
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AccessControlListRule
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nAn access control rule for a public endpoint.\r\n"
  example: []
  syntax:
    content: public class AccessControlListRule
    content.vb: Public Class AccessControlListRule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Action
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Action
  id: Action
  parent: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule
  langs:
  - csharp
  - vb
  name: Action
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Action
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Action
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The action allowed by this Access Control List Rule.\r\n"
  example: []
  syntax:
    content: >-
      public string Action

      {

          get;

          set;

      }
    content.vb: Public Property Action As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Description
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Description
  id: Description
  parent: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule
  langs:
  - csharp
  - vb
  name: Description
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Description
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Description
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The description for this Access Control List Rule.\r\n"
  example: []
  syntax:
    content: >-
      public string Description

      {

          get;

          set;

      }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Order
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Order
  id: Order
  parent: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule
  langs:
  - csharp
  - vb
  name: Order
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.Order
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Order
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The order of application for this Access Control List\r\nRule.\r\n"
  example: []
  syntax:
    content: >-
      public int ? Order

      {

          get;

          set;

      }
    content.vb: Public Property Order As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.RemoteSubnet
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.RemoteSubnet
  id: RemoteSubnet
  parent: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule
  langs:
  - csharp
  - vb
  name: RemoteSubnet
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.RemoteSubnet
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RemoteSubnet
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The remote subnet that is granted access for this Access\r\nControl List Rule.\r\n"
  example: []
  syntax:
    content: >-
      public string RemoteSubnet

      {

          get;

          set;

      }
    content.vb: Public Property RemoteSubnet As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule
  langs:
  - csharp
  - vb
  name: AccessControlListRule()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.AccessControlListRule.AccessControlListRule()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/AccessControlListRule.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the AccessControlListRule class.\r\n"
  example: []
  syntax:
    content: public AccessControlListRule()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
