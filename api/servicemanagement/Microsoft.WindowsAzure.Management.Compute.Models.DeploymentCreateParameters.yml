items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  id: DeploymentCreateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Configuration
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.ExtendedProperties
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.ExtensionConfiguration
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Label
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Name
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.PackageUri
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.StartDeployment
  - Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.TreatWarningsAsError
  langs:
  - csharp
  - vb
  name: DeploymentCreateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeploymentCreateParameters
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nParameters supplied to the Create Deployment operation.\r\n"
  example: []
  syntax:
    content: public class DeploymentCreateParameters
    content.vb: Public Class DeploymentCreateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Configuration
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Configuration
  id: Configuration
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  langs:
  - csharp
  - vb
  name: Configuration
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Configuration
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Configuration
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. The service configuration file for the deployment. The\r\nclient library does the base-64 encoding from the plain text input.\r\n"
  example: []
  syntax:
    content: >-
      public string Configuration

      {

          get;

          set;

      }
    content.vb: Public Property Configuration As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.ExtendedProperties
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.ExtendedProperties
  id: ExtendedProperties
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  langs:
  - csharp
  - vb
  name: ExtendedProperties
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.ExtendedProperties
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExtendedProperties
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Represents the name of an extended deployment property.\r\nEach extended property must have a defined name and a value. You\r\ncan have a maximum of 25 extended property name/value pairs. The\r\nmaximum length of the name element is 64 characters, only\r\nalphanumeric characters and underscores are valid in the name, and\r\nthe name must start with a letter. Attempting to use other\r\ncharacters, starting the name with a non-letter character, or\r\nentering a name that is identical to that of another extended\r\nproperty owned by the same hosted service will result in a status\r\ncode 400 (Bad Request) error.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> ExtendedProperties

      {

          get;

          set;

      }
    content.vb: Public Property ExtendedProperties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.ExtensionConfiguration
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.ExtensionConfiguration
  id: ExtensionConfiguration
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  langs:
  - csharp
  - vb
  name: ExtensionConfiguration
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.ExtensionConfiguration
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExtensionConfiguration
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Represents an extension that is added to the cloud\r\nservice. In Azure, a process can run as an extension of a cloud\r\nservice. For example, Remote Desktop Access or the Azure\r\nDiagnostics Agent can run as extensions to the cloud service. You\r\nmust add an extension to the cloud service by using Add Extension\r\nbefore it can be added to the deployment.\r\n"
  example: []
  syntax:
    content: >-
      public ExtensionConfiguration ExtensionConfiguration

      {

          get;

          set;

      }
    content.vb: Public Property ExtensionConfiguration As ExtensionConfiguration
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Label
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  langs:
  - csharp
  - vb
  name: Label
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Label
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Label
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. A name for the hosted service. The name can be up to 100\r\ncharacters in length. It is recommended that the label be unique\r\nwithin the subscription. The name can be used identify the hosted\r\nservice for your tracking purposes.\r\n"
  example: []
  syntax:
    content: >-
      public string Label

      {

          get;

          set;

      }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Name
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.Name
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. The name for the deployment. The deployment name must be\r\nunique among other deployments for the cloud service.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.PackageUri
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.PackageUri
  id: PackageUri
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  langs:
  - csharp
  - vb
  name: PackageUri
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.PackageUri
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PackageUri
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
    startLine: 119
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. A URL that refers to the location of the service package\r\nin the Blob service. The service package can be located either in\r\na storage account beneath the same subscription or a Shared Access\r\nSignature (SAS) URI from any storage account. For more info about\r\nShared Access Signatures, see Delegating Access with a Shared\r\nAccess Signature (REST API) at\r\nhttp://msdn.microsoft.com/en-us/library/windowsazure/ee395415.aspx.\r\n"
  example: []
  syntax:
    content: >-
      public Uri PackageUri

      {

          get;

          set;

      }
    content.vb: Public Property PackageUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.StartDeployment
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.StartDeployment
  id: StartDeployment
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  langs:
  - csharp
  - vb
  name: StartDeployment
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.StartDeployment
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartDeployment
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
    startLine: 136
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Indicates whether to start the deployment immediately\r\nafter it is created. The default value is false. If false, the\r\nservice model is still deployed to the virtual machines but the\r\ncode is not run immediately. Instead, the service is Suspended\r\nuntil you call Update Deployment Status and set the status\r\ntoRunning, at which time the service will be started. A deployed\r\nservice still incurs charges, even if it is suspended.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? StartDeployment

      {

          get;

          set;

      }
    content.vb: Public Property StartDeployment As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.TreatWarningsAsError
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.TreatWarningsAsError
  id: TreatWarningsAsError
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  langs:
  - csharp
  - vb
  name: TreatWarningsAsError
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.TreatWarningsAsError
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TreatWarningsAsError
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
    startLine: 150
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Indicates whether to treat package validation warnings as\r\nerrors. The default value is false. If set to true, the Created\r\nDeployment operation fails if there are validation warnings on the\r\nservice package.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? TreatWarningsAsError

      {

          get;

          set;

      }
    content.vb: Public Property TreatWarningsAsError As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters
  langs:
  - csharp
  - vb
  name: DeploymentCreateParameters()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DeploymentCreateParameters.DeploymentCreateParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DeploymentCreateParameters.cs
    startLine: 159
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the DeploymentCreateParameters class.\r\n"
  example: []
  syntax:
    content: public DeploymentCreateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: ExtensionConfiguration
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionConfiguration
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
