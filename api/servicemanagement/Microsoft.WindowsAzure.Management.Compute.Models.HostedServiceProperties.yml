items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  id: HostedServiceProperties
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.AffinityGroup
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.DateCreated
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.DateLastModified
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Description
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.ExtendedProperties
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Label
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Location
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.ReverseDnsFqdn
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Status
  langs:
  - csharp
  - vb
  name: HostedServiceProperties
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HostedServiceProperties
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nThe properties that are assigned to the cloud service.\r\n"
  example: []
  syntax:
    content: public class HostedServiceProperties
    content.vb: Public Class HostedServiceProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.AffinityGroup
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.AffinityGroup
  id: AffinityGroup
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  langs:
  - csharp
  - vb
  name: AffinityGroup
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.AffinityGroup
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AffinityGroup
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The affinity group with which this cloud service is\r\nassociated, if any. If the service is associated with an affinity\r\ngroup, the Location element is not returned.\r\n"
  example: []
  syntax:
    content: >-
      public string AffinityGroup

      {

          get;

          set;

      }
    content.vb: Public Property AffinityGroup As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.DateCreated
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.DateCreated
  id: DateCreated
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  langs:
  - csharp
  - vb
  name: DateCreated
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.DateCreated
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DateCreated
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The date that the cloud service was created, in\r\n[4DigitYear]-[2DigitMonth]-[2DigitDay]T[2DigitHour]:[2DigitMinute]:[2DigitSecond]Z\r\nformat. The date 2011-05-11T16:15:26Z is an example that could be\r\nreturned by the DateCreated or DateLastModified elements.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime DateCreated

      {

          get;

          set;

      }
    content.vb: Public Property DateCreated As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.DateLastModified
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.DateLastModified
  id: DateLastModified
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  langs:
  - csharp
  - vb
  name: DateLastModified
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.DateLastModified
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DateLastModified
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The date that the cloud service was last updated, in\r\n[4DigitYear]-[2DigitMonth]-[2DigitDay]T[2DigitHour]:[2DigitMinute]:[2DigitSecond]Z\r\nformat. The date 2011-05-11T16:15:26Z is an example that could be\r\nreturned by the DateCreated or DateLastModified elements.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime DateLastModified

      {

          get;

          set;

      }
    content.vb: Public Property DateLastModified As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Description
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Description
  id: Description
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  langs:
  - csharp
  - vb
  name: Description
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Description
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Description
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The description for the cloud service.\r\n"
  example: []
  syntax:
    content: >-
      public string Description

      {

          get;

          set;

      }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.ExtendedProperties
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.ExtendedProperties
  id: ExtendedProperties
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  langs:
  - csharp
  - vb
  name: ExtendedProperties
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.ExtendedProperties
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExtendedProperties
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 101
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Represents the name of an extended cloud service\r\nproperty. Each extended property must have a defined name and a\r\nvalue. You can have a maximum of 50 extended property name and\r\nvalue pairs. The maximum length of the name element is 64\r\ncharacters, only alphanumeric characters and underscores are valid\r\nin the name, and it must start with a letter. Attempting to use\r\nother characters, starting with a non-letter character, or\r\nentering a name that is identical to that of another extended\r\nproperty owned by the same service will result in a status code\r\n400 (Bad Request) error. Each extended property value has a\r\nmaximum length of 255 characters.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> ExtendedProperties

      {

          get;

          set;

      }
    content.vb: Public Property ExtendedProperties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Label
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  langs:
  - csharp
  - vb
  name: Label
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Label
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Label
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 113
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The user-supplied name of the cloud service. This name\r\ncan be used identify the service for your tracking purposes.\r\n"
  example: []
  syntax:
    content: >-
      public string Label

      {

          get;

          set;

      }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Location
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Location
  id: Location
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  langs:
  - csharp
  - vb
  name: Location
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Location
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Location
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 127
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The geo-location of the cloud service in Windows Azure,\r\nif the service is not associated with an affinity group. If a\r\nlocation has been specified, the AffinityGroup element is not\r\nreturned.\r\n"
  example: []
  syntax:
    content: >-
      public string Location

      {

          get;

          set;

      }
    content.vb: Public Property Location As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.ReverseDnsFqdn
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.ReverseDnsFqdn
  id: ReverseDnsFqdn
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  langs:
  - csharp
  - vb
  name: ReverseDnsFqdn
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.ReverseDnsFqdn
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReverseDnsFqdn
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 139
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Dns address to which the cloud service's IP address\r\nresolves when queried using a reverse Dns query.\r\n"
  example: []
  syntax:
    content: >-
      public string ReverseDnsFqdn

      {

          get;

          set;

      }
    content.vb: Public Property ReverseDnsFqdn As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Status
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Status
  id: Status
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  langs:
  - csharp
  - vb
  name: Status
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.Status
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Status
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 150
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The status of the cloud service.\r\n"
  example: []
  syntax:
    content: >-
      public HostedServiceStatus Status

      {

          get;

          set;

      }
    content.vb: Public Property Status As HostedServiceStatus
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  langs:
  - csharp
  - vb
  name: HostedServiceProperties()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties.HostedServiceProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceProperties.cs
    startLine: 159
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the HostedServiceProperties class.\r\n"
  example: []
  syntax:
    content: public HostedServiceProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceStatus
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: HostedServiceStatus
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceStatus
