items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters
  id: VirtualMachineDiskCreateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.#ctor(System.String,System.Uri,System.String)
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.Label
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.MediaLinkUri
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.Name
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.OperatingSystemType
  langs:
  - csharp
  - vb
  name: VirtualMachineDiskCreateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineDiskCreateParameters
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nParameters supplied to the Create Virtual Disk Image operation.\r\n"
  example: []
  syntax:
    content: public class VirtualMachineDiskCreateParameters
    content.vb: Public Class VirtualMachineDiskCreateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.Label
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters
  langs:
  - csharp
  - vb
  name: Label
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.Label
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Label
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Specifies the friendly name of the disk.\r\n"
  example: []
  syntax:
    content: >-
      public string Label

      {

          get;

          set;

      }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.MediaLinkUri
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.MediaLinkUri
  id: MediaLinkUri
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters
  langs:
  - csharp
  - vb
  name: MediaLinkUri
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.MediaLinkUri
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MediaLinkUri
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Specifies the location of the blob in Azure storage. The\r\nblob location must belong to a storage account in the subscription\r\nspecified by the SubscriptionId value in the operation call.\r\nExample: http://example.blob.core.windows.net/disks/mydisk.vhd.\r\n"
  example: []
  syntax:
    content: >-
      public Uri MediaLinkUri

      {

          get;

          set;

      }
    content.vb: Public Property MediaLinkUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.Name
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.Name
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Specifies a name for the disk. Azure uses the name to\r\nidentify the disk when creating virtual machines from the disk.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.OperatingSystemType
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.OperatingSystemType
  id: OperatingSystemType
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters
  langs:
  - csharp
  - vb
  name: OperatingSystemType
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.OperatingSystemType
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OperatingSystemType
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
    startLine: 74
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The operating system type of the disk. Possible values\r\nare: Linux or Windows.\r\n"
  example: []
  syntax:
    content: >-
      public string OperatingSystemType

      {

          get;

          set;

      }
    content.vb: Public Property OperatingSystemType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters
  langs:
  - csharp
  - vb
  name: VirtualMachineDiskCreateParameters()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.VirtualMachineDiskCreateParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the\r\nVirtualMachineDiskCreateParameters class.\r\n"
  example: []
  syntax:
    content: public VirtualMachineDiskCreateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.#ctor(System.String,System.Uri,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.#ctor(System.String,System.Uri,System.String)
  id: '#ctor(System.String,System.Uri,System.String)'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters
  langs:
  - csharp
  - vb
  name: VirtualMachineDiskCreateParameters(String, Uri, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineDiskCreateParameters.VirtualMachineDiskCreateParameters(System.String, System.Uri, System.String)
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineDiskCreateParameters.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the\r\nVirtualMachineDiskCreateParameters class with required arguments.\r\n"
  example: []
  syntax:
    content: public VirtualMachineDiskCreateParameters(string label, Uri mediaLinkUri, string name)
    content.vb: Public Sub New(label As String, mediaLinkUri As Uri, name As String)
    parameters:
    - id: label
      type: System.String
    - id: mediaLinkUri
      type: System.Uri
    - id: name
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
