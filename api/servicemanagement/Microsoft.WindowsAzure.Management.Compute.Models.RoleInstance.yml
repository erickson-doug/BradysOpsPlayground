items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  id: RoleInstance
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.GuestAgentStatus
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.HostName
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceEndpoints
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceErrorCode
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceFaultDomain
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceName
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceSize
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceStateDetails
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceStatus
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceUpgradeDomain
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.IPAddress
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.NetworkInterfaces
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PowerState
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIPs
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.RemoteAccessCertificateThumbprint
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.ResourceExtensionStatusList
  - Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.RoleName
  langs:
  - csharp
  - vb
  name: RoleInstance
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  type: Class
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RoleInstance
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nDetails of a specific role instance.\r\n"
  example: []
  syntax:
    content: public class RoleInstance
    content.vb: Public Class RoleInstance
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.GuestAgentStatus
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.GuestAgentStatus
  id: GuestAgentStatus
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: GuestAgentStatus
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.GuestAgentStatus
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GuestAgentStatus
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Guest Agent Status.\r\n"
  example: []
  syntax:
    content: >-
      public GuestAgentStatus GuestAgentStatus

      {

          get;

          set;

      }
    content.vb: Public Property GuestAgentStatus As GuestAgentStatus
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.GuestAgentStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.HostName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.HostName
  id: HostName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: HostName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.HostName
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HostName
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The DNS host name of the service in which the role\r\ninstance is running. This element is only listed for Virtual\r\nMachine deployments.\r\n"
  example: []
  syntax:
    content: >-
      public string HostName

      {

          get;

          set;

      }
    content.vb: Public Property HostName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceEndpoints
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceEndpoints
  id: InstanceEndpoints
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: InstanceEndpoints
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceEndpoints
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InstanceEndpoints
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The list of instance endpoints for the role.\r\n"
  example: []
  syntax:
    content: >-
      public IList<InstanceEndpoint> InstanceEndpoints

      {

          get;

          set;

      }
    content.vb: Public Property InstanceEndpoints As IList(Of InstanceEndpoint)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.InstanceEndpoint}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceErrorCode
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceErrorCode
  id: InstanceErrorCode
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: InstanceErrorCode
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceErrorCode
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InstanceErrorCode
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. An error code that can be provided to Windows Azure\r\nsupport to assist in resolution of errors. This field will\r\ntypically be empty.\r\n"
  example: []
  syntax:
    content: >-
      public string InstanceErrorCode

      {

          get;

          set;

      }
    content.vb: Public Property InstanceErrorCode As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceFaultDomain
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceFaultDomain
  id: InstanceFaultDomain
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: InstanceFaultDomain
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceFaultDomain
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InstanceFaultDomain
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The fault domain that this role instance belongs to. Role\r\ninstances that are part of the same fault domain may all be\r\nvulnerable to the failure of the same piece of shared hardware.\r\n"
  example: []
  syntax:
    content: >-
      public int ? InstanceFaultDomain

      {

          get;

          set;

      }
    content.vb: Public Property InstanceFaultDomain As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceName
  id: InstanceName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: InstanceName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceName
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InstanceName
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 101
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The name of the specific role instance, if an instance of\r\nthe role is running.\r\n"
  example: []
  syntax:
    content: >-
      public string InstanceName

      {

          get;

          set;

      }
    content.vb: Public Property InstanceName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceSize
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceSize
  id: InstanceSize
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: InstanceSize
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceSize
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InstanceSize
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 112
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The size of the role instance.\r\n"
  example: []
  syntax:
    content: >-
      public string InstanceSize

      {

          get;

          set;

      }
    content.vb: Public Property InstanceSize As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceStateDetails
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceStateDetails
  id: InstanceStateDetails
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: InstanceStateDetails
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceStateDetails
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InstanceStateDetails
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 125
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The instance state, returned as a string that, when\r\npresent, provides a snapshot of the state of the virtual machine\r\nat the time the operation was called.\r\n"
  example: []
  syntax:
    content: >-
      public string InstanceStateDetails

      {

          get;

          set;

      }
    content.vb: Public Property InstanceStateDetails As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceStatus
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceStatus
  id: InstanceStatus
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: InstanceStatus
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceStatus
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InstanceStatus
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 136
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The current status of this instance.\r\n"
  example: []
  syntax:
    content: >-
      public string InstanceStatus

      {

          get;

          set;

      }
    content.vb: Public Property InstanceStatus As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceUpgradeDomain
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceUpgradeDomain
  id: InstanceUpgradeDomain
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: InstanceUpgradeDomain
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.InstanceUpgradeDomain
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InstanceUpgradeDomain
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 149
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The update domain that this role instance belongs to.\r\nDuring an Upgrade Deployment, all roles in the same update domain\r\nare updated at the same time.\r\n"
  example: []
  syntax:
    content: >-
      public int ? InstanceUpgradeDomain

      {

          get;

          set;

      }
    content.vb: Public Property InstanceUpgradeDomain As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.IPAddress
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.IPAddress
  id: IPAddress
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: IPAddress
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.IPAddress
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IPAddress
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 160
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The IP address of the role instance (DIP).\r\n"
  example: []
  syntax:
    content: >-
      public string IPAddress

      {

          get;

          set;

      }
    content.vb: Public Property IPAddress As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.NetworkInterfaces
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.NetworkInterfaces
  id: NetworkInterfaces
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: NetworkInterfaces
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.NetworkInterfaces
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NetworkInterfaces
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 171
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional.\r\n"
  example: []
  syntax:
    content: >-
      public IList<NetworkInterfaceInstance> NetworkInterfaces

      {

          get;

          set;

      }
    content.vb: Public Property NetworkInterfaces As IList(Of NetworkInterfaceInstance)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.NetworkInterfaceInstance}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PowerState
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PowerState
  id: PowerState
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: PowerState
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PowerState
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PowerState
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 182
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The running state of the role instance.\r\n"
  example: []
  syntax:
    content: >-
      public RoleInstancePowerState PowerState

      {

          get;

          set;

      }
    content.vb: Public Property PowerState As RoleInstancePowerState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstancePowerState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIPs
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIPs
  id: PublicIPs
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: PublicIPs
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIPs
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PublicIPs
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 196
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Optional. A set of public IPs. Currently, only one\r\nadditional public IP per role is supported in an IaaS deployment.\r\nThe IP address is in addition to the default VIP for the\r\ndeployment.\r\n"
  example: []
  syntax:
    content: >-
      public IList<RoleInstance.PublicIP> PublicIPs

      {

          get;

          set;

      }
    content.vb: Public Property PublicIPs As IList(Of RoleInstance.PublicIP)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.RemoteAccessCertificateThumbprint
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.RemoteAccessCertificateThumbprint
  id: RemoteAccessCertificateThumbprint
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: RemoteAccessCertificateThumbprint
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.RemoteAccessCertificateThumbprint
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RemoteAccessCertificateThumbprint
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 209
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The thumbprint of the RDP server certificate (in Windows)\r\nor SSH server certificate (in Linux). The thumbprint is only used\r\nfor Virtual Machines that have been created from an image.\r\n"
  example: []
  syntax:
    content: >-
      public string RemoteAccessCertificateThumbprint

      {

          get;

          set;

      }
    content.vb: Public Property RemoteAccessCertificateThumbprint As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.ResourceExtensionStatusList
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.ResourceExtensionStatusList
  id: ResourceExtensionStatusList
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: ResourceExtensionStatusList
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.ResourceExtensionStatusList
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ResourceExtensionStatusList
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 220
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Resource Extension Status List.\r\n"
  example: []
  syntax:
    content: >-
      public IList<ResourceExtensionStatus> ResourceExtensionStatusList

      {

          get;

          set;

      }
    content.vb: Public Property ResourceExtensionStatusList As IList(Of ResourceExtensionStatus)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionStatus}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.RoleName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.RoleName
  id: RoleName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: RoleName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.RoleName
  type: Property
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RoleName
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 231
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The name of the role.\r\n"
  example: []
  syntax:
    content: >-
      public string RoleName

      {

          get;

          set;

      }
    content.vb: Public Property RoleName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance
  langs:
  - csharp
  - vb
  name: RoleInstance()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.RoleInstance()
  type: Constructor
  source:
    remote:
      path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/RoleInstance.cs
    startLine: 240
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the RoleInstance class.\r\n"
  example: []
  syntax:
    content: public RoleInstance()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Compute.Models.GuestAgentStatus
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: GuestAgentStatus
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.GuestAgentStatus
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.InstanceEndpoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<InstanceEndpoint>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Management.Compute.Models.InstanceEndpoint>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Management.Compute.Models.InstanceEndpoint)
  name.vb: IList(Of InstanceEndpoint)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Compute.Models.InstanceEndpoint
    name: InstanceEndpoint
    fullName: Microsoft.WindowsAzure.Management.Compute.Models.InstanceEndpoint
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Compute.Models.InstanceEndpoint
    name: InstanceEndpoint
    fullName: Microsoft.WindowsAzure.Management.Compute.Models.InstanceEndpoint
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.NetworkInterfaceInstance}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<NetworkInterfaceInstance>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Management.Compute.Models.NetworkInterfaceInstance>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Management.Compute.Models.NetworkInterfaceInstance)
  name.vb: IList(Of NetworkInterfaceInstance)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Compute.Models.NetworkInterfaceInstance
    name: NetworkInterfaceInstance
    fullName: Microsoft.WindowsAzure.Management.Compute.Models.NetworkInterfaceInstance
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Compute.Models.NetworkInterfaceInstance
    name: NetworkInterfaceInstance
    fullName: Microsoft.WindowsAzure.Management.Compute.Models.NetworkInterfaceInstance
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstancePowerState
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: RoleInstancePowerState
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstancePowerState
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<RoleInstance.PublicIP>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP)
  name.vb: IList(Of RoleInstance.PublicIP)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
    name: RoleInstance.PublicIP
    fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
    name: RoleInstance.PublicIP
    fullName: Microsoft.WindowsAzure.Management.Compute.Models.RoleInstance.PublicIP
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionStatus}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceExtensionStatus>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionStatus>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionStatus)
  name.vb: IList(Of ResourceExtensionStatus)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionStatus
    name: ResourceExtensionStatus
    fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionStatus
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionStatus
    name: ResourceExtensionStatus
    fullName: Microsoft.WindowsAzure.Management.Compute.Models.ResourceExtensionStatus
  - name: )
    fullName: )
