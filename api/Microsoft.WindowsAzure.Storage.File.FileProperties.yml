items:
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties
  commentId: T:Microsoft.WindowsAzure.Storage.File.FileProperties
  id: FileProperties
  parent: Microsoft.WindowsAzure.Storage.File
  children:
  - Microsoft.WindowsAzure.Storage.File.FileProperties.#ctor
  - Microsoft.WindowsAzure.Storage.File.FileProperties.#ctor(Microsoft.WindowsAzure.Storage.File.FileProperties)
  - Microsoft.WindowsAzure.Storage.File.FileProperties.CacheControl
  - Microsoft.WindowsAzure.Storage.File.FileProperties.ContentDisposition
  - Microsoft.WindowsAzure.Storage.File.FileProperties.ContentEncoding
  - Microsoft.WindowsAzure.Storage.File.FileProperties.ContentLanguage
  - Microsoft.WindowsAzure.Storage.File.FileProperties.ContentMD5
  - Microsoft.WindowsAzure.Storage.File.FileProperties.ContentType
  - Microsoft.WindowsAzure.Storage.File.FileProperties.ETag
  - Microsoft.WindowsAzure.Storage.File.FileProperties.LastModified
  - Microsoft.WindowsAzure.Storage.File.FileProperties.Length
  langs:
  - csharp
  - vb
  name: FileProperties
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties
  type: Class
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FileProperties
    path: src/Common/File/FileProperties.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nRepresents the system properties for a file.\r\n"
  example: []
  syntax:
    content: 'public sealed class FileProperties : object'
    content.vb: >-
      Public NotInheritable Class FileProperties
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileProperties.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: FileProperties()
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.FileProperties()
  type: Constructor
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Common/File/FileProperties.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.File.FileProperties\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public FileProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.#ctor(Microsoft.WindowsAzure.Storage.File.FileProperties)
  commentId: M:Microsoft.WindowsAzure.Storage.File.FileProperties.#ctor(Microsoft.WindowsAzure.Storage.File.FileProperties)
  id: '#ctor(Microsoft.WindowsAzure.Storage.File.FileProperties)'
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: FileProperties(FileProperties)
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.FileProperties(Microsoft.WindowsAzure.Storage.File.FileProperties)
  type: Constructor
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Common/File/FileProperties.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.File.FileProperties\" data-throw-if-not-resolved=\"false\"></xref> class based on an existing instance.\r\n"
  example: []
  syntax:
    content: public FileProperties(FileProperties other)
    content.vb: Public Sub New(other As FileProperties)
    parameters:
    - id: other
      type: Microsoft.WindowsAzure.Storage.File.FileProperties
      description: The set of file properties to clone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.CacheControl
  commentId: P:Microsoft.WindowsAzure.Storage.File.FileProperties.CacheControl
  id: CacheControl
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: CacheControl
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.CacheControl
  type: Property
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CacheControl
    path: src/Common/File/FileProperties.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets or sets the cache-control value stored for the file.\r\n"
  example: []
  syntax:
    content: >-
      public string CacheControl

      {
          get;
          set;
      }
    content.vb: Public Property CacheControl As String
    parameters: []
    return:
      type: System.String
      description: The file's cache-control value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.ContentDisposition
  commentId: P:Microsoft.WindowsAzure.Storage.File.FileProperties.ContentDisposition
  id: ContentDisposition
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: ContentDisposition
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.ContentDisposition
  type: Property
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContentDisposition
    path: src/Common/File/FileProperties.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets or sets the content-disposition value stored for the file.\r\n"
  remarks: "\r\nIf this property has not been set for the file, it returns null.\r\n"
  example: []
  syntax:
    content: >-
      public string ContentDisposition

      {
          get;
          set;
      }
    content.vb: Public Property ContentDisposition As String
    parameters: []
    return:
      type: System.String
      description: The file's content-disposition value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.ContentEncoding
  commentId: P:Microsoft.WindowsAzure.Storage.File.FileProperties.ContentEncoding
  id: ContentEncoding
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: ContentEncoding
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.ContentEncoding
  type: Property
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContentEncoding
    path: src/Common/File/FileProperties.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets or sets the content-encoding value stored for the file.\r\n"
  remarks: "\r\nIf this property has not been set for the file, it returns <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public string ContentEncoding

      {
          get;
          set;
      }
    content.vb: Public Property ContentEncoding As String
    parameters: []
    return:
      type: System.String
      description: The file's content-encoding value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.ContentLanguage
  commentId: P:Microsoft.WindowsAzure.Storage.File.FileProperties.ContentLanguage
  id: ContentLanguage
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: ContentLanguage
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.ContentLanguage
  type: Property
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContentLanguage
    path: src/Common/File/FileProperties.cs
    startLine: 85
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets or sets the content-language value stored for the file.\r\n"
  remarks: "\r\nIf this property has not been set for the file, it returns <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public string ContentLanguage

      {
          get;
          set;
      }
    content.vb: Public Property ContentLanguage As String
    parameters: []
    return:
      type: System.String
      description: The file's content-language value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.Length
  commentId: P:Microsoft.WindowsAzure.Storage.File.FileProperties.Length
  id: Length
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: Length
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.Length
  type: Property
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Length
    path: src/Common/File/FileProperties.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets the size of the file, in bytes.\r\n"
  example: []
  syntax:
    content: >-
      public long Length

      {
          get;
      }
    content.vb: Public ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: The file's size in bytes.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.ContentMD5
  commentId: P:Microsoft.WindowsAzure.Storage.File.FileProperties.ContentMD5
  id: ContentMD5
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: ContentMD5
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.ContentMD5
  type: Property
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContentMD5
    path: src/Common/File/FileProperties.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets or sets the content-MD5 value stored for the file.\r\n"
  example: []
  syntax:
    content: >-
      public string ContentMD5

      {
          get;
          set;
      }
    content.vb: Public Property ContentMD5 As String
    parameters: []
    return:
      type: System.String
      description: The file's content-MD5 hash.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.ContentType
  commentId: P:Microsoft.WindowsAzure.Storage.File.FileProperties.ContentType
  id: ContentType
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.ContentType
  type: Property
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContentType
    path: src/Common/File/FileProperties.cs
    startLine: 106
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets or sets the content-type value stored for the file.\r\n"
  remarks: "\r\nIf this property has not been set for the file, it returns <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public string ContentType

      {
          get;
          set;
      }
    content.vb: Public Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: The file's content-type value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.ETag
  commentId: P:Microsoft.WindowsAzure.Storage.File.FileProperties.ETag
  id: ETag
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: ETag
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.ETag
  type: Property
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ETag
    path: src/Common/File/FileProperties.cs
    startLine: 112
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets the file's ETag value.\r\n"
  example: []
  syntax:
    content: >-
      public string ETag

      {
          get;
      }
    content.vb: Public ReadOnly Property ETag As String
    parameters: []
    return:
      type: System.String
      description: The file's ETag value.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties.LastModified
  commentId: P:Microsoft.WindowsAzure.Storage.File.FileProperties.LastModified
  id: LastModified
  parent: Microsoft.WindowsAzure.Storage.File.FileProperties
  langs:
  - csharp
  - vb
  name: LastModified
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties.LastModified
  type: Property
  source:
    remote:
      path: src/Common/File/FileProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LastModified
    path: src/Common/File/FileProperties.cs
    startLine: 118
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets the the last-modified time for the file, expressed as a UTC value.\r\n"
  example: []
  syntax:
    content: >-
      public DateTimeOffset? LastModified

      {
          get;
      }
    content.vb: Public ReadOnly Property LastModified As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
      description: The file's last-modified time, in UTC format.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.File
  fullName: Microsoft.WindowsAzure.Storage.File
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.File.FileProperties
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: FileProperties
  fullName: Microsoft.WindowsAzure.Storage.File.FileProperties
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.Nullable{DateTimeOffset}
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  fullname.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
