items:
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  commentId: T:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  id: CloudFileDirectory
  parent: Microsoft.WindowsAzure.Storage.File
  children:
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreate(AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreate(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDelete(AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDelete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginExists(AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginExists(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginFetchAttributes(AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(Microsoft.WindowsAzure.Storage.File.FileContinuationToken,AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginSetMetadata(AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndCreate(IAsyncResult)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndCreateIfNotExists(IAsyncResult)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndDelete(IAsyncResult)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndDeleteIfExists(IAsyncResult)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndExists(IAsyncResult)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndFetchAttributes(IAsyncResult)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndListFilesAndDirectoriesSegmented(IAsyncResult)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndSetMetadata(IAsyncResult)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference(System.String)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference(System.String)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
  - Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri
  langs:
  - csharp
  - vb
  name: CloudFileDirectory
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  type: Class
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CloudFileDirectory
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nRepresents a directory of files, designated by a delimiter character.\r\n"
  remarks: Shares, which are encapsulated as <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileShare" data-throw-if-not-resolved="false"></xref> objects, hold directories, and directories hold files. Directories can also contain sub-directories.
  example: []
  syntax:
    content: 'public class CloudFileDirectory : object, IListFileItem'
    content.vb: >-
      Public Class CloudFileDirectory
          Inherits Object
          Implements IListFileItem
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.File.IListFileItem
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreate(AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreate(AsyncCallback,System.Object)
  id: BeginCreate(AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginCreate(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreate(AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreate
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous operation to create a directory.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreate(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreate(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreate(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreate(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  id: BeginCreate(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginCreate(FileRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreate(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreate
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 75
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous operation to create a directory.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreate(FileRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreate(options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndCreate(IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndCreate(IAsyncResult)
  id: EndCreate(IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: EndCreate(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndCreate(IAsyncResult)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndCreate
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nEnds an asynchronous operation to create a directory.\r\n"
  example: []
  syntax:
    content: public virtual void EndCreate(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndCreate(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: IAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync
  id: CreateAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync()
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 101
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to create a directory.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync()
    content.vb: Public Overridable Function CreateAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(CancellationToken)
  id: CreateAsync(CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 112
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to create a directory.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateAsync(FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 124
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to create a directory.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateAsync(options As FileRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateAsync(FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 137
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to create a directory.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateAsync(options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(AsyncCallback,System.Object)
  id: BeginCreateIfNotExists(AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginCreateIfNotExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateIfNotExists
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 188
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous request to create the directory if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateIfNotExists(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateIfNotExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  id: BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginCreateIfNotExists(FileRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateIfNotExists
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 203
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous request to create the directory if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateIfNotExists(FileRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateIfNotExists(options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndCreateIfNotExists(IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndCreateIfNotExists(IAsyncResult)
  id: EndCreateIfNotExists(IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: EndCreateIfNotExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndCreateIfNotExists(IAsyncResult)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndCreateIfNotExists
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 295
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns the result of an asynchronous request to create the directory if it does not already exist.\r\n"
  example: []
  syntax:
    content: public virtual bool EndCreateIfNotExists(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndCreateIfNotExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: IAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the directory did not already exist and was created; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync
  id: CreateIfNotExistsAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync()
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 309
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to create the directory if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync()
    content.vb: Public Overridable Function CreateIfNotExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(CancellationToken)
  id: CreateIfNotExistsAsync(CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 321
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to create the directory if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 334
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to create the directory if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As FileRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 348
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to create the directory if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDelete(AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDelete(AsyncCallback,System.Object)
  id: BeginDelete(AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginDelete(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDelete(AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDelete
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 379
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous operation to delete a directory.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDelete(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDelete(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDelete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDelete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  id: BeginDelete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginDelete(AccessCondition, FileRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDelete(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDelete
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 394
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous operation to delete a directory.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDelete(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDelete(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the directory. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndDelete(IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndDelete(IAsyncResult)
  id: EndDelete(IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: EndDelete(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndDelete(IAsyncResult)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndDelete
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 410
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nEnds an asynchronous operation to delete a directory.\r\n"
  example: []
  syntax:
    content: public virtual void EndDelete(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndDelete(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: IAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 420
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to delete a directory.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync()
    content.vb: Public Overridable Function DeleteAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(CancellationToken)
  id: DeleteAsync(CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 431
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to delete a directory.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteAsync(AccessCondition, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 444
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to delete a directory.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the directory. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 458
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to delete a directory.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the directory. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(AsyncCallback,System.Object)
  id: BeginDeleteIfExists(AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginDeleteIfExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleteIfExists
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 507
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous request to delete the directory if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDeleteIfExists(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDeleteIfExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  id: BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginDeleteIfExists(AccessCondition, FileRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleteIfExists
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 522
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous request to delete the directory if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDeleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDeleteIfExists(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the directory. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndDeleteIfExists(IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndDeleteIfExists(IAsyncResult)
  id: EndDeleteIfExists(IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: EndDeleteIfExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndDeleteIfExists(IAsyncResult)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndDeleteIfExists
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 614
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns the result of an asynchronous request to delete the directory if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual bool EndDeleteIfExists(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndDeleteIfExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: IAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the directory did already exist and was deleted; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync
  id: DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync()
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 627
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to delete the directory if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync()
    content.vb: Public Overridable Function DeleteIfExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(CancellationToken)
  id: DeleteIfExistsAsync(CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 638
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to delete the directory if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(AccessCondition, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 651
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to delete the directory if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteIfExistsAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the directory. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 665
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to delete the directory if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the directory. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginExists(AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginExists(AsyncCallback,System.Object)
  id: BeginExists(AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginExists(AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginExists
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 696
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous request to check whether the directory exists.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginExists(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginExists(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginExists(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  id: BeginExists(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginExists(FileRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginExists(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginExists
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 710
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous request to check whether the directory exists.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginExists(FileRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginExists(options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndExists(IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndExists(IAsyncResult)
  id: EndExists(IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: EndExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndExists(IAsyncResult)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndExists
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 727
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns the asynchronous result of the request to check whether the directory exists.\r\n"
  example: []
  syntax:
    content: public virtual bool EndExists(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: IAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the directory exists; <code>false</code>, otherwise.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync
  id: ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync()
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 737
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to check whether the directory exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync()
    content.vb: Public Overridable Function ExistsAsync As Task(Of Boolean)
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(CancellationToken)
  id: ExistsAsync(CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 748
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to check whether the directory exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ExistsAsync(FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 760
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to check whether the directory exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ExistsAsync(options As FileRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ExistsAsync(FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ExistsAsync(Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 773
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous request to check whether the directory exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{System.Boolean}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginFetchAttributes(AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginFetchAttributes(AsyncCallback,System.Object)
  id: BeginFetchAttributes(AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginFetchAttributes(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginFetchAttributes(AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginFetchAttributes
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 804
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous operation to populate the directory's properties.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginFetchAttributes(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginFetchAttributes(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  id: BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginFetchAttributes(AccessCondition, FileRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginFetchAttributes
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 819
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous operation to populate the directory's properties and metadata.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginFetchAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginFetchAttributes(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndFetchAttributes(IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndFetchAttributes(IAsyncResult)
  id: EndFetchAttributes(IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: EndFetchAttributes(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndFetchAttributes(IAsyncResult)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndFetchAttributes
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 835
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nEnds an asynchronous operation to populate the directory's properties and metadata.\r\n"
  example: []
  syntax:
    content: public virtual void EndFetchAttributes(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndFetchAttributes(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: IAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync
  id: FetchAttributesAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync()
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 845
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to populate the directory's properties and metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync()
    content.vb: Public Overridable Function FetchAttributesAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(CancellationToken)
  id: FetchAttributesAsync(CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 856
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to populate the directory's properties and metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function FetchAttributesAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 869
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to populate the directory's properties and metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function FetchAttributesAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 883
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to populate the directory's properties and metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function FetchAttributesAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the file. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(Microsoft.WindowsAzure.Storage.File.FileContinuationToken,AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(Microsoft.WindowsAzure.Storage.File.FileContinuationToken,AsyncCallback,System.Object)
  id: BeginListFilesAndDirectoriesSegmented(Microsoft.WindowsAzure.Storage.File.FileContinuationToken,AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginListFilesAndDirectoriesSegmented(FileContinuationToken, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(Microsoft.WindowsAzure.Storage.File.FileContinuationToken, AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginListFilesAndDirectoriesSegmented
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 963
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous operation to return a result segment containing a collection of file items \r\nin the share.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginListFilesAndDirectoriesSegmented(FileContinuationToken currentToken, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginListFilesAndDirectoriesSegmented(currentToken As FileContinuationToken, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  id: BeginListFilesAndDirectoriesSegmented(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginListFilesAndDirectoriesSegmented(Nullable<Int32>, FileContinuationToken, FileRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.File.FileContinuationToken, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginListFilesAndDirectoriesSegmented
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 981
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous operation to return a result segment containing a collection of file items \r\nin the share.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginListFilesAndDirectoriesSegmented(int ? maxResults, FileContinuationToken currentToken, FileRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginListFilesAndDirectoriesSegmented(maxResults As Integer?, currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \r\nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginListFilesAndDirectoriesSegmented(System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.File.FileContinuationToken, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, AsyncCallback, System.Object)
  name.vb: BeginListFilesAndDirectoriesSegmented(Nullable(Of Int32), FileContinuationToken, FileRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndListFilesAndDirectoriesSegmented(IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndListFilesAndDirectoriesSegmented(IAsyncResult)
  id: EndListFilesAndDirectoriesSegmented(IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: EndListFilesAndDirectoriesSegmented(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndListFilesAndDirectoriesSegmented(IAsyncResult)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndListFilesAndDirectoriesSegmented
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 999
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nEnds an asynchronous operation to return a result segment containing a collection of file items \r\nin the share.\r\n"
  example: []
  syntax:
    content: public virtual FileResultSegment EndListFilesAndDirectoriesSegmented(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndListFilesAndDirectoriesSegmented(asyncResult As IAsyncResult) As FileResultSegment
    parameters:
    - id: asyncResult
      type: IAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the pending asynchronous operation.
    return:
      type: Microsoft.WindowsAzure.Storage.File.FileResultSegment
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.File.IListFileItem" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken)
  id: ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectoriesSegmentedAsync(FileContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListFilesAndDirectoriesSegmentedAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1012
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to return a result segment containing a collection of file items \r\nin the share.\r\n"
  example: []
  syntax:
    content: public virtual Task<FileResultSegment> ListFilesAndDirectoriesSegmentedAsync(FileContinuationToken currentToken)
    content.vb: Public Overridable Function ListFilesAndDirectoriesSegmentedAsync(currentToken As FileContinuationToken) As Task(Of FileResultSegment)
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
      description: A continuation token returned by a previous listing operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.File.FileResultSegment}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken,CancellationToken)
  id: ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectoriesSegmentedAsync(FileContinuationToken, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(Microsoft.WindowsAzure.Storage.File.FileContinuationToken, CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListFilesAndDirectoriesSegmentedAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1025
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to return a result segment containing a collection of file items \r\nin the share.\r\n"
  example: []
  syntax:
    content: public virtual Task<FileResultSegment> ListFilesAndDirectoriesSegmentedAsync(FileContinuationToken currentToken, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ListFilesAndDirectoriesSegmentedAsync(currentToken As FileContinuationToken, cancellationToken As CancellationToken) As Task(Of FileResultSegment)
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.File.FileResultSegment}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectoriesSegmentedAsync(Nullable<Int32>, FileContinuationToken, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.File.FileContinuationToken, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListFilesAndDirectoriesSegmentedAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1041
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to return a result segment containing a collection of file items \r\nin the share.\r\n"
  example: []
  syntax:
    content: public virtual Task<FileResultSegment> ListFilesAndDirectoriesSegmentedAsync(int ? maxResults, FileContinuationToken currentToken, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ListFilesAndDirectoriesSegmentedAsync(maxResults As Integer?, currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext) As Task(Of FileResultSegment)
    parameters:
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \r\nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.File.FileResultSegment}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.File.FileContinuationToken, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ListFilesAndDirectoriesSegmentedAsync(Nullable(Of Int32), FileContinuationToken, FileRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: ListFilesAndDirectoriesSegmentedAsync(System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.File.FileContinuationToken,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectoriesSegmentedAsync(Nullable<Int32>, FileContinuationToken, FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.File.FileContinuationToken, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListFilesAndDirectoriesSegmentedAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1058
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to return a result segment containing a collection of file items \r\nin the share.\r\n"
  example: []
  syntax:
    content: public virtual Task<FileResultSegment> ListFilesAndDirectoriesSegmentedAsync(int ? maxResults, FileContinuationToken currentToken, FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ListFilesAndDirectoriesSegmentedAsync(maxResults As Integer?, currentToken As FileContinuationToken, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of FileResultSegment)
    parameters:
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \r\nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task{Microsoft.WindowsAzure.Storage.File.FileResultSegment}
      description: A <see cref="!:Task<T>"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ListFilesAndDirectoriesSegmentedAsync(System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.File.FileContinuationToken, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  name.vb: ListFilesAndDirectoriesSegmentedAsync(Nullable(Of Int32), FileContinuationToken, FileRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginSetMetadata(AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginSetMetadata(AsyncCallback,System.Object)
  id: BeginSetMetadata(AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginSetMetadata(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginSetMetadata(AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginSetMetadata
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1089
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous operation to update the directory's metadata.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginSetMetadata(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginSetMetadata(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  id: BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: BeginSetMetadata(AccessCondition, FileRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginSetMetadata
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1104
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nBegins an asynchronous operation to update the directory's metadata.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginSetMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginSetMetadata(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the directory. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: An <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: AsyncCallback
      description: The callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndSetMetadata(IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndSetMetadata(IAsyncResult)
  id: EndSetMetadata(IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: EndSetMetadata(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.EndSetMetadata(IAsyncResult)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndSetMetadata
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1120
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nEnds an asynchronous operation to update the directory's metadata.\r\n"
  example: []
  syntax:
    content: public virtual void EndSetMetadata(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndSetMetadata(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: IAsyncResult
      description: An <see cref="!:IAsyncResult"></see> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync
  id: SetMetadataAsync
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: SetMetadataAsync()
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync()
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1130
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to update the directory's metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync()
    content.vb: Public Overridable Function SetMetadataAsync As Task
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(CancellationToken)
  id: SetMetadataAsync(CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1141
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to update the directory's metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetMetadataAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, FileRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1154
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to update the directory's metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetMetadataAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the directory. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.File.FileRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, FileRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.File.FileRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, CancellationToken)
  type: Method
  source:
    remote:
      path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/ClassLibraryCommon/File/CloudFileDirectory.cs
    startLine: 1168
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a task that performs an asynchronous operation to update the directory's metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(AccessCondition accessCondition, FileRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetMetadataAsync(accessCondition As AccessCondition, options As FileRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the directory. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: CancellationToken
      description: A <see cref="!:CancellationToken"></see> to observe while waiting for a task to complete.
    return:
      type: Task
      description: A <see cref="!:Task"></see> object that represents the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri)
  id: '#ctor(Uri)'
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CloudFileDirectory(Uri)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CloudFileDirectory(Uri)
  type: Constructor
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileDirectory\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the directory.\r\n"
  example: []
  syntax:
    content: public CloudFileDirectory(Uri directoryAbsoluteUri)
    content.vb: Public Sub New(directoryAbsoluteUri As Uri)
    parameters:
    - id: directoryAbsoluteUri
      type: Uri
      description: A <see cref="!:System.Uri"></see> object containing the absolute URI to the directory.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CloudFileDirectory(Uri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CloudFileDirectory(Uri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileDirectory\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the directory.\r\n"
  example: []
  syntax:
    content: public CloudFileDirectory(Uri directoryAbsoluteUri, StorageCredentials credentials)
    content.vb: Public Sub New(directoryAbsoluteUri As Uri, credentials As StorageCredentials)
    parameters:
    - id: directoryAbsoluteUri
      type: Uri
      description: A <see cref="!:System.Uri"></see> object containing the absolute URI to the directory.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: CloudFileDirectory(StorageUri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.CloudFileDirectory(Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileDirectory\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the directory.\r\n"
  example: []
  syntax:
    content: public CloudFileDirectory(StorageUri directoryAbsoluteUri, StorageCredentials credentials)
    content.vb: Public Sub New(directoryAbsoluteUri As StorageUri, credentials As StorageCredentials)
    parameters:
    - id: directoryAbsoluteUri
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <see cref="!:System.Uri"></see> object containing the absolute URI to the directory.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.ServiceClient
  type: Property
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceClient
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 99
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileClient\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the endpoint for the File service.\r\n"
  example: []
  syntax:
    content: >-
      public CloudFileClient ServiceClient

      {
          get;
      }
    content.vb: Public ReadOnly Property ServiceClient As CloudFileClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFileClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileClient" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Uri
  type: Property
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Uri
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets the directory's URI for the primary location.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Uri

      {
          get;
      }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: Uri
      description: A <see cref="!:System.Uri"></see> specifying the absolute URI to the directory at the primary location.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
  id: StorageUri
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
  type: Property
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageUri
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 117
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets the file directory's URIs for all locations.\r\n"
  example: []
  syntax:
    content: >-
      public StorageUri StorageUri

      {
          get;
      }
    content.vb: Public ReadOnly Property StorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri" data-throw-if-not-resolved="false"></xref> object containing the file directory's URIs for all locations.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Properties
  type: Property
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Properties
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 123
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties\" data-throw-if-not-resolved=\"false\"></xref> object that represents the directory's system properties.\r\n"
  example: []
  syntax:
    content: >-
      public FileDirectoryProperties Properties

      {
          get;
      }
    content.vb: Public ReadOnly Property Properties As FileDirectoryProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Metadata
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Metadata
  type: Property
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Metadata
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 129
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets the user-defined metadata for the directory.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> Metadata

      {
          get;
      }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: IDictionary{System.String,System.String}
      description: The directory's metadata, as a collection of name-value pairs.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share
  id: Share
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Share
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Share
  type: Property
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Share
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 135
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileShare\" data-throw-if-not-resolved=\"false\"></xref> object that represents the share for the directory.\r\n"
  example: []
  syntax:
    content: >-
      public CloudFileShare Share

      {
          get;
      }
    content.vb: Public ReadOnly Property Share As CloudFileShare
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFileShare
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileShare" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent
  id: Parent
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Parent
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Parent
  type: Property
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Parent
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 153
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileDirectory\" data-throw-if-not-resolved=\"false\"></xref> object that represents the parent directory for the directory.\r\n"
  example: []
  syntax:
    content: >-
      public CloudFileDirectory Parent

      {
          get;
      }
    content.vb: Public ReadOnly Property Parent As CloudFileDirectory
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileDirectory" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name
  commentId: P:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.Name
  type: Property
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 175
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nGets the name of the directory.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {
          get;
      }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the name of the directory.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference(System.String)
  id: GetFileReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: GetFileReference(String)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetFileReference(System.String)
  type: Method
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetFileReference
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 208
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFile\" data-throw-if-not-resolved=\"false\"></xref> object that represents a file in this directory.\r\n"
  example: []
  syntax:
    content: public CloudFile GetFileReference(string fileName)
    content.vb: Public Function GetFileReference(fileName As String) As CloudFile
    parameters:
    - id: fileName
      type: System.String
      description: A <see cref="!:System.String"></see> containing the name of the file.
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFile
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFile" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference(System.String)
  id: GetDirectoryReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  langs:
  - csharp
  - vb
  name: GetDirectoryReference(String)
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.GetDirectoryReference(System.String)
  type: Method
  source:
    remote:
      path: src/Common/File/CloudFileDirectory.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDirectoryReference
    path: src/Common/File/CloudFileDirectory.Common.cs
    startLine: 221
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File
  summary: "\r\nReturns a <xref href=\"Microsoft.WindowsAzure.Storage.File.CloudFileDirectory\" data-throw-if-not-resolved=\"false\"></xref> object that represents a subdirectory within this directory.\r\n"
  example: []
  syntax:
    content: public CloudFileDirectory GetDirectoryReference(string itemName)
    content.vb: Public Function GetDirectoryReference(itemName As String) As CloudFileDirectory
    parameters:
    - id: itemName
      type: System.String
      description: A <see cref="!:System.String"></see> containing the name of the subdirectory.
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
      description: A <xref href="Microsoft.WindowsAzure.Storage.File.CloudFileDirectory" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileShare
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: CloudFileShare
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileShare
- uid: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.File
  fullName: Microsoft.WindowsAzure.Storage.File
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.File.IListFileItem
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: IListFileItem
  fullName: Microsoft.WindowsAzure.Storage.File.IListFileItem
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: AsyncCallback
  isExternal: true
  name: AsyncCallback
  fullName: AsyncCallback
- uid: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: ICancellableAsyncResult
  fullName: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: FileRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.File.FileRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: IAsyncResult
  isExternal: true
  name: IAsyncResult
  fullName: IAsyncResult
- uid: Task
  isExternal: true
  name: Task
  fullName: Task
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  fullName: CancellationToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Task{System.Boolean}
  definition: Task`1
  name: Task<Boolean>
  fullName: Task<System.Boolean>
  fullname.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  fullName: Task<>
  fullname.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.AccessCondition
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: AccessCondition
  fullName: Microsoft.WindowsAzure.Storage.AccessCondition
- uid: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: FileContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.File.FileContinuationToken
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.File.FileResultSegment
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: FileResultSegment
  fullName: Microsoft.WindowsAzure.Storage.File.FileResultSegment
- uid: Task{Microsoft.WindowsAzure.Storage.File.FileResultSegment}
  definition: Task`1
  name: Task<FileResultSegment>
  fullName: Task<Microsoft.WindowsAzure.Storage.File.FileResultSegment>
  fullname.vb: Task(Of Microsoft.WindowsAzure.Storage.File.FileResultSegment)
  name.vb: Task(Of FileResultSegment)
  spec.csharp:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.File.FileResultSegment
    name: FileResultSegment
    fullName: Microsoft.WindowsAzure.Storage.File.FileResultSegment
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.File.FileResultSegment
    name: FileResultSegment
    fullName: Microsoft.WindowsAzure.Storage.File.FileResultSegment
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: CloudFileDirectory
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory
- uid: Uri
  isExternal: true
  name: Uri
  fullName: Uri
- uid: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth
  fullName: Microsoft.WindowsAzure.Storage.Auth
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileClient
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: CloudFileClient
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileClient
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileDirectory.StorageUri
- uid: Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: FileDirectoryProperties
  fullName: Microsoft.WindowsAzure.Storage.File.FileDirectoryProperties
- uid: IDictionary{System.String,System.String}
  definition: IDictionary`2
  name: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  fullname.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  fullName: IDictionary<, >
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: ', '
    fullName: ', '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.File.CloudFile
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: CloudFile
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFile
