items:
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  id: CloudBlobContainer
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(System.Uri)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDelete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDelete(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginExists(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Create(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Create(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Delete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndAcquireLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndBreakLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndChangeLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndCreate(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndCreateIfNotExists(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndDelete(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndDeleteIfExists(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndExists(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndFetchAttributes(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndGetBlobReferenceFromServer(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndGetPermissions(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndListBlobsSegmented(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndReleaseLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndRenewLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndSetMetadata(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndSetPermissions(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServer(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissions(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobs(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri
  langs:
  - csharp
  - vb
  name: CloudBlobContainer
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CloudBlobContainer
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRepresents a container in the Microsoft Azure Blob service.\r\n"
  example: []
  syntax:
    content: public class CloudBlobContainer
    content.vb: Public Class CloudBlobContainer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Create(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Create(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Create(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Create(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Create(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Create
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nCreates the container.\r\n"
  example: []
  syntax:
    content: public virtual void Create(BlobRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub Create(requestOptions As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Create(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Create(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Create(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Create(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Create(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Create
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 56
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nCreates the container and specifies the level of access to the container's data.\r\n"
  example: []
  syntax:
    content: public virtual void Create(BlobContainerPublicAccessType accessType, BlobRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub Create(accessType As BlobContainerPublicAccessType, requestOptions As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(System.AsyncCallback,System.Object)
  id: BeginCreate(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginCreate(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreate
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to create a container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreate(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreate(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginCreate(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginCreate(BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreate
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to create a container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreate(BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreate(options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginCreate(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginCreate(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreate(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreate
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to create a container and specify the level of access to the container's data.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreate(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreate(accessType As BlobContainerPublicAccessType, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndCreate(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndCreate(System.IAsyncResult)
  id: EndCreate(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndCreate(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndCreate(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndCreate
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 118
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to create a container.\r\n"
  example: []
  syntax:
    content: public virtual void EndCreate(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndCreate(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync
  id: CreateAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 128
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that creates a container.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync()
    content.vb: Public Overridable Function CreateAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(System.Threading.CancellationToken)
  id: CreateAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 139
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that creates a container.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 152
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that creates a container.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateAsync(accessType As BlobContainerPublicAccessType, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 166
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that creates a container and specifies the level of access to the container's data.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateAsync(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateAsync(accessType As BlobContainerPublicAccessType, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExists(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 180
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nCreates the container if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual bool CreateIfNotExists(BlobRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function CreateIfNotExists(requestOptions As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the container did not already exist and was created; otherwise <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExists(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 194
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nCreates the container if it does not already exist and specifies whether the container or its blobs are publicly accessible.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual bool CreateIfNotExists(BlobContainerPublicAccessType accessType, BlobRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function CreateIfNotExists(accessType As BlobContainerPublicAccessType, requestOptions As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and what level of access is to be allowed.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the container did not already exist and was created; otherwise <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(System.AsyncCallback,System.Object)
  id: BeginCreateIfNotExists(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginCreateIfNotExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateIfNotExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 241
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to create the container if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateIfNotExists(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateIfNotExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginCreateIfNotExists(BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateIfNotExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 256
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to create the container if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateIfNotExists(BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateIfNotExists(options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginCreateIfNotExists(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginCreateIfNotExists(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateIfNotExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 272
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to create the container if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateIfNotExists(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateIfNotExists(accessType As BlobContainerPublicAccessType, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and the level of access.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndCreateIfNotExists(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndCreateIfNotExists(System.IAsyncResult)
  id: EndCreateIfNotExists(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndCreateIfNotExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndCreateIfNotExists(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndCreateIfNotExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 376
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns the result of an asynchronous request to create the container if it does not already exist.\r\n"
  example: []
  syntax:
    content: public virtual bool EndCreateIfNotExists(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndCreateIfNotExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the container did not already exist and was created; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync
  id: CreateIfNotExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 390
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that creates the container if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync()
    content.vb: Public Overridable Function CreateIfNotExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(System.Threading.CancellationToken)
  id: CreateIfNotExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 402
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that creates the container if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 415
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that creates the container if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 429
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that creates the container if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 443
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that creates the container if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(accessType As BlobContainerPublicAccessType, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and the level of access.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CreateIfNotExistsAsync(BlobContainerPublicAccessType, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CreateIfNotExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateIfNotExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 458
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that creates the container if it does not already exist.\r\n"
  remarks: This API performs an existence check and therefore requires read permissions.
  example: []
  syntax:
    content: public virtual Task<bool> CreateIfNotExistsAsync(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateIfNotExistsAsync(accessType As BlobContainerPublicAccessType, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: accessType
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: An <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> object that specifies whether data in the container may be accessed publicly and the level of access.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Delete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Delete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Delete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Delete(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Delete(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Delete
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 472
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the container.\r\n"
  example: []
  syntax:
    content: public virtual void Delete(AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub Delete(accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDelete(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDelete(System.AsyncCallback,System.Object)
  id: BeginDelete(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginDelete(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDelete(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDelete
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 489
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to delete a container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDelete(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDelete(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDelete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDelete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDelete(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginDelete(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDelete(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDelete
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 504
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to delete a container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDelete(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDelete(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndDelete(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndDelete(System.IAsyncResult)
  id: EndDelete(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndDelete(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndDelete(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndDelete
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 520
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to delete a container.\r\n"
  example: []
  syntax:
    content: public virtual void EndDelete(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndDelete(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 530
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that deletes the container.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync()
    content.vb: Public Overridable Function DeleteAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(System.Threading.CancellationToken)
  id: DeleteAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 541
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that deletes the container.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 554
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that deletes the container.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 568
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that deletes the container.\r\n"
  example: []
  syntax:
    content: public virtual Task DeleteAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteIfExists(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 583
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDeletes the container if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual bool DeleteIfExists(AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function DeleteIfExists(accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the container did not already exist and was created; otherwise <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  id: BeginDeleteIfExists(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginDeleteIfExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleteIfExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 628
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to delete the container if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDeleteIfExists(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDeleteIfExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginDeleteIfExists(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleteIfExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 643
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to delete the container if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDeleteIfExists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDeleteIfExists(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndDeleteIfExists(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndDeleteIfExists(System.IAsyncResult)
  id: EndDeleteIfExists(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndDeleteIfExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndDeleteIfExists(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndDeleteIfExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 747
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns the result of an asynchronous request to delete the container if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual bool EndDeleteIfExists(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndDeleteIfExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the container did not already exist and was created; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync
  id: DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 760
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that deletes the container if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync()
    content.vb: Public Overridable Function DeleteIfExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(System.Threading.CancellationToken)
  id: DeleteIfExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 771
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that deletes the container if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 784
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that deletes the container if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DeleteIfExistsAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteIfExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 798
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that deletes the container if it already exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> DeleteIfExistsAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DeleteIfExistsAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServer(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServer(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetBlobReferenceFromServer(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReferenceFromServer(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServer(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlobReferenceFromServer
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 814
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a blob in this container.\r\n"
  example: []
  syntax:
    content: public virtual ICloudBlob GetBlobReferenceFromServer(string blobName, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function GetBlobReferenceFromServer(blobName As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As ICloudBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
      description: A reference to the blob.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String,System.AsyncCallback,System.Object)
  id: BeginGetBlobReferenceFromServer(System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginGetBlobReferenceFromServer(String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginGetBlobReferenceFromServer
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 831
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to get a reference to a blob in this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginGetBlobReferenceFromServer(string blobName, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginGetBlobReferenceFromServer(blobName As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginGetBlobReferenceFromServer(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginGetBlobReferenceFromServer(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetBlobReferenceFromServer(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginGetBlobReferenceFromServer
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 847
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to get a reference to a blob in this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginGetBlobReferenceFromServer(string blobName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginGetBlobReferenceFromServer(blobName As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndGetBlobReferenceFromServer(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndGetBlobReferenceFromServer(System.IAsyncResult)
  id: EndGetBlobReferenceFromServer(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndGetBlobReferenceFromServer(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndGetBlobReferenceFromServer(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndGetBlobReferenceFromServer
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 861
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to get a reference to a blob in this container.\r\n"
  example: []
  syntax:
    content: public virtual ICloudBlob EndGetBlobReferenceFromServer(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndGetBlobReferenceFromServer(asyncResult As IAsyncResult) As ICloudBlob
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
      description: A reference to the blob.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String)
  id: GetBlobReferenceFromServerAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReferenceFromServerAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlobReferenceFromServerAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 872
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that gets a reference to a blob in this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<ICloudBlob> GetBlobReferenceFromServerAsync(string blobName)
    content.vb: Public Overridable Function GetBlobReferenceFromServerAsync(blobName As String) As Task(Of ICloudBlob)
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,System.Threading.CancellationToken)
  id: GetBlobReferenceFromServerAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReferenceFromServerAsync(String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlobReferenceFromServerAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 884
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that gets a reference to a blob in this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<ICloudBlob> GetBlobReferenceFromServerAsync(string blobName, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetBlobReferenceFromServerAsync(blobName As String, cancellationToken As CancellationToken) As Task(Of ICloudBlob)
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReferenceFromServerAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlobReferenceFromServerAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 898
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that gets a reference to a blob in this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<ICloudBlob> GetBlobReferenceFromServerAsync(string blobName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function GetBlobReferenceFromServerAsync(blobName As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of ICloudBlob)
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: GetBlobReferenceFromServerAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReferenceFromServerAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReferenceFromServerAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlobReferenceFromServerAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 913
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that gets a reference to a blob in this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<ICloudBlob> GetBlobReferenceFromServerAsync(string blobName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetBlobReferenceFromServerAsync(blobName As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of ICloudBlob)
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobs(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobs(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ListBlobs(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobs(String, Boolean, BlobListingDetails, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobs(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobs
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 930
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns an enumerable collection of the blobs in the container that are retrieved lazily.\r\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IListBlobItem> ListBlobs(string prefix = null, bool useFlatBlobListing = false, BlobListingDetails blobListingDetails = BlobListingDetails.None, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function ListBlobs(prefix As String = Nothing, useFlatBlobListing As Boolean = False, blobListingDetails As BlobListingDetails = BlobListingDetails.None, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As IEnumerable(Of IListBlobItem)
    parameters:
    - id: prefix
      type: System.String
      description: A string containing the blob name prefix.
    - id: useFlatBlobListing
      type: System.Boolean
      description: A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.
    - id: blobListingDetails
      type: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails" data-throw-if-not-resolved="false"></xref> enumeration describing which items to include in the listing.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Blob.IListBlobItem}
      description: An enumerable collection of objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref> and are retrieved lazily.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  id: ListBlobsSegmented(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmented(BlobContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmented
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 945
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual BlobResultSegment ListBlobsSegmented(BlobContinuationToken currentToken)
    content.vb: Public Overridable Function ListBlobsSegmented(currentToken As BlobContinuationToken) As BlobResultSegment
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  id: ListBlobsSegmented(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmented(String, BlobContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmented
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 958
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual BlobResultSegment ListBlobsSegmented(string prefix, BlobContinuationToken currentToken)
    content.vb: Public Overridable Function ListBlobsSegmented(prefix As String, currentToken As BlobContinuationToken) As BlobResultSegment
    parameters:
    - id: prefix
      type: System.String
      description: A string containing the blob name prefix.
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ListBlobsSegmented(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmented(String, Boolean, BlobListingDetails, Nullable<Int32>, BlobContinuationToken, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmented
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 977
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual BlobResultSegment ListBlobsSegmented(string prefix, bool useFlatBlobListing, BlobListingDetails blobListingDetails, int ? maxResults, BlobContinuationToken currentToken, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ListBlobsSegmented(prefix As String, useFlatBlobListing As Boolean, blobListingDetails As BlobListingDetails, maxResults As Integer?, currentToken As BlobContinuationToken, options As BlobRequestOptions, operationContext As OperationContext) As BlobResultSegment
    parameters:
    - id: prefix
      type: System.String
      description: A string containing the blob name prefix.
    - id: useFlatBlobListing
      type: System.Boolean
      description: A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.
    - id: blobListingDetails
      type: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails" data-throw-if-not-resolved="false"></xref> enumeration describing which items to include in the listing.
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \r\nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmented(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ListBlobsSegmented(String, Boolean, BlobListingDetails, Nullable(Of Int32), BlobContinuationToken, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)
  id: BeginListBlobsSegmented(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginListBlobsSegmented(BlobContinuationToken, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginListBlobsSegmented
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1015
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to return a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginListBlobsSegmented(BlobContinuationToken currentToken, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginListBlobsSegmented(currentToken As BlobContinuationToken, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)
  id: BeginListBlobsSegmented(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginListBlobsSegmented(String, BlobContinuationToken, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginListBlobsSegmented
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1030
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to return a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginListBlobsSegmented(string prefix, BlobContinuationToken currentToken, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginListBlobsSegmented(prefix As String, currentToken As BlobContinuationToken, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: prefix
      type: System.String
      description: A string containing the blob name prefix.
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginListBlobsSegmented(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginListBlobsSegmented(String, Boolean, BlobListingDetails, Nullable<Int32>, BlobContinuationToken, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginListBlobsSegmented
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1051
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to return a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginListBlobsSegmented(string prefix, bool useFlatBlobListing, BlobListingDetails blobListingDetails, int ? maxResults, BlobContinuationToken currentToken, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginListBlobsSegmented(prefix As String, useFlatBlobListing As Boolean, blobListingDetails As BlobListingDetails, maxResults As Integer?, currentToken As BlobContinuationToken, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: prefix
      type: System.String
      description: A string containing the blob name prefix.
    - id: useFlatBlobListing
      type: System.Boolean
      description: A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.
    - id: blobListingDetails
      type: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails" data-throw-if-not-resolved="false"></xref> enumeration describing which items to include in the listing.
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \r\nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginListBlobsSegmented(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginListBlobsSegmented(String, Boolean, BlobListingDetails, Nullable(Of Int32), BlobContinuationToken, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndListBlobsSegmented(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndListBlobsSegmented(System.IAsyncResult)
  id: EndListBlobsSegmented(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndListBlobsSegmented(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndListBlobsSegmented(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndListBlobsSegmented
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1069
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to return a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual BlobResultSegment EndListBlobsSegmented(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndListBlobsSegmented(asyncResult As IAsyncResult) As BlobResultSegment
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
      description: A result segment containing objects that implement <xref href="Microsoft.WindowsAzure.Storage.Blob.IListBlobItem" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  id: ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(BlobContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmentedAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1081
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that returns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(BlobContinuationToken currentToken)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(currentToken As BlobContinuationToken) As Task(Of BlobResultSegment)
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)
  id: ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(BlobContinuationToken, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmentedAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1093
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that returns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(BlobContinuationToken currentToken, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(currentToken As BlobContinuationToken, cancellationToken As CancellationToken) As Task(Of BlobResultSegment)
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  id: ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(String, BlobContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmentedAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1105
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that returns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(string prefix, BlobContinuationToken currentToken)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(prefix As String, currentToken As BlobContinuationToken) As Task(Of BlobResultSegment)
    parameters:
    - id: prefix
      type: System.String
      description: A string containing the blob name prefix.
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)
  id: ListBlobsSegmentedAsync(System.String,Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(String, BlobContinuationToken, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmentedAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1118
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that returns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(string prefix, BlobContinuationToken currentToken, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(prefix As String, currentToken As BlobContinuationToken, cancellationToken As CancellationToken) As Task(Of BlobResultSegment)
    parameters:
    - id: prefix
      type: System.String
      description: A string containing the blob name prefix.
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable<Int32>, BlobContinuationToken, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmentedAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1137
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that returns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(string prefix, bool useFlatBlobListing, BlobListingDetails blobListingDetails, int ? maxResults, BlobContinuationToken currentToken, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(prefix As String, useFlatBlobListing As Boolean, blobListingDetails As BlobListingDetails, maxResults As Integer?, currentToken As BlobContinuationToken, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of BlobResultSegment)
    parameters:
    - id: prefix
      type: System.String
      description: A string containing the blob name prefix.
    - id: useFlatBlobListing
      type: System.Boolean
      description: A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.
    - id: blobListingDetails
      type: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails" data-throw-if-not-resolved="false"></xref> enumeration describing which items to include in the listing.
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \r\nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable(Of Int32), BlobContinuationToken, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ListBlobsSegmentedAsync(System.String,System.Boolean,Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable<Int32>, BlobContinuationToken, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlobsSegmentedAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1157
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that returns a result segment containing a collection of blob items \r\nin the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobResultSegment> ListBlobsSegmentedAsync(string prefix, bool useFlatBlobListing, BlobListingDetails blobListingDetails, int ? maxResults, BlobContinuationToken currentToken, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ListBlobsSegmentedAsync(prefix As String, useFlatBlobListing As Boolean, blobListingDetails As BlobListingDetails, maxResults As Integer?, currentToken As BlobContinuationToken, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of BlobResultSegment)
    parameters:
    - id: prefix
      type: System.String
      description: A string containing the blob name prefix.
    - id: useFlatBlobListing
      type: System.Boolean
      description: A boolean value that specifies whether to list blobs in a flat listing, or whether to list blobs hierarchically, by virtual directory.
    - id: blobListingDetails
      type: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails" data-throw-if-not-resolved="false"></xref> enumeration describing which items to include in the listing.
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: "A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the \r\nper-operation limit of 5000. If this value is <code>null</code>, the maximum possible number of results will be returned, up to 5000."
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
      description: A continuation token returned by a previous listing operation.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ListBlobsSegmentedAsync(System.String, System.Boolean, Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: ListBlobsSegmentedAsync(String, Boolean, BlobListingDetails, Nullable(Of Int32), BlobContinuationToken, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetPermissions(BlobContainerPermissions, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1172
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nSets permissions for the container.\r\n"
  example: []
  syntax:
    content: public virtual void SetPermissions(BlobContainerPermissions permissions, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub SetPermissions(permissions As BlobContainerPermissions, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The permissions to apply to the container.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,System.AsyncCallback,System.Object)
  id: BeginSetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginSetPermissions(BlobContainerPermissions, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginSetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1190
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to set permissions for the container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginSetPermissions(BlobContainerPermissions permissions, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginSetPermissions(permissions As BlobContainerPermissions, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The permissions to apply to the container.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginSetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginSetPermissions(BlobContainerPermissions, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetPermissions(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginSetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1206
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to set permissions for the container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginSetPermissions(BlobContainerPermissions permissions, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginSetPermissions(permissions As BlobContainerPermissions, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The permissions to apply to the container.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndSetPermissions(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndSetPermissions(System.IAsyncResult)
  id: EndSetPermissions(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndSetPermissions(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndSetPermissions(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndSetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1222
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns the result of an asynchronous request to set permissions for the container.\r\n"
  example: []
  syntax:
    content: public virtual void EndSetPermissions(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndSetPermissions(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(BlobContainerPermissions)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1233
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that sets permissions for the container.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(BlobContainerPermissions permissions)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As BlobContainerPermissions) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The permissions to apply to the container.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,System.Threading.CancellationToken)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(BlobContainerPermissions, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1245
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that sets permissions for the container.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(BlobContainerPermissions permissions, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As BlobContainerPermissions, cancellationToken As CancellationToken) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The permissions to apply to the container.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(BlobContainerPermissions, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1259
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that sets permissions for the container.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(BlobContainerPermissions permissions, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As BlobContainerPermissions, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The permissions to apply to the container.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetPermissionsAsync(BlobContainerPermissions, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetPermissionsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1274
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that sets permissions for the container.\r\n"
  example: []
  syntax:
    content: public virtual Task SetPermissionsAsync(BlobContainerPermissions permissions, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetPermissionsAsync(permissions As BlobContainerPermissions, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: permissions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The permissions to apply to the container.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissions(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissions(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetPermissions(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPermissions(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissions(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1289
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the permissions settings for the container.\r\n"
  example: []
  syntax:
    content: public virtual BlobContainerPermissions GetPermissions(AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function GetPermissions(accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As BlobContainerPermissions
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The container's permissions.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(System.AsyncCallback,System.Object)
  id: BeginGetPermissions(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginGetPermissions(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginGetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1306
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to get the permissions settings for the container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginGetPermissions(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginGetPermissions(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginGetPermissions(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginGetPermissions(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginGetPermissions(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginGetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1321
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to get the permissions settings for the container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginGetPermissions(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginGetPermissions(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndGetPermissions(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndGetPermissions(System.IAsyncResult)
  id: EndGetPermissions(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndGetPermissions(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndGetPermissions(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndGetPermissions
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1338
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns the asynchronous result of the request to get the permissions settings for the container.\r\n"
  example: []
  syntax:
    content: public virtual BlobContainerPermissions EndGetPermissions(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndGetPermissions(asyncResult As IAsyncResult) As BlobContainerPermissions
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
      description: The container's permissions.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync
  id: GetPermissionsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1348
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that gets the permissions settings for the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobContainerPermissions> GetPermissionsAsync()
    content.vb: Public Overridable Function GetPermissionsAsync As Task(Of BlobContainerPermissions)
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(System.Threading.CancellationToken)
  id: GetPermissionsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1359
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that gets the permissions settings for the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobContainerPermissions> GetPermissionsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetPermissionsAsync(cancellationToken As CancellationToken) As Task(Of BlobContainerPermissions)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1372
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that gets the permissions settings for the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobContainerPermissions> GetPermissionsAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function GetPermissionsAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of BlobContainerPermissions)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPermissionsAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPermissionsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1386
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that gets the permissions settings for the container.\r\n"
  example: []
  syntax:
    content: public virtual Task<BlobContainerPermissions> GetPermissionsAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function GetPermissionsAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of BlobContainerPermissions)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Exists(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Exists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1400
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChecks whether the container exists.\r\n"
  example: []
  syntax:
    content: public virtual bool Exists(BlobRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function Exists(requestOptions As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the container exists.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginExists(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginExists(System.AsyncCallback,System.Object)
  id: BeginExists(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginExists(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1428
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to check whether the container exists.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginExists(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginExists(BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1442
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous request to check whether the container exists.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginExists(BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginExists(options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndExists(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndExists(System.IAsyncResult)
  id: EndExists(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndExists(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndExists
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1473
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns the asynchronous result of the request to check whether the container exists.\r\n"
  example: []
  syntax:
    content: public virtual bool EndExists(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the container exists.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync
  id: ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1483
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that checks whether the container exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync()
    content.vb: Public Overridable Function ExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(System.Threading.CancellationToken)
  id: ExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1494
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that checks whether the container exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ExistsAsync(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1506
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that checks whether the container exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ExistsAsync(options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ExistsAsync(BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExistsAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1519
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that checks whether the container exists.\r\n"
  example: []
  syntax:
    content: public virtual Task<bool> ExistsAsync(BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ExistsAsync(options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: FetchAttributes(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributes
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1533
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRetrieves the container's attributes.\r\n"
  example: []
  syntax:
    content: public virtual void FetchAttributes(AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub FetchAttributes(accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(System.AsyncCallback,System.Object)
  id: BeginFetchAttributes(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginFetchAttributes(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginFetchAttributes
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1550
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to retrieve the container's attributes.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginFetchAttributes(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginFetchAttributes(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginFetchAttributes(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginFetchAttributes
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1565
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to retrieve the container's attributes.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginFetchAttributes(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginFetchAttributes(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndFetchAttributes(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndFetchAttributes(System.IAsyncResult)
  id: EndFetchAttributes(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndFetchAttributes(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndFetchAttributes(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndFetchAttributes
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1581
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to retrieve the container's attributes.\r\n"
  example: []
  syntax:
    content: public virtual void EndFetchAttributes(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndFetchAttributes(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync
  id: FetchAttributesAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1591
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that retrieves the container's attributes.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync()
    content.vb: Public Overridable Function FetchAttributesAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(System.Threading.CancellationToken)
  id: FetchAttributesAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1602
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that retrieves the container's attributes.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function FetchAttributesAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1615
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that retrieves the container's attributes.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function FetchAttributesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FetchAttributesAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1629
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that retrieves the container's attributes.\r\n"
  example: []
  syntax:
    content: public virtual Task FetchAttributesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function FetchAttributesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetMetadata(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadata
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1643
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nSets the container's user-defined metadata.\r\n"
  example: []
  syntax:
    content: public virtual void SetMetadata(AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub SetMetadata(accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(System.AsyncCallback,System.Object)
  id: BeginSetMetadata(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginSetMetadata(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginSetMetadata
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1660
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to set user-defined metadata on the container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginSetMetadata(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginSetMetadata(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginSetMetadata(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginSetMetadata
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1675
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to set user-defined metadata on the container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginSetMetadata(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginSetMetadata(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndSetMetadata(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndSetMetadata(System.IAsyncResult)
  id: EndSetMetadata(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndSetMetadata(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndSetMetadata(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndSetMetadata
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1691
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous request operation to set user-defined metadata on the container.\r\n"
  example: []
  syntax:
    content: public virtual void EndSetMetadata(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndSetMetadata(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync
  id: SetMetadataAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetMetadataAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1701
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that sets container's user-defined metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync()
    content.vb: Public Overridable Function SetMetadataAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(System.Threading.CancellationToken)
  id: SetMetadataAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1712
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that sets container's user-defined metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetMetadataAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1725
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that sets container's user-defined metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function SetMetadataAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetMetadataAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1739
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that sets container's user-defined metadata.\r\n"
  example: []
  syntax:
    content: public virtual Task SetMetadataAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function SetMetadataAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: AcquireLease(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLease(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AcquireLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1758
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAcquires a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual string AcquireLease(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function AcquireLease(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As String
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not null, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.String
      description: The ID of the acquired lease.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLease(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AcquireLease(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
  id: BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginAcquireLease(Nullable<TimeSpan>, String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable<System.TimeSpan>, System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAcquireLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1779
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to acquire a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAcquireLease(TimeSpan? leaseTime, string proposedLeaseId, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAcquireLease(leaseTime As TimeSpan?, proposedLeaseId As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not null, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable(Of System.TimeSpan), System.String, System.AsyncCallback, System.Object)
  name.vb: BeginAcquireLease(Nullable(Of TimeSpan), String, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginAcquireLease(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAcquireLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1798
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to acquire a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAcquireLease(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAcquireLease(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not null, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginAcquireLease(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginAcquireLease(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndAcquireLease(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndAcquireLease(System.IAsyncResult)
  id: EndAcquireLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndAcquireLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndAcquireLease(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndAcquireLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1815
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to acquire a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual string EndAcquireLease(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndAcquireLease(asyncResult As IAsyncResult) As String
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An IAsyncResult that references the pending asynchronous operation.
    return:
      type: System.String
      description: The ID of the acquired lease.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AcquireLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1829
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that acquires a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId = null)
    content.vb: Public Overridable Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String = Nothing) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not null, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AcquireLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1844
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that acquires a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not null, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, System.Threading.CancellationToken)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AcquireLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1861
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that acquires a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not null, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AcquireLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1879
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that acquires a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds. If <code>null</code>, an infinite lease will be acquired. If not null, this must be

        greater than zero.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease, or <code>null</code> if no lease ID is proposed.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: RenewLease(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1893
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRenews a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual void RenewLease(AccessCondition accessCondition, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub RenewLease(accessCondition As AccessCondition, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  id: BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginRenewLease(AccessCondition, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginRenewLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1911
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to renew a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginRenewLease(AccessCondition accessCondition, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginRenewLease(accessCondition As AccessCondition, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginRenewLease(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginRenewLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1926
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to renew a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginRenewLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginRenewLease(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndRenewLease(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndRenewLease(System.IAsyncResult)
  id: EndRenewLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndRenewLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndRenewLease(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndRenewLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1942
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to renew a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual void EndRenewLease(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndRenewLease(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An IAsyncResult that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1953
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that renews a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task RenewLeaseAsync(AccessCondition accessCondition)
    content.vb: Public Overridable Function RenewLeaseAsync(accessCondition As AccessCondition) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1965
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that renews a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task RenewLeaseAsync(AccessCondition accessCondition, CancellationToken cancellationToken)
    content.vb: Public Overridable Function RenewLeaseAsync(accessCondition As AccessCondition, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1978
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that renews a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task RenewLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function RenewLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 1992
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that renews a lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task RenewLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function RenewLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ChangeLease(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLease(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2008
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nChanges the lease ID on this container.\r\n"
  example: []
  syntax:
    content: public virtual string ChangeLease(string proposedLeaseId, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function ChangeLease(proposedLeaseId As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As String
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be null.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.String
      description: The new lease ID.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  id: BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginChangeLease(String, AccessCondition, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginChangeLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2027
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to change the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginChangeLease(string proposedLeaseId, AccessCondition accessCondition, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginChangeLease(proposedLeaseId As String, accessCondition As AccessCondition, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be null.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginChangeLease(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginChangeLease(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginChangeLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2043
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to change the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginChangeLease(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginChangeLease(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be null.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndChangeLease(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndChangeLease(System.IAsyncResult)
  id: EndChangeLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndChangeLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndChangeLease(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndChangeLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2059
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to change the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual string EndChangeLease(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndChangeLease(asyncResult As IAsyncResult) As String
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An IAsyncResult that references the pending asynchronous operation.
    return:
      type: System.String
      description: The new lease ID.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2071
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that changes the lease ID on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition)
    content.vb: Public Overridable Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be null.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2084
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that changes the lease ID on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be null.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2098
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that changes the lease ID on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be null.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2113
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that changes the lease ID on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease. This cannot be null.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ReleaseLease(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReleaseLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2127
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReleases the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual void ReleaseLease(AccessCondition accessCondition, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub ReleaseLease(accessCondition As AccessCondition, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  id: BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginReleaseLease(AccessCondition, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginReleaseLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2145
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to release the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginReleaseLease(AccessCondition accessCondition, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginReleaseLease(accessCondition As AccessCondition, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginReleaseLease(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginReleaseLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2160
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to release the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginReleaseLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginReleaseLease(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndReleaseLease(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndReleaseLease(System.IAsyncResult)
  id: EndReleaseLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndReleaseLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndReleaseLease(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndReleaseLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2176
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to release the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual void EndReleaseLease(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndReleaseLease(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An IAsyncResult that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReleaseLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2187
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that releases the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task ReleaseLeaseAsync(AccessCondition accessCondition)
    content.vb: Public Overridable Function ReleaseLeaseAsync(accessCondition As AccessCondition) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReleaseLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2199
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that releases the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task ReleaseLeaseAsync(AccessCondition accessCondition, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ReleaseLeaseAsync(accessCondition As AccessCondition, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReleaseLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2212
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that releases the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task ReleaseLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function ReleaseLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReleaseLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2226
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that releases the lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task ReleaseLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function ReleaseLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BreakLease(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLease(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BreakLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2244
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBreaks the current lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual TimeSpan BreakLease(TimeSpan? breakPeriod = null, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function BreakLease(breakPeriod As TimeSpan? = Nothing, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As TimeSpan
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time before the lease ends, to the second.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLease(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: BreakLease(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
  id: BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginBreakLease(Nullable<TimeSpan>, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable<System.TimeSpan>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginBreakLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2264
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to break the current lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginBreakLease(TimeSpan? breakPeriod, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginBreakLease(breakPeriod As TimeSpan?, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable(Of System.TimeSpan), System.AsyncCallback, System.Object)
  name.vb: BeginBreakLease(Nullable(Of TimeSpan), AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BeginBreakLease(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginBreakLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2282
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to break the current lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginBreakLease(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginBreakLease(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BeginBreakLease(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginBreakLease(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndBreakLease(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndBreakLease(System.IAsyncResult)
  id: EndBreakLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: EndBreakLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.EndBreakLease(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndBreakLease
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2299
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to break the current lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual TimeSpan EndBreakLease(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndBreakLease(asyncResult As IAsyncResult) As TimeSpan
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An IAsyncResult that references the pending asynchronous operation.
    return:
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time before the lease ends, to the second.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BreakLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2312
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that breaks the current lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod)
    content.vb: Public Overridable Function BreakLeaseAsync(breakPeriod As TimeSpan?) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable(Of System.TimeSpan))
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable<System.TimeSpan>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BreakLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2326
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that breaks the current lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, CancellationToken cancellationToken)
    content.vb: Public Overridable Function BreakLeaseAsync(breakPeriod As TimeSpan?, cancellationToken As CancellationToken) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), System.Threading.CancellationToken)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BreakLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2342
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that breaks the current lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function BreakLeaseAsync(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BreakLeaseAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudBlobContainer.cs
    startLine: 2359
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation that breaks the current lease on this container.\r\n"
  example: []
  syntax:
    content: public virtual Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function BreakLeaseAsync(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds. If <code>null</code>, the break period is the remainder of the current lease,

        or zero for infinite leases.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(System.Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CloudBlobContainer(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CloudBlobContainer(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public CloudBlobContainer(Uri containerAddress)
    content.vb: Public Sub New(containerAddress As Uri)
    parameters:
    - id: containerAddress
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> object specifying the absolute URI to the container.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CloudBlobContainer(Uri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CloudBlobContainer(System.Uri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public CloudBlobContainer(Uri containerAddress, StorageCredentials credentials)
    content.vb: Public Sub New(containerAddress As Uri, credentials As StorageCredentials)
    parameters:
    - id: containerAddress
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> object specifying the absolute URI to the container.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: CloudBlobContainer(StorageUri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.CloudBlobContainer(Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public CloudBlobContainer(StorageUri containerAddress, StorageCredentials credentials)
    content.vb: Public Sub New(containerAddress As StorageUri, credentials As StorageCredentials)
    parameters:
    - id: containerAddress
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> object specifying the absolute URI to the container.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.ServiceClient
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceClient
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the Blob service client for the container.\r\n"
  example: []
  syntax:
    content: >-
      public CloudBlobClient ServiceClient

      {

          get;

      }
    content.vb: Public ReadOnly Property ServiceClient As CloudBlobClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Uri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Uri
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the container's URI for the primary location.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Uri

      {

          get;

      }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the container at the primary location.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
  id: StorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageUri
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the container's URIs for both the primary and secondary locations.\r\n"
  example: []
  syntax:
    content: >-
      public StorageUri StorageUri

      {

          get;

      }
    content.vb: Public ReadOnly Property StorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri" data-throw-if-not-resolved="false"></xref> containing the container's URIs for both the primary and secondary locations.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Name
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 121
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the name of the container.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

      }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string containing the container name.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Metadata
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Metadata
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 127
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the container's metadata.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> Metadata

      {

          get;

      }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: An <xref href="System.Collections.Generic.IDictionary`2" data-throw-if-not-resolved="false"></xref> object containing the container's metadata.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.Properties
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Properties
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 133
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the container's system properties.\r\n"
  example: []
  syntax:
    content: >-
      public BlobContainerProperties Properties

      {

          get;

      }
    content.vb: Public ReadOnly Property Properties As BlobContainerProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 176
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the container.\r\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessBlobPolicy policy)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 188
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the container.\r\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessBlobPolicy policy, string groupPolicyIdentifier)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, groupPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: groupPolicyIdentifier
      type: System.String
      description: A container-level access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, System.String, System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>, Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetSharedAccessSignature
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 202
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a shared access signature for the container.\r\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessBlobPolicy policy, string groupPolicyIdentifier, SharedAccessProtocol? protocols, IPAddressOrRange ipAddressOrRange)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, groupPolicyIdentifier As String, protocols As SharedAccessProtocol?, ipAddressOrRange As IPAddressOrRange) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: groupPolicyIdentifier
      type: System.String
      description: A container-level access policy.
    - id: protocols
      type: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
      description: The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.
    - id: ipAddressOrRange
      type: Microsoft.WindowsAzure.Storage.IPAddressOrRange
      description: The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, System.String, System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol), Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  name.vb: GetSharedAccessSignature(SharedAccessBlobPolicy, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String)
  id: GetPageBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPageBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPageBlobReference
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 227
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a page blob in this container.\r\n"
  example: []
  syntax:
    content: public CloudPageBlob GetPageBlobReference(string blobName)
    content.vb: Public Function GetPageBlobReference(blobName As String) As CloudPageBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the page blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  id: GetPageBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetPageBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String, System.Nullable<System.DateTimeOffset>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPageBlobReference
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 238
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nReturns a reference to a page blob in this virtual directory.\r\n"
  example: []
  syntax:
    content: public CloudPageBlob GetPageBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetPageBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudPageBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the page blob.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetPageBlobReference(System.String, System.Nullable(Of System.DateTimeOffset))
  name.vb: GetPageBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String)
  id: GetBlockBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlockBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlockBlobReference
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 249
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a block blob in this container.\r\n"
  example: []
  syntax:
    content: public CloudBlockBlob GetBlockBlobReference(string blobName)
    content.vb: Public Function GetBlockBlobReference(blobName As String) As CloudBlockBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the block blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  id: GetBlockBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlockBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String, System.Nullable<System.DateTimeOffset>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlockBlobReference
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 260
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a block blob in this container.\r\n"
  example: []
  syntax:
    content: public CloudBlockBlob GetBlockBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetBlockBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudBlockBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the block blob.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlockBlobReference(System.String, System.Nullable(Of System.DateTimeOffset))
  name.vb: GetBlockBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String)
  id: GetAppendBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetAppendBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAppendBlobReference
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 271
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to an append blob in this container.\r\n"
  example: []
  syntax:
    content: public CloudAppendBlob GetAppendBlobReference(string blobName)
    content.vb: Public Function GetAppendBlobReference(blobName As String) As CloudAppendBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the append blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  id: GetAppendBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetAppendBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String, System.Nullable<System.DateTimeOffset>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAppendBlobReference
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 282
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to an append blob in this container.\r\n"
  example: []
  syntax:
    content: public CloudAppendBlob GetAppendBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetAppendBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudAppendBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the append blob.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetAppendBlobReference(System.String, System.Nullable(Of System.DateTimeOffset))
  name.vb: GetAppendBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String)
  id: GetBlobReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlobReference
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 293
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a blob in this container.\r\n"
  example: []
  syntax:
    content: public CloudBlob GetBlobReference(string blobName)
    content.vb: Public Function GetBlobReference(blobName As String) As CloudBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  id: GetBlobReference(System.String,System.Nullable{System.DateTimeOffset})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetBlobReference(String, Nullable<DateTimeOffset>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String, System.Nullable<System.DateTimeOffset>)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetBlobReference
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 304
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a blob in this container.\r\n"
  example: []
  syntax:
    content: public CloudBlob GetBlobReference(string blobName, DateTimeOffset? snapshotTime)
    content.vb: Public Function GetBlobReference(blobName As String, snapshotTime As DateTimeOffset?) As CloudBlob
    parameters:
    - id: blobName
      type: System.String
      description: A string containing the name of the blob.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlob" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetBlobReference(System.String, System.Nullable(Of System.DateTimeOffset))
  name.vb: GetBlobReference(String, Nullable(Of DateTimeOffset))
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference(System.String)
  id: GetDirectoryReference(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  langs:
  - csharp
  - vb
  name: GetDirectoryReference(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.GetDirectoryReference(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDirectoryReference
    path: src/Storage/Lib/Common/Blob/CloudBlobContainer.Common.cs
    startLine: 315
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a reference to a virtual blob directory beneath this container.\r\n"
  example: []
  syntax:
    content: public CloudBlobDirectory GetDirectoryReference(string relativeAddress)
    content.vb: Public Function GetDirectoryReference(relativeAddress As String) As CloudBlobDirectory
    parameters:
    - id: relativeAddress
      type: System.String
      description: A string containing the name of the virtual blob directory.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContainerPublicAccessType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  fullName: System.AsyncCallback
- uid: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: ICancellableAsyncResult
  fullName: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.AccessCondition
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: AccessCondition
  fullName: Microsoft.WindowsAzure.Storage.AccessCondition
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: ICloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ICloudBlob>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Blob.ICloudBlob>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Blob.ICloudBlob)
  name.vb: Task(Of ICloudBlob)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
    name: ICloudBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
    name: ICloudBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobListingDetails
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobListingDetails
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: IListBlobItem
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Blob.IListBlobItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IListBlobItem>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.Blob.IListBlobItem>
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.Storage.Blob.IListBlobItem)
  name.vb: IEnumerable(Of IListBlobItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
    name: IListBlobItem
    fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
    name: IListBlobItem
    fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContinuationToken
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobResultSegment
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BlobResultSegment>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment)
  name.vb: Task(Of BlobResultSegment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
    name: BlobResultSegment
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
    name: BlobResultSegment
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobResultSegment
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContainerPermissions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BlobContainerPermissions>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions)
  name.vb: Task(Of BlobContainerPermissions)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
    name: BlobContainerPermissions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
    name: BlobContainerPermissions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  - name: )
    fullName: )
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.TimeSpan}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TimeSpan>
  fullName: System.Threading.Tasks.Task<System.TimeSpan>
  fullname.vb: System.Threading.Tasks.Task(Of System.TimeSpan)
  name.vb: Task(Of TimeSpan)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobContainer
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth
  fullName: Microsoft.WindowsAzure.Storage.Auth
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer.StorageUri
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContainerProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: SharedAccessBlobPolicy
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SharedAccessProtocol>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol)
  name.vb: Nullable(Of SharedAccessProtocol)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.IPAddressOrRange
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IPAddressOrRange
  fullName: Microsoft.WindowsAzure.Storage.IPAddressOrRange
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudPageBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlockBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudAppendBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobDirectory
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobDirectory
