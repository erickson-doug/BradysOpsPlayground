items:
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters
  commentId: T:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters
  id: StorageAccountUpdateParameters
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.#ctor
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AccountType
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.CustomDomain
  - Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Tags
  langs:
  - csharp
  - vb
  name: StorageAccountUpdateParameters
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageAccountUpdateParameters
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nThe parameters to update on the account.\r\n"
  example: []
  syntax:
    content: public class StorageAccountUpdateParameters
    content.vb: Public Class StorageAccountUpdateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AccountType
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AccountType
  id: AccountType
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters
  langs:
  - csharp
  - vb
  name: AccountType
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AccountType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AccountType
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets or sets the account type. Note that StandardZRS and\r\nPremiumLRS accounts cannot be changed to other account types, and\r\nother account types cannot be changed to StandardZRS or PremiumLRS.\r\n"
  example: []
  syntax:
    content: >-
      public AccountType? AccountType

      {

          get;

          set;

      }
    content.vb: Public Property AccountType As AccountType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountType}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.CustomDomain
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.CustomDomain
  id: CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters
  langs:
  - csharp
  - vb
  name: CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.CustomDomain
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CustomDomain
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. User domain assigned to the storage account. Name is the\r\nCNAME source. Only one custom domain is supported per storage\r\naccount at this time. To clear the existing custom domain, use an\r\nempty string for the custom domain name property.\r\n"
  example: []
  syntax:
    content: >-
      public CustomDomain CustomDomain

      {

          get;

          set;

      }
    content.vb: Public Property CustomDomain As CustomDomain
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.CustomDomain
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Tags
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Tags
  id: Tags
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters
  langs:
  - csharp
  - vb
  name: Tags
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Tags
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Tags
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets or sets a list of key value pairs that describe the\r\nresource. These tags can be used in viewing and grouping this\r\nresource (across resource groups). A maximum of 15 tags can be\r\nprovided for a resource. Each tag must have a key no greater than\r\n128 characters and value no greater than 256 characters. This is a\r\nfull replace so all the existing tags will be replaced on Update.\r\n"
  example: []
  syntax:
    content: >-
      public IDictionary<string, string> Tags

      {

          get;

          set;

      }
    content.vb: Public Property Tags As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters
  langs:
  - csharp
  - vb
  name: StorageAccountUpdateParameters()
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.StorageAccountUpdateParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccountUpdateParameters.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nInitializes a new instance of the StorageAccountUpdateParameters\r\nclass.\r\n"
  example: []
  syntax:
    content: public StorageAccountUpdateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AccountType>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.AccountType>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccountType)
  name.vb: Nullable(Of AccountType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.AccountType
    name: AccountType
    fullName: Microsoft.Azure.Management.Storage.Models.AccountType
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.AccountType
    name: AccountType
    fullName: Microsoft.Azure.Management.Storage.Models.AccountType
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.CustomDomain
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
