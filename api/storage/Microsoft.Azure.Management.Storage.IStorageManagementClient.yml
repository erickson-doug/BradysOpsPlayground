items:
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient
  commentId: T:Microsoft.Azure.Management.Storage.IStorageManagementClient
  id: IStorageManagementClient
  parent: Microsoft.Azure.Management.Storage
  children:
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.ApiVersion
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.BaseUri
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.Credentials
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.GetCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationInitialTimeout
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.StorageAccounts
  - Microsoft.Azure.Management.Storage.IStorageManagementClient.Usage
  langs:
  - csharp
  - vb
  name: IStorageManagementClient
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient
  type: Interface
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IStorageManagementClient
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\r\nThe Storage Management Client.\r\n"
  example: []
  syntax:
    content: 'public interface IStorageManagementClient : IDisposable'
    content.vb: >-
      Public Interface IStorageManagementClient

          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ApiVersion
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\r\nGets the API version.\r\n"
  example: []
  syntax:
    content: >-
      string ApiVersion

      {

          get;

      }
    content.vb: ReadOnly Property ApiVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BaseUri
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\r\nGets the URI used as the base for all cloud service requests.\r\n"
  example: []
  syntax:
    content: >-
      Uri BaseUri

      {

          get;

      }
    content.vb: ReadOnly Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Credentials
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\r\nGets subscription credentials which uniquely identify Microsoft\r\nAzure subscription. The subscription ID forms part of the URI for\r\nevery service call.\r\n"
  example: []
  syntax:
    content: >-
      SubscriptionCloudCredentials Credentials

      {

          get;

      }
    content.vb: ReadOnly Property Credentials As SubscriptionCloudCredentials
    parameters: []
    return:
      type: SubscriptionCloudCredentials
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationInitialTimeout
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationInitialTimeout
  id: LongRunningOperationInitialTimeout
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationInitialTimeout
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationInitialTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationInitialTimeout
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\r\nGets or sets the initial timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      int LongRunningOperationInitialTimeout

      {

          get;

          set;

      }
    content.vb: Property LongRunningOperationInitialTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationRetryTimeout
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\r\nGets or sets the retry timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      int LongRunningOperationRetryTimeout

      {

          get;

          set;

      }
    content.vb: Property LongRunningOperationRetryTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.StorageAccounts
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.StorageAccounts
  id: StorageAccounts
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  langs:
  - csharp
  - vb
  name: StorageAccounts
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.StorageAccounts
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageAccounts
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\r\nOperations for managing storage accounts.\r\n"
  example: []
  syntax:
    content: >-
      IStorageAccountOperations StorageAccounts

      {

          get;

      }
    content.vb: ReadOnly Property StorageAccounts As IStorageAccountOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.IStorageAccountOperations
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.Usage
  commentId: P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Usage
  id: Usage
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  langs:
  - csharp
  - vb
  name: Usage
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.Usage
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Usage
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\r\nOperations for listing usage.\r\n"
  example: []
  syntax:
    content: >-
      IUsageOperations Usage

      {

          get;

      }
    content.vb: ReadOnly Property Usage As IUsageOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.IUsageOperations
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Azure.Management.Storage.IStorageManagementClient.GetCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Storage.IStorageManagementClient.GetCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetCreateOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Storage.IStorageManagementClient
  langs:
  - csharp
  - vb
  name: GetCreateOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Storage.IStorageManagementClient.GetCreateOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetCreateOperationStatusAsync
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/IStorageManagementClient.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage
  summary: "\r\nThe Get Create Operation Status operation returns the status of the\r\nspecified create operation. After calling the asynchronous Begin\r\nCreate operation, you can call Get Create Operation Status to\r\ndetermine whether the operation has succeeded, failed, or is still\r\nin progress.\r\n"
  example: []
  syntax:
    content: Task<StorageAccountCreateResponse> GetCreateOperationStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Function GetCreateOperationStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of StorageAccountCreateResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nThe URL where the status of the long-running create operation can\r\nbe checked.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Storage.Models.StorageAccountCreateResponse}
      description: "\r\nThe Create storage account operation response.\r\n"
references:
- uid: Microsoft.Azure.Management.Storage
  isExternal: false
  name: Microsoft.Azure.Management.Storage
  fullName: Microsoft.Azure.Management.Storage
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: SubscriptionCloudCredentials
  isExternal: true
  name: SubscriptionCloudCredentials
  fullName: SubscriptionCloudCredentials
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Storage.IStorageAccountOperations
  parent: Microsoft.Azure.Management.Storage
  isExternal: false
  name: IStorageAccountOperations
  fullName: Microsoft.Azure.Management.Storage.IStorageAccountOperations
- uid: Microsoft.Azure.Management.Storage.IUsageOperations
  parent: Microsoft.Azure.Management.Storage
  isExternal: false
  name: IUsageOperations
  fullName: Microsoft.Azure.Management.Storage.IUsageOperations
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Storage.Models.StorageAccountCreateResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<StorageAccountCreateResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Storage.Models.StorageAccountCreateResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Storage.Models.StorageAccountCreateResponse)
  name.vb: Task(Of StorageAccountCreateResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateResponse
    name: StorageAccountCreateResponse
    fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateResponse
    name: StorageAccountCreateResponse
    fullName: Microsoft.Azure.Management.Storage.Models.StorageAccountCreateResponse
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
