items:
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount
  commentId: T:Microsoft.Azure.Management.Storage.Models.StorageAccount
  id: StorageAccount
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor(System.String)
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.AccountType
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary
  - Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary
  langs:
  - csharp
  - vb
  name: StorageAccount
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageAccount
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nThe storage account.\r\n"
  example: []
  syntax:
    content: 'public class StorageAccount : ResourceBaseExtended'
    content.vb: >-
      Public Class StorageAccount

          Inherits ResourceBaseExtended
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.AccountType
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.AccountType
  id: AccountType
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: AccountType
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.AccountType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AccountType
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the type of the storage account.\r\n"
  example: []
  syntax:
    content: >-
      public AccountType? AccountType

      {

          get;

          set;

      }
    content.vb: Public Property AccountType As AccountType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountType}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime
  id: CreationTime
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: CreationTime
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreationTime
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the creation date and time of the storage account in\r\nUTC.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? CreationTime

      {

          get;

          set;

      }
    content.vb: Public Property CreationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain
  id: CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CustomDomain
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the user assigned custom domain assigned to this\r\nstorage account.\r\n"
  example: []
  syntax:
    content: >-
      public CustomDomain CustomDomain

      {

          get;

          set;

      }
    content.vb: Public Property CustomDomain As CustomDomain
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.CustomDomain
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime
  id: LastGeoFailoverTime
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: LastGeoFailoverTime
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LastGeoFailoverTime
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the timestamp of the most recent instance of a\r\nfailover to the secondary location. Only the most recent timestamp\r\nis retained. This element is not returned if there has never been\r\na failover instance. Only available if the accountType is\r\nStandardGRS or StandardRAGRS.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? LastGeoFailoverTime

      {

          get;

          set;

      }
    content.vb: Public Property LastGeoFailoverTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints
  id: PrimaryEndpoints
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: PrimaryEndpoints
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PrimaryEndpoints
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the URLs that are used to perform a retrieval of a\r\npublic blob, queue or table object.Note that StandardZRS and\r\nPremiumLRS accounts only return the blob endpoint.\r\n"
  example: []
  syntax:
    content: >-
      public Endpoints PrimaryEndpoints

      {

          get;

          set;

      }
    content.vb: Public Property PrimaryEndpoints As Endpoints
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Endpoints
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation
  id: PrimaryLocation
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: PrimaryLocation
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PrimaryLocation
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the location of the primary for the storage account.\r\n"
  example: []
  syntax:
    content: >-
      public string PrimaryLocation

      {

          get;

          set;

      }
    content.vb: Public Property PrimaryLocation As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProvisioningState
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the status of the storage account at the time the\r\noperation was called.\r\n"
  example: []
  syntax:
    content: >-
      public ProvisioningState? ProvisioningState

      {

          get;

          set;

      }
    content.vb: Public Property ProvisioningState As ProvisioningState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints
  id: SecondaryEndpoints
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: SecondaryEndpoints
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SecondaryEndpoints
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the URLs that are used to perform a retrieval of a\r\npublic blob, queue or table object from the secondary location of\r\nthe storage account. Only available if the accountType is\r\nStandardRAGRS.\r\n"
  example: []
  syntax:
    content: >-
      public Endpoints SecondaryEndpoints

      {

          get;

          set;

      }
    content.vb: Public Property SecondaryEndpoints As Endpoints
    parameters: []
    return:
      type: Microsoft.Azure.Management.Storage.Models.Endpoints
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation
  id: SecondaryLocation
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: SecondaryLocation
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SecondaryLocation
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the location of the geo replicated secondary for the\r\nstorage account. Only available if the accountType is StandardGRS\r\nor StandardRAGRS.\r\n"
  example: []
  syntax:
    content: >-
      public string SecondaryLocation

      {

          get;

          set;

      }
    content.vb: Public Property SecondaryLocation As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary
  id: StatusOfPrimary
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: StatusOfPrimary
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StatusOfPrimary
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 152
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the status indicating whether the primary location\r\nof the storage account is available or unavailable.\r\n"
  example: []
  syntax:
    content: >-
      public AccountStatus? StatusOfPrimary

      {

          get;

          set;

      }
    content.vb: Public Property StatusOfPrimary As AccountStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary
  commentId: P:Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary
  id: StatusOfSecondary
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: StatusOfSecondary
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StatusOfSecondary
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 165
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the status indicating whether the secondary location\r\nof the storage account is available or unavailable. Only available\r\nif the accountType is StandardGRS or StandardRAGRS.\r\n"
  example: []
  syntax:
    content: >-
      public AccountStatus? StatusOfSecondary

      {

          get;

          set;

      }
    content.vb: Public Property StatusOfSecondary As AccountStatus?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: StorageAccount()
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StorageAccount()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 174
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nInitializes a new instance of the StorageAccount class.\r\n"
  example: []
  syntax:
    content: public StorageAccount()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor(System.String)
  commentId: M:Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.Management.Storage.Models.StorageAccount
  langs:
  - csharp
  - vb
  name: StorageAccount(String)
  fullName: Microsoft.Azure.Management.Storage.Models.StorageAccount.StorageAccount(System.String)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/StorageAccount.cs
    startLine: 182
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nInitializes a new instance of the StorageAccount class with\r\nrequired arguments.\r\n"
  example: []
  syntax:
    content: public StorageAccount(string location)
    content.vb: Public Sub New(location As String)
    parameters:
    - id: location
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AccountType>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.AccountType>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccountType)
  name.vb: Nullable(Of AccountType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.AccountType
    name: AccountType
    fullName: Microsoft.Azure.Management.Storage.Models.AccountType
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.AccountType
    name: AccountType
    fullName: Microsoft.Azure.Management.Storage.Models.AccountType
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Storage.Models.CustomDomain
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: CustomDomain
  fullName: Microsoft.Azure.Management.Storage.Models.CustomDomain
- uid: Microsoft.Azure.Management.Storage.Models.Endpoints
  parent: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Endpoints
  fullName: Microsoft.Azure.Management.Storage.Models.Endpoints
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ProvisioningState>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.ProvisioningState>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.ProvisioningState)
  name.vb: Nullable(Of ProvisioningState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.ProvisioningState
    name: ProvisioningState
    fullName: Microsoft.Azure.Management.Storage.Models.ProvisioningState
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.ProvisioningState
    name: ProvisioningState
    fullName: Microsoft.Azure.Management.Storage.Models.ProvisioningState
  - name: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AccountStatus>
  fullName: System.Nullable<Microsoft.Azure.Management.Storage.Models.AccountStatus>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.Storage.Models.AccountStatus)
  name.vb: Nullable(Of AccountStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Storage.Models.AccountStatus
    name: AccountStatus
    fullName: Microsoft.Azure.Management.Storage.Models.AccountStatus
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Storage.Models.AccountStatus
    name: AccountStatus
    fullName: Microsoft.Azure.Management.Storage.Models.AccountStatus
  - name: )
    fullName: )
