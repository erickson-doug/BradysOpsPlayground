items:
- uid: Microsoft.Azure.Management.Storage.Models.Endpoints
  commentId: T:Microsoft.Azure.Management.Storage.Models.Endpoints
  id: Endpoints
  parent: Microsoft.Azure.Management.Storage.Models
  children:
  - Microsoft.Azure.Management.Storage.Models.Endpoints.#ctor
  - Microsoft.Azure.Management.Storage.Models.Endpoints.Blob
  - Microsoft.Azure.Management.Storage.Models.Endpoints.File
  - Microsoft.Azure.Management.Storage.Models.Endpoints.Queue
  - Microsoft.Azure.Management.Storage.Models.Endpoints.Table
  langs:
  - csharp
  - vb
  name: Endpoints
  fullName: Microsoft.Azure.Management.Storage.Models.Endpoints
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Endpoints
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nThe URIs that are used to perform a retrieval of a public blob, queue\r\nor table object.\r\n"
  example: []
  syntax:
    content: public class Endpoints
    content.vb: Public Class Endpoints
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Storage.Models.Endpoints.Blob
  commentId: P:Microsoft.Azure.Management.Storage.Models.Endpoints.Blob
  id: Blob
  parent: Microsoft.Azure.Management.Storage.Models.Endpoints
  langs:
  - csharp
  - vb
  name: Blob
  fullName: Microsoft.Azure.Management.Storage.Models.Endpoints.Blob
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Blob
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the blob endpoint.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Blob

      {

          get;

          set;

      }
    content.vb: Public Property Blob As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.Endpoints.File
  commentId: P:Microsoft.Azure.Management.Storage.Models.Endpoints.File
  id: File
  parent: Microsoft.Azure.Management.Storage.Models.Endpoints
  langs:
  - csharp
  - vb
  name: File
  fullName: Microsoft.Azure.Management.Storage.Models.Endpoints.File
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: File
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the file endpoint.\r\n"
  example: []
  syntax:
    content: >-
      public Uri File

      {

          get;

          set;

      }
    content.vb: Public Property File As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.Endpoints.Queue
  commentId: P:Microsoft.Azure.Management.Storage.Models.Endpoints.Queue
  id: Queue
  parent: Microsoft.Azure.Management.Storage.Models.Endpoints
  langs:
  - csharp
  - vb
  name: Queue
  fullName: Microsoft.Azure.Management.Storage.Models.Endpoints.Queue
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Queue
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the queue endpoint.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Queue

      {

          get;

          set;

      }
    content.vb: Public Property Queue As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.Endpoints.Table
  commentId: P:Microsoft.Azure.Management.Storage.Models.Endpoints.Table
  id: Table
  parent: Microsoft.Azure.Management.Storage.Models.Endpoints
  langs:
  - csharp
  - vb
  name: Table
  fullName: Microsoft.Azure.Management.Storage.Models.Endpoints.Table
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Table
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nOptional. Gets the table endpoint.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Table

      {

          get;

          set;

      }
    content.vb: Public Property Table As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Storage.Models.Endpoints.#ctor
  commentId: M:Microsoft.Azure.Management.Storage.Models.Endpoints.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Storage.Models.Endpoints
  langs:
  - csharp
  - vb
  name: Endpoints()
  fullName: Microsoft.Azure.Management.Storage.Models.Endpoints.Endpoints()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Storage/StorageManagement/Generated/Models/Endpoints.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Storage
  namespace: Microsoft.Azure.Management.Storage.Models
  summary: "\r\nInitializes a new instance of the Endpoints class.\r\n"
  example: []
  syntax:
    content: public Endpoints()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Storage.Models
  isExternal: false
  name: Microsoft.Azure.Management.Storage.Models
  fullName: Microsoft.Azure.Management.Storage.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
