items:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  id: QueueErrorCodeStrings
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.InvalidMarker
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.InvalidParameter
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.MessageNotFound
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.MessageTooLarge
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.PopReceiptMismatch
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueAlreadyExists
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueBeingDeleted
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueDisabled
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueNotEmpty
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueNotFound
  langs:
  - csharp
  - vb
  name: QueueErrorCodeStrings
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  type: Class
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueueErrorCodeStrings
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nProvides error code strings that are specific to the Queue service.\r\n"
  example: []
  syntax:
    content: public class QueueErrorCodeStrings
    content.vb: Public Class QueueErrorCodeStrings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueNotFound
  commentId: F:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueNotFound
  id: QueueNotFound
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  langs:
  - csharp
  - vb
  name: QueueNotFound
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueNotFound
  type: Field
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueueNotFound
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nError code that may be returned when the specified queue was not found.\r\n"
  example: []
  syntax:
    content: public static readonly string QueueNotFound
    content.vb: Public Shared ReadOnly QueueNotFound As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueDisabled
  commentId: F:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueDisabled
  id: QueueDisabled
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  langs:
  - csharp
  - vb
  name: QueueDisabled
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueDisabled
  type: Field
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueueDisabled
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nError code that may be returned when the specified queue is disabled.\r\n"
  example: []
  syntax:
    content: public static readonly string QueueDisabled
    content.vb: Public Shared ReadOnly QueueDisabled As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueAlreadyExists
  commentId: F:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueAlreadyExists
  id: QueueAlreadyExists
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  langs:
  - csharp
  - vb
  name: QueueAlreadyExists
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueAlreadyExists
  type: Field
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueueAlreadyExists
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nError code that may be returned when the specified queue already exists.\r\n"
  example: []
  syntax:
    content: public static readonly string QueueAlreadyExists
    content.vb: Public Shared ReadOnly QueueAlreadyExists As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueNotEmpty
  commentId: F:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueNotEmpty
  id: QueueNotEmpty
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  langs:
  - csharp
  - vb
  name: QueueNotEmpty
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueNotEmpty
  type: Field
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueueNotEmpty
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nError code that may be returned when the specified queue is not empty.\r\n"
  example: []
  syntax:
    content: public static readonly string QueueNotEmpty
    content.vb: Public Shared ReadOnly QueueNotEmpty As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueBeingDeleted
  commentId: F:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueBeingDeleted
  id: QueueBeingDeleted
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  langs:
  - csharp
  - vb
  name: QueueBeingDeleted
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.QueueBeingDeleted
  type: Field
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueueBeingDeleted
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nError code that may be returned when the specified queue is being deleted.\r\n"
  example: []
  syntax:
    content: public static readonly string QueueBeingDeleted
    content.vb: Public Shared ReadOnly QueueBeingDeleted As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.PopReceiptMismatch
  commentId: F:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.PopReceiptMismatch
  id: PopReceiptMismatch
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  langs:
  - csharp
  - vb
  name: PopReceiptMismatch
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.PopReceiptMismatch
  type: Field
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PopReceiptMismatch
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nError code that may be returned when the specified pop receipt does not match.\r\n"
  example: []
  syntax:
    content: public static readonly string PopReceiptMismatch
    content.vb: Public Shared ReadOnly PopReceiptMismatch As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.InvalidParameter
  commentId: F:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.InvalidParameter
  id: InvalidParameter
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  langs:
  - csharp
  - vb
  name: InvalidParameter
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.InvalidParameter
  type: Field
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InvalidParameter
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nError code that may be returned when one or more request parameters are invalid.\r\n"
  example: []
  syntax:
    content: public static readonly string InvalidParameter
    content.vb: Public Shared ReadOnly InvalidParameter As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.MessageNotFound
  commentId: F:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.MessageNotFound
  id: MessageNotFound
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  langs:
  - csharp
  - vb
  name: MessageNotFound
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.MessageNotFound
  type: Field
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MessageNotFound
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nError code that may be returned when the specified message was not found.\r\n"
  example: []
  syntax:
    content: public static readonly string MessageNotFound
    content.vb: Public Shared ReadOnly MessageNotFound As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.MessageTooLarge
  commentId: F:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.MessageTooLarge
  id: MessageTooLarge
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  langs:
  - csharp
  - vb
  name: MessageTooLarge
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.MessageTooLarge
  type: Field
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MessageTooLarge
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nError code that may be returned when the specified message is too large.\r\n"
  example: []
  syntax:
    content: public static readonly string MessageTooLarge
    content.vb: Public Shared ReadOnly MessageTooLarge As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.InvalidMarker
  commentId: F:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.InvalidMarker
  id: InvalidMarker
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings
  langs:
  - csharp
  - vb
  name: InvalidMarker
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueErrorCodeStrings.InvalidMarker
  type: Field
  source:
    remote:
      path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InvalidMarker
    path: src/Storage/Common/Queue/Protocol/QueueErrorCodeStrings.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nError code that may be returned when the specified marker is invalid.\r\n"
  example: []
  syntax:
    content: public static readonly string InvalidMarker
    content.vb: Public Shared ReadOnly InvalidMarker As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
