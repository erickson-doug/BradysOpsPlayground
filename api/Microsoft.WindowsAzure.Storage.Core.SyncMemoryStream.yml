items:
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  commentId: T:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  id: SyncMemoryStream
  parent: Microsoft.WindowsAzure.Storage.Core
  children:
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[])
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32)
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: SyncMemoryStream
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  type: Class
  source:
    remote:
      path: src/Storage/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SyncMemoryStream
    path: src/Storage/Common/Core/SyncMemoryStream.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\r\nThis class provides APM Read/Write overrides for memory stream to improve performance.\r\n"
  example: []
  syntax:
    content: 'public class SyncMemoryStream : MemoryStream, IDisposable'
    content.vb: >-
      Public Class SyncMemoryStream
          Inherits MemoryStream
          Implements IDisposable
  inheritance:
  - System.Object
  - System.IO.Stream
  - System.IO.MemoryStream
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.MemoryStream.Dispose(System.Boolean)
  - System.IO.MemoryStream.Flush
  - System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.MemoryStream.ReadByte
  - System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.MemoryStream.SetLength(System.Int64)
  - System.IO.MemoryStream.ToArray
  - System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.MemoryStream.WriteByte(System.Byte)
  - System.IO.MemoryStream.WriteTo(System.IO.Stream)
  - System.IO.MemoryStream.CanRead
  - System.IO.MemoryStream.CanSeek
  - System.IO.MemoryStream.CanWrite
  - System.IO.MemoryStream.Capacity
  - System.IO.MemoryStream.Length
  - System.IO.MemoryStream.Position
  - System.IO.Stream.Null
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.WriteTimeout
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: SyncMemoryStream()
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream()
  type: Constructor
  source:
    remote:
      path: src/Storage/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Common/Core/SyncMemoryStream.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\r\nInitializes a new instance of the SyncMemoryStream class with an expandable capacity initialized to zero.\r\n"
  example: []
  syntax:
    content: public SyncMemoryStream()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[])
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: SyncMemoryStream(Byte[])
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/Storage/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Common/Core/SyncMemoryStream.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\r\nInitializes a new non-resizable instance of the SyncMemoryStream class based on the specified byte array. \r\n"
  example: []
  syntax:
    content: public SyncMemoryStream(byte[] buffer)
    content.vb: Public Sub New(buffer As Byte())
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The array of unsigned bytes from which to create the current stream.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte())
  name.vb: SyncMemoryStream(Byte())
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Int32)'
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: SyncMemoryStream(Byte[], Int32)
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte[], System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Storage/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Common/Core/SyncMemoryStream.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\r\nInitializes a new non-resizable instance of the SyncMemoryStream class based on the specified region (index) of a byte array. \r\n"
  example: []
  syntax:
    content: public SyncMemoryStream(byte[] buffer, int index)
    content.vb: Public Sub New(buffer As Byte(), index As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The array of unsigned bytes from which to create the current stream.
    - id: index
      type: System.Int32
      description: The index into buffer at which the stream begins.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte(), System.Int32)
  name.vb: SyncMemoryStream(Byte(), Int32)
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: SyncMemoryStream(Byte[], Int32, Int32)
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte[], System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Storage/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Common/Core/SyncMemoryStream.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\r\nInitializes a new non-resizable instance of the SyncMemoryStream class based on the specified region (index) of a byte array. \r\n"
  example: []
  syntax:
    content: public SyncMemoryStream(byte[] buffer, int index, int count)
    content.vb: Public Sub New(buffer As Byte(), index As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The array of unsigned bytes from which to create the current stream.
    - id: index
      type: System.Int32
      description: The index into buffer at which the stream begins.
    - id: count
      type: System.Int32
      description: The length of the stream in bytes.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte(), System.Int32, System.Int32)
  name.vb: SyncMemoryStream(Byte(), Int32, Int32)
references:
- uid: Microsoft.WindowsAzure.Storage.Core
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Core
  fullName: Microsoft.WindowsAzure.Storage.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System.IO.MemoryStream.Dispose(System.Boolean)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.IO.MemoryStream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.MemoryStream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.MemoryStream.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.MemoryStream.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.Flush
  parent: System.IO.MemoryStream
  isExternal: true
  name: Flush()
  fullName: System.IO.MemoryStream.Flush()
  spec.csharp:
  - uid: System.IO.MemoryStream.Flush
    name: Flush
    fullName: System.IO.MemoryStream.Flush
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Flush
    name: Flush
    fullName: System.IO.MemoryStream.Flush
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.MemoryStream
  isExternal: true
  name: FlushAsync(CancellationToken)
  fullName: System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    fullName: System.IO.MemoryStream.FlushAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    fullName: System.IO.MemoryStream.FlushAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  fullName: System.IO.MemoryStream.Read(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.MemoryStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.MemoryStream.Read
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.MemoryStream.Read
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.MemoryStream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.MemoryStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullname.vb: System.IO.MemoryStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.MemoryStream.ReadAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.MemoryStream.ReadAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.ReadByte
  parent: System.IO.MemoryStream
  isExternal: true
  name: ReadByte()
  fullName: System.IO.MemoryStream.ReadByte()
  spec.csharp:
  - uid: System.IO.MemoryStream.ReadByte
    name: ReadByte
    fullName: System.IO.MemoryStream.ReadByte
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.ReadByte
    name: ReadByte
    fullName: System.IO.MemoryStream.ReadByte
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.MemoryStream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.MemoryStream.Seek
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.MemoryStream.Seek
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.SetLength(System.Int64)
  parent: System.IO.MemoryStream
  isExternal: true
  name: SetLength(Int64)
  fullName: System.IO.MemoryStream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.MemoryStream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.MemoryStream.SetLength
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.MemoryStream.SetLength
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.ToArray
  parent: System.IO.MemoryStream
  isExternal: true
  name: ToArray()
  fullName: System.IO.MemoryStream.ToArray()
  spec.csharp:
  - uid: System.IO.MemoryStream.ToArray
    name: ToArray
    fullName: System.IO.MemoryStream.ToArray
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.ToArray
    name: ToArray
    fullName: System.IO.MemoryStream.ToArray
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  fullName: System.IO.MemoryStream.Write(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.MemoryStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.MemoryStream.Write
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.MemoryStream.Write
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.MemoryStream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.MemoryStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullname.vb: System.IO.MemoryStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.MemoryStream.WriteAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.MemoryStream.WriteAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.WriteByte(System.Byte)
  parent: System.IO.MemoryStream
  isExternal: true
  name: WriteByte(Byte)
  fullName: System.IO.MemoryStream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.MemoryStream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.MemoryStream.WriteByte
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.MemoryStream.WriteByte
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.WriteTo(System.IO.Stream)
  parent: System.IO.MemoryStream
  isExternal: true
  name: WriteTo(Stream)
  fullName: System.IO.MemoryStream.WriteTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.MemoryStream.WriteTo(System.IO.Stream)
    name: WriteTo
    fullName: System.IO.MemoryStream.WriteTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.WriteTo(System.IO.Stream)
    name: WriteTo
    fullName: System.IO.MemoryStream.WriteTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.MemoryStream.CanRead
  parent: System.IO.MemoryStream
  isExternal: true
  name: CanRead
  fullName: System.IO.MemoryStream.CanRead
- uid: System.IO.MemoryStream.CanSeek
  parent: System.IO.MemoryStream
  isExternal: true
  name: CanSeek
  fullName: System.IO.MemoryStream.CanSeek
- uid: System.IO.MemoryStream.CanWrite
  parent: System.IO.MemoryStream
  isExternal: true
  name: CanWrite
  fullName: System.IO.MemoryStream.CanWrite
- uid: System.IO.MemoryStream.Capacity
  parent: System.IO.MemoryStream
  isExternal: true
  name: Capacity
  fullName: System.IO.MemoryStream.Capacity
- uid: System.IO.MemoryStream.Length
  parent: System.IO.MemoryStream
  isExternal: true
  name: Length
  fullName: System.IO.MemoryStream.Length
- uid: System.IO.MemoryStream.Position
  parent: System.IO.MemoryStream
  isExternal: true
  name: Position
  fullName: System.IO.MemoryStream.Position
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: true
  name: Null
  fullName: System.IO.Stream.Null
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream, Int32)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32, CancellationToken)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: true
  name: Dispose()
  fullName: System.IO.Stream.Dispose()
  spec.csharp:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: true
  name: FlushAsync()
  fullName: System.IO.Stream.FlushAsync()
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: ReadAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: WriteAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: true
  name: CanTimeout
  fullName: System.IO.Stream.CanTimeout
- uid: System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: true
  name: ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
- uid: System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: true
  name: WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
