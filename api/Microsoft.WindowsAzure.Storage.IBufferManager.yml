items:
- uid: Microsoft.WindowsAzure.Storage.IBufferManager
  commentId: T:Microsoft.WindowsAzure.Storage.IBufferManager
  id: IBufferManager
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.IBufferManager.GetDefaultBufferSize
  - Microsoft.WindowsAzure.Storage.IBufferManager.ReturnBuffer(System.Byte[])
  - Microsoft.WindowsAzure.Storage.IBufferManager.TakeBuffer(System.Int32)
  langs:
  - csharp
  - vb
  name: IBufferManager
  fullName: Microsoft.WindowsAzure.Storage.IBufferManager
  type: Interface
  source:
    remote:
      path: src/Storage/Common/IBufferManager.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IBufferManager
    path: src/Storage/Common/IBufferManager.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nAn interface that allows clients to provide a buffer manager to a given service client. This interface is patterned after\r\nthe <see href=\"http://msdn.microsoft.com/en-us/library/system.servicemodel.channels.buffermanager.aspx\">System.ServiceModel.Channels.BufferManager</see> class.\r\n"
  example: []
  syntax:
    content: public interface IBufferManager
    content.vb: Public Interface IBufferManager
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.Storage.IBufferManager.ReturnBuffer(System.Byte[])
  commentId: M:Microsoft.WindowsAzure.Storage.IBufferManager.ReturnBuffer(System.Byte[])
  id: ReturnBuffer(System.Byte[])
  parent: Microsoft.WindowsAzure.Storage.IBufferManager
  langs:
  - csharp
  - vb
  name: ReturnBuffer(Byte[])
  fullName: Microsoft.WindowsAzure.Storage.IBufferManager.ReturnBuffer(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Storage/Common/IBufferManager.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReturnBuffer
    path: src/Storage/Common/IBufferManager.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nReturns a buffer to the pool.\r\n"
  example: []
  syntax:
    content: void ReturnBuffer([ReadOnlyArray] byte[] buffer)
    content.vb: Sub ReturnBuffer(buffer As Byte())
    parameters:
    - id: buffer
      type: System.Byte[]
      description: A byte array specifying the buffer to return to the pool.
      attributes:
      - type: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
        ctor: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
        arguments: []
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Buffer reference cannot be null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Length of buffer does not match the pool's buffer length property.
  fullName.vb: Microsoft.WindowsAzure.Storage.IBufferManager.ReturnBuffer(System.Byte())
  name.vb: ReturnBuffer(Byte())
- uid: Microsoft.WindowsAzure.Storage.IBufferManager.TakeBuffer(System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.IBufferManager.TakeBuffer(System.Int32)
  id: TakeBuffer(System.Int32)
  parent: Microsoft.WindowsAzure.Storage.IBufferManager
  langs:
  - csharp
  - vb
  name: TakeBuffer(Int32)
  fullName: Microsoft.WindowsAzure.Storage.IBufferManager.TakeBuffer(System.Int32)
  type: Method
  source:
    remote:
      path: src/Storage/Common/IBufferManager.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TakeBuffer
    path: src/Storage/Common/IBufferManager.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets a buffer of the specified size or larger from the pool.\r\n"
  example: []
  syntax:
    content: byte[] TakeBuffer(int bufferSize)
    content.vb: Function TakeBuffer(bufferSize As Integer) As Byte()
    parameters:
    - id: bufferSize
      type: System.Int32
      description: The size, in bytes, of the requested buffer.
    return:
      type: System.Byte[]
      description: A byte array that is the requested size of the buffer.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value specified for <em>bufferSize</em> cannot be less than zero.
- uid: Microsoft.WindowsAzure.Storage.IBufferManager.GetDefaultBufferSize
  commentId: M:Microsoft.WindowsAzure.Storage.IBufferManager.GetDefaultBufferSize
  id: GetDefaultBufferSize
  parent: Microsoft.WindowsAzure.Storage.IBufferManager
  langs:
  - csharp
  - vb
  name: GetDefaultBufferSize()
  fullName: Microsoft.WindowsAzure.Storage.IBufferManager.GetDefaultBufferSize()
  type: Method
  source:
    remote:
      path: src/Storage/Common/IBufferManager.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDefaultBufferSize
    path: src/Storage/Common/IBufferManager.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets the size, in bytes, of the buffers managed by the given pool. Note that the buffer manager must return buffers of the exact size requested by the client.\r\n"
  example: []
  syntax:
    content: int GetDefaultBufferSize()
    content.vb: Function GetDefaultBufferSize As Integer
    return:
      type: System.Int32
      description: The size, in bytes, of the buffers managed by the given pool.
references:
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.ArgumentNullException
- uid: System.ArgumentException
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.ArgumentOutOfRangeException
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System
  isExternal: false
  name: System
  fullName: System
