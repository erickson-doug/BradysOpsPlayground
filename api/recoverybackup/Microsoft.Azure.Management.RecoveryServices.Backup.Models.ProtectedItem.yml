items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem
  id: ProtectedItem
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.#ctor
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.BackupManagementType
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.LastRecoveryPoint
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.PolicyId
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.SourceResourceId
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.WorkloadType
  langs:
  - csharp
  - vb
  name: ProtectedItem
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProtectedItem
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nBase class for protected item. Workload-specific protected items are\r\nderived from this class.\r\n"
  example: []
  syntax:
    content: 'public class ProtectedItem : ProtectedItemBase'
    content.vb: >-
      Public Class ProtectedItem

          Inherits ProtectedItemBase
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemBase
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.BackupManagementType
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.BackupManagementType
  id: BackupManagementType
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem
  langs:
  - csharp
  - vb
  name: BackupManagementType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.BackupManagementType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BackupManagementType
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Type of backup managmenent for the protected item.\r\n"
  example: []
  syntax:
    content: >-
      public string BackupManagementType

      {

          get;

          set;

      }
    content.vb: Public Property BackupManagementType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.LastRecoveryPoint
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.LastRecoveryPoint
  id: LastRecoveryPoint
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem
  langs:
  - csharp
  - vb
  name: LastRecoveryPoint
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.LastRecoveryPoint
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LastRecoveryPoint
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Timestamp when the last (latest) recovery point was\r\ncreated for this protected item.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? LastRecoveryPoint

      {

          get;

          set;

      }
    content.vb: Public Property LastRecoveryPoint As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.PolicyId
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.PolicyId
  id: PolicyId
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem
  langs:
  - csharp
  - vb
  name: PolicyId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.PolicyId
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PolicyId
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. ID of the protection policy with which this protected\r\nitem is protected.\r\n"
  example: []
  syntax:
    content: >-
      public string PolicyId

      {

          get;

          set;

      }
    content.vb: Public Property PolicyId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.SourceResourceId
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.SourceResourceId
  id: SourceResourceId
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem
  langs:
  - csharp
  - vb
  name: SourceResourceId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.SourceResourceId
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SourceResourceId
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. ARM ID of the resource to be protected.\r\n"
  example: []
  syntax:
    content: >-
      public string SourceResourceId

      {

          get;

          set;

      }
    content.vb: Public Property SourceResourceId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.WorkloadType
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.WorkloadType
  id: WorkloadType
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem
  langs:
  - csharp
  - vb
  name: WorkloadType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.WorkloadType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WorkloadType
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Type of workload this item represents. Possible values:\r\nVM, FileFolder.\r\n"
  example: []
  syntax:
    content: >-
      public string WorkloadType

      {

          get;

          set;

      }
    content.vb: Public Property WorkloadType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.#ctor
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem
  langs:
  - csharp
  - vb
  name: ProtectedItem()
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItem.ProtectedItem()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/ProtectedItem.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nInitializes a new instance of the ProtectedItem class.\r\n"
  example: []
  syntax:
    content: public ProtectedItem()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemBase
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: ProtectedItemBase
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.ProtectedItemBase
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
