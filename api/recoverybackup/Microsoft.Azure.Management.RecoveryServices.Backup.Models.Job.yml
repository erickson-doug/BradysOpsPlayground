items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  id: Job
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.#ctor
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.ActivityId
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.BackupManagementType
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.EndTime
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.EntityFriendlyName
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.Operation
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.StartTime
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.Status
  langs:
  - csharp
  - vb
  name: Job
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Job
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nDefines some workload agnostic properties for a job.\r\n"
  example: []
  syntax:
    content: 'public class Job : JobBase'
    content.vb: >-
      Public Class Job

          Inherits JobBase
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobBase
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.ActivityId
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.ActivityId
  id: ActivityId
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  langs:
  - csharp
  - vb
  name: ActivityId
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.ActivityId
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ActivityId
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Activity ID of the job.\r\n"
  example: []
  syntax:
    content: >-
      public string ActivityId

      {

          get;

          set;

      }
    content.vb: Public Property ActivityId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.BackupManagementType
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.BackupManagementType
  id: BackupManagementType
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  langs:
  - csharp
  - vb
  name: BackupManagementType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.BackupManagementType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BackupManagementType
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Type of backup management for the item in whose context\r\nthe job is executing.\r\n"
  example: []
  syntax:
    content: >-
      public string BackupManagementType

      {

          get;

          set;

      }
    content.vb: Public Property BackupManagementType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.EndTime
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.EndTime
  id: EndTime
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  langs:
  - csharp
  - vb
  name: EndTime
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.EndTime
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndTime
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Timestamp when this job ended its execution (if this job\r\nalready completed its execution).\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? EndTime

      {

          get;

          set;

      }
    content.vb: Public Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.EntityFriendlyName
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.EntityFriendlyName
  id: EntityFriendlyName
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  langs:
  - csharp
  - vb
  name: EntityFriendlyName
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.EntityFriendlyName
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EntityFriendlyName
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Friendly name of the entity on which the current job is\r\nbeing executed.\r\n"
  example: []
  syntax:
    content: >-
      public string EntityFriendlyName

      {

          get;

          set;

      }
    content.vb: Public Property EntityFriendlyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.Operation
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.Operation
  id: Operation
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  langs:
  - csharp
  - vb
  name: Operation
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.Operation
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Operation
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Name of the operation created by this job.\r\n"
  example: []
  syntax:
    content: >-
      public string Operation

      {

          get;

          set;

      }
    content.vb: Public Property Operation As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.StartTime
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.StartTime
  id: StartTime
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  langs:
  - csharp
  - vb
  name: StartTime
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.StartTime
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartTime
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Timestamp when this job started its execution.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime StartTime

      {

          get;

          set;

      }
    content.vb: Public Property StartTime As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.Status
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.Status
  id: Status
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  langs:
  - csharp
  - vb
  name: Status
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.Status
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Status
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Status of this job.\r\n"
  example: []
  syntax:
    content: >-
      public string Status

      {

          get;

          set;

      }
    content.vb: Public Property Status As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.#ctor
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job
  langs:
  - csharp
  - vb
  name: Job()
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.Job.Job()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/Job.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nInitializes a new instance of the Job class.\r\n"
  example: []
  syntax:
    content: public Job()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobBase
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: JobBase
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.JobBase
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
