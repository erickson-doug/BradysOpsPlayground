items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest
  id: PaginationRequest
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.#ctor
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.SkipToken
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.Top
  langs:
  - csharp
  - vb
  name: PaginationRequest
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/PaginationRequest.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PaginationRequest
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/PaginationRequest.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nParameters that define the pagination behavior of the list API\r\nresponses.\r\n"
  example: []
  syntax:
    content: public class PaginationRequest
    content.vb: Public Class PaginationRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.SkipToken
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.SkipToken
  id: SkipToken
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest
  langs:
  - csharp
  - vb
  name: SkipToken
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.SkipToken
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/PaginationRequest.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SkipToken
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/PaginationRequest.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. If the page limit is reached while returning the objects,\r\nthis property will act as the continuation token.Please make the\r\nnext call on this URL to get the next set of objects. Once all\r\nobjects are returned, this will be null.\r\n"
  example: []
  syntax:
    content: >-
      public string SkipToken

      {

          get;

          set;

      }
    content.vb: Public Property SkipToken As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.Top
  commentId: P:Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.Top
  id: Top
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest
  langs:
  - csharp
  - vb
  name: Top
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.Top
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/PaginationRequest.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Top
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/PaginationRequest.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOptional. Specifies the number of results to return. Will return\r\ntop n elements if n is set in this property.\r\n"
  example: []
  syntax:
    content: >-
      public string Top

      {

          get;

          set;

      }
    content.vb: Public Property Top As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.#ctor
  commentId: M:Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest
  langs:
  - csharp
  - vb
  name: PaginationRequest()
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.PaginationRequest.PaginationRequest()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/PaginationRequest.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/PaginationRequest.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nInitializes a new instance of the PaginationRequest class.\r\n"
  example: []
  syntax:
    content: public PaginationRequest()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
