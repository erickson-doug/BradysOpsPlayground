items:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType
  commentId: T:Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType
  id: RecoveryType
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  children:
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.AlternateLocation
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.Invalid
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.OriginalLocation
  - Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.RestoreDisks
  langs:
  - csharp
  - vb
  name: RecoveryType
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/RecoveryType.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RecoveryType
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/RecoveryType.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nThe enum for all supported types of recovery.\r\n"
  example: []
  syntax:
    content: public class RecoveryType
    content.vb: Public Class RecoveryType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.Invalid
  commentId: F:Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.Invalid
  id: Invalid
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType
  langs:
  - csharp
  - vb
  name: Invalid
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.Invalid
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/RecoveryType.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Invalid
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/RecoveryType.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nInvalid RecoveryType of RestoreRequest.\r\n"
  example: []
  syntax:
    content: public const string Invalid = "Invalid"
    content.vb: Public Const Invalid As String = "Invalid"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.OriginalLocation
  commentId: F:Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.OriginalLocation
  id: OriginalLocation
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType
  langs:
  - csharp
  - vb
  name: OriginalLocation
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.OriginalLocation
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/RecoveryType.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OriginalLocation
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/RecoveryType.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nVM will be restored to the same resource name, resource group (or\r\ncloud service).\r\n"
  example: []
  syntax:
    content: public const string OriginalLocation = "OriginalLocation"
    content.vb: Public Const OriginalLocation As String = "OriginalLocation"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.AlternateLocation
  commentId: F:Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.AlternateLocation
  id: AlternateLocation
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType
  langs:
  - csharp
  - vb
  name: AlternateLocation
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.AlternateLocation
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/RecoveryType.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AlternateLocation
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/RecoveryType.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nVM will be restored to a user specified resource name, resource\r\ngroup (or cloud service).\r\n"
  example: []
  syntax:
    content: public const string AlternateLocation = "AlternateLocation"
    content.vb: Public Const AlternateLocation As String = "AlternateLocation"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.RestoreDisks
  commentId: F:Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.RestoreDisks
  id: RestoreDisks
  parent: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType
  langs:
  - csharp
  - vb
  name: RestoreDisks
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models.RecoveryType.RestoreDisks
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/RecoveryType.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RestoreDisks
    path: src/src/ResourceManagement/RecoveryServices.Backup/RecoveryServicesBackupManagement/Generated/Models/RecoveryType.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.RecoveryServices.Backup
  namespace: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  summary: "\r\nOnly the disks of the VM will be restored.\r\n"
  example: []
  syntax:
    content: public const string RestoreDisks = "RestoreDisks"
    content.vb: Public Const RestoreDisks As String = "RestoreDisks"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  isExternal: false
  name: Microsoft.Azure.Management.RecoveryServices.Backup.Models
  fullName: Microsoft.Azure.Management.RecoveryServices.Backup.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
