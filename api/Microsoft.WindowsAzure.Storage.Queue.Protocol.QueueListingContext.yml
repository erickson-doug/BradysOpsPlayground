items:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext
  id: QueueListingContext
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext.#ctor(System.String,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails)
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext.Include
  langs:
  - csharp
  - vb
  name: QueueListingContext
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext
  type: Class
  source:
    remote:
      path: src/Common/Queue/Protocol/QueueListingContext.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueueListingContext
    path: src/Common/Queue/Protocol/QueueListingContext.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nProvides a set of parameters for a queue listing operation.\r\n"
  example: []
  syntax:
    content: 'public sealed class QueueListingContext : ListingContext'
    content.vb: >-
      Public NotInheritable Class QueueListingContext
          Inherits ListingContext
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext
  inheritedMembers:
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext.Prefix
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext.MaxResults
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext.Marker
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext.#ctor(System.String,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext.#ctor(System.String,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails)
  id: '#ctor(System.String,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails)'
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext
  langs:
  - csharp
  - vb
  name: QueueListingContext(String, Nullable<Int32>, QueueListingDetails)
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext.QueueListingContext(System.String, System.Nullable<System.Int32>, Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails)
  type: Constructor
  source:
    remote:
      path: src/Common/Queue/Protocol/QueueListingContext.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Common/Queue/Protocol/QueueListingContext.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public QueueListingContext(string prefix, int ? maxResults, QueueListingDetails include)
    content.vb: Public Sub New(prefix As String, maxResults As Integer?, include As QueueListingDetails)
    parameters:
    - id: prefix
      type: System.String
      description: The queue prefix.
    - id: maxResults
      type: System.Nullable{System.Int32}
      description: The maximum number of results to return.
    - id: include
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails
      description: The include parameter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext.QueueListingContext(System.String, System.Nullable(Of System.Int32), Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails)
  name.vb: QueueListingContext(String, Nullable(Of Int32), QueueListingDetails)
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext.Include
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext.Include
  id: Include
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext
  langs:
  - csharp
  - vb
  name: Include
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext.Include
  type: Property
  source:
    remote:
      path: src/Common/Queue/Protocol/QueueListingContext.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Include
    path: src/Common/Queue/Protocol/QueueListingContext.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\r\nGets or sets the details for the listing operation, which indicates the types of data to include in the \r\nresponse.\r\n"
  example: []
  syntax:
    content: >-
      public QueueListingDetails Include

      {
          get;
          set;
      }
    content.vb: Public Property Include As QueueListingDetails
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails
      description: The details to include in the listing operation.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: ListingContext
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext.Prefix
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext
  isExternal: false
  name: Prefix
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext.Prefix
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext.MaxResults
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext
  isExternal: false
  name: MaxResults
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext.MaxResults
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext.Marker
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext
  isExternal: false
  name: Marker
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ListingContext.Marker
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Shared.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext
  isExternal: false
  name: QueueListingContext
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: QueueListingDetails
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
