items:
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  id: BlobContainerPermissions
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.#ctor
  - Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.PublicAccess
  - Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.SharedAccessPolicies
  langs:
  - csharp
  - vb
  name: BlobContainerPermissions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  type: Class
  source:
    remote:
      path: src/Storage/Common/Blob/BlobContainerPermissions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BlobContainerPermissions
    path: src/Storage/Common/Blob/BlobContainerPermissions.cs
    startLine: 22
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRepresents the permissions for a container.\r\n"
  example: []
  syntax:
    content: public sealed class BlobContainerPermissions
    content.vb: Public NotInheritable Class BlobContainerPermissions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  langs:
  - csharp
  - vb
  name: BlobContainerPermissions()
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.BlobContainerPermissions()
  type: Constructor
  source:
    remote:
      path: src/Storage/Common/Blob/BlobContainerPermissions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Common/Blob/BlobContainerPermissions.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public BlobContainerPermissions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.PublicAccess
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.PublicAccess
  id: PublicAccess
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  langs:
  - csharp
  - vb
  name: PublicAccess
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.PublicAccess
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/BlobContainerPermissions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PublicAccess
    path: src/Storage/Common/Blob/BlobContainerPermissions.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the public access setting for the container.\r\n"
  example: []
  syntax:
    content: >-
      public BlobContainerPublicAccessType PublicAccess

      {

          get;

          set;

      }
    content.vb: Public Property PublicAccess As BlobContainerPublicAccessType
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType" data-throw-if-not-resolved="false"></xref> enumeration value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.SharedAccessPolicies
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.SharedAccessPolicies
  id: SharedAccessPolicies
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  langs:
  - csharp
  - vb
  name: SharedAccessPolicies
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions.SharedAccessPolicies
  type: Property
  source:
    remote:
      path: src/Storage/Common/Blob/BlobContainerPermissions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SharedAccessPolicies
    path: src/Storage/Common/Blob/BlobContainerPermissions.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the set of shared access policies for the container.\r\n"
  example: []
  syntax:
    content: >-
      public SharedAccessBlobPolicies SharedAccessPolicies

      {

          get;

      }
    content.vb: Public ReadOnly Property SharedAccessPolicies As SharedAccessBlobPolicies
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicies
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicies" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContainerPermissions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPermissions
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContainerPublicAccessType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerPublicAccessType
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicies
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: SharedAccessBlobPolicies
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicies
