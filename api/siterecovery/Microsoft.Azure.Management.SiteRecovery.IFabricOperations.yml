items:
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  commentId: T:Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  id: IFabricOperations
  parent: Microsoft.Azure.Management.SiteRecovery
  children:
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginCreatingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginDeletingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginDeployProcessServerAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginPurgingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginReassociateGatewayAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginRenewCertificateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.CreateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.DeleteAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.DeployProcessServerAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetCreateStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetDeleteStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetDeployProcessServerStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetPurgeStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetReassociateGatewayStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetRenewCertificateStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.ListAsync(Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.PurgeAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.ReassociateGatewayAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.SiteRecovery.IFabricOperations.RenewCertificateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IFabricOperations
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  type: Interface
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IFabricOperations
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDefinition of fabric operations for the Site Recovery extension.\r\n"
  example: []
  syntax:
    content: public interface IFabricOperations
    content.vb: Public Interface IFabricOperations
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginCreatingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginCreatingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: BeginCreatingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: BeginCreatingAsync(String, FabricCreationInput, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginCreatingAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreatingAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nCreates a Fabric\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> BeginCreatingAsync(string fabricName, FabricCreationInput input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function BeginCreatingAsync(fabricName As String, input As FabricCreationInput, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput
      description: "\r\nInput to create fabric\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginDeletingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginDeletingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: BeginDeletingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: BeginDeletingAsync(String, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginDeletingAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeletingAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeletes a Fabric\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> BeginDeletingAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function BeginDeletingAsync(fabricName As String, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginDeployProcessServerAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginDeployProcessServerAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: BeginDeployProcessServerAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: BeginDeployProcessServerAsync(String, DeployProcessServerRequest, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginDeployProcessServerAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeployProcessServerAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeploy a Process Server.\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> BeginDeployProcessServerAsync(string fabricName, DeployProcessServerRequest input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function BeginDeployProcessServerAsync(fabricName As String, input As DeployProcessServerRequest, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest
      description: "\r\nInput to deploy a Process Server.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginPurgingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginPurgingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: BeginPurgingAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: BeginPurgingAsync(String, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginPurgingAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginPurgingAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPurges a Fabric\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> BeginPurgingAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function BeginPurgingAsync(fabricName As String, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginReassociateGatewayAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginReassociateGatewayAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: BeginReassociateGatewayAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: BeginReassociateGatewayAsync(String, FailoverProcessServerRequest, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginReassociateGatewayAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginReassociateGatewayAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPerforms reassociate gateway operation on a fabric.\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> BeginReassociateGatewayAsync(string fabricName, FailoverProcessServerRequest input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function BeginReassociateGatewayAsync(fabricName As String, input As FailoverProcessServerRequest, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest
      description: "\r\nInput to reassociate a gateway.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginRenewCertificateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginRenewCertificateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: BeginRenewCertificateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: BeginRenewCertificateAsync(String, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.BeginRenewCertificateAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginRenewCertificateAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 143
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nRenews certificates of a Fabric\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> BeginRenewCertificateAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function BeginRenewCertificateAsync(fabricName As String, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.CreateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.CreateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: CreateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: CreateAsync(String, FabricCreationInput, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.CreateAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 163
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nCreates a fabric\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> CreateAsync(string fabricName, FabricCreationInput input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function CreateAsync(fabricName As String, input As FabricCreationInput, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput
      description: "\r\nInput to create fabric\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.DeleteAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.DeleteAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: DeleteAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: DeleteAsync(String, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.DeleteAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 180
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeletes a fabric\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> DeleteAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function DeleteAsync(fabricName As String, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.DeployProcessServerAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.DeployProcessServerAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: DeployProcessServerAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: DeployProcessServerAsync(String, DeployProcessServerRequest, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.DeployProcessServerAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeployProcessServerAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeploy a Process Server.\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> DeployProcessServerAsync(string fabricName, DeployProcessServerRequest input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function DeployProcessServerAsync(fabricName As String, input As DeployProcessServerRequest, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest
      description: "\r\nInput to deploy a Process Server.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: GetAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: GetAsync(String, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 217
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nGet the server object by Id.\r\n"
  example: []
  syntax:
    content: Task<FabricResponse> GetAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function GetAsync(fabricName As String, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of FabricResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse}
      description: "\r\nThe response model for the fabric object\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetCreateStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetCreateStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetCreateStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: GetCreateStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetCreateStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetCreateStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 234
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: Task<FabricOperationResponse> GetCreateStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Function GetCreateStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of FabricOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nLocation value returned by the Begin operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse}
      description: "\r\nA standard service response for fabric long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetDeleteStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetDeleteStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetDeleteStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: GetDeleteStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetDeleteStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDeleteStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 251
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> GetDeleteStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Function GetDeleteStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nLocation value returned by the Begin operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetDeployProcessServerStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetDeployProcessServerStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetDeployProcessServerStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: GetDeployProcessServerStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetDeployProcessServerStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDeployProcessServerStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 268
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: Task<DeployProcessServerOperationResponse> GetDeployProcessServerStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Function GetDeployProcessServerStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of DeployProcessServerOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nLocation value returned by the Begin operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetPurgeStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetPurgeStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetPurgeStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: GetPurgeStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetPurgeStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPurgeStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 285
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> GetPurgeStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Function GetPurgeStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nLocation value returned by the Begin operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetReassociateGatewayStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetReassociateGatewayStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetReassociateGatewayStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: GetReassociateGatewayStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetReassociateGatewayStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetReassociateGatewayStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 302
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: Task<ReassociateGatewayOperationResponse> GetReassociateGatewayStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Function GetReassociateGatewayStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of ReassociateGatewayOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nLocation value returned by the Begin operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetRenewCertificateStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetRenewCertificateStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetRenewCertificateStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: GetRenewCertificateStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.GetRenewCertificateStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetRenewCertificateStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 319
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: Task<FabricOperationResponse> GetRenewCertificateStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Function GetRenewCertificateStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of FabricOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nLocation value returned by the Begin operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse}
      description: "\r\nA standard service response for fabric long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.ListAsync(Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.ListAsync(Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: ListAsync(CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.ListAsync(Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 333
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nGet the list of all fabrics under the vault.\r\n"
  example: []
  syntax:
    content: Task<FabricListResponse> ListAsync(CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function ListAsync(customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of FabricListResponse)
    parameters:
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse}
      description: "\r\nThe response model for the list servers operation.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.PurgeAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.PurgeAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: PurgeAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: PurgeAsync(String, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.PurgeAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PurgeAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 350
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPurges a fabric\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> PurgeAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function PurgeAsync(fabricName As String, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.ReassociateGatewayAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.ReassociateGatewayAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: ReassociateGatewayAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: ReassociateGatewayAsync(String, FailoverProcessServerRequest, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.ReassociateGatewayAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReassociateGatewayAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 370
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPerforms reassociate gateway operation on a fabric.\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> ReassociateGatewayAsync(string fabricName, FailoverProcessServerRequest input, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function ReassociateGatewayAsync(fabricName As String, input As FailoverProcessServerRequest, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest
      description: "\r\nInput to reassociate a gateway.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.RenewCertificateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.IFabricOperations.RenewCertificateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  id: RenewCertificateAsync(System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  langs:
  - csharp
  - vb
  name: RenewCertificateAsync(String, CustomRequestHeaders, CancellationToken)
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations.RenewCertificateAsync(System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewCertificateAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/IFabricOperations.cs
    startLine: 387
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nRenews certificates of a Fabric\r\n"
  example: []
  syntax:
    content: Task<LongRunningOperationResponse> RenewCertificateAsync(string fabricName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken)
    content.vb: Function RenewCertificateAsync(fabricName As String, customRequestHeaders As CustomRequestHeaders, cancellationToken As CancellationToken) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: fabricName
      type: System.String
      description: "\r\nFabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nRequest header parameters.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
references:
- uid: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery
  fullName: Microsoft.Azure.Management.SiteRecovery
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: FabricCreationInput
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput
- uid: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: CustomRequestHeaders
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LongRunningOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse)
  name.vb: Task(Of LongRunningOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery.Models
  fullName: Microsoft.Azure.Management.SiteRecovery.Models
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: DeployProcessServerRequest
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest
- uid: Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: FailoverProcessServerRequest
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FabricResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse)
  name.vb: Task(Of FabricResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
    name: FabricResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
    name: FabricResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FabricOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse)
  name.vb: Task(Of FabricOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
    name: FabricOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
    name: FabricOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DeployProcessServerOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse)
  name.vb: Task(Of DeployProcessServerOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
    name: DeployProcessServerOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
    name: DeployProcessServerOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReassociateGatewayOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse)
  name.vb: Task(Of ReassociateGatewayOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
    name: ReassociateGatewayOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
    name: ReassociateGatewayOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FabricListResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse)
  name.vb: Task(Of FabricListResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
    name: FabricListResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
    name: FabricListResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
  - name: )
    fullName: )
