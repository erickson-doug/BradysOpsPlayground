items:
- uid: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails
  commentId: T:Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails
  id: EncryptionDetails
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  children:
  - Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.#ctor
  - Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekCertExpiryDate
  - Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekCertThumbprint
  - Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekState
  langs:
  - csharp
  - vb
  name: EncryptionDetails
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/EncryptionDetails.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EncryptionDetails
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/EncryptionDetails.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery.Models
  summary: "\r\nEncryption details for the fabric.\r\n"
  example: []
  syntax:
    content: public class EncryptionDetails
    content.vb: Public Class EncryptionDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekCertExpiryDate
  commentId: P:Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekCertExpiryDate
  id: KekCertExpiryDate
  parent: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: KekCertExpiryDate
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekCertExpiryDate
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/EncryptionDetails.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: KekCertExpiryDate
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/EncryptionDetails.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery.Models
  summary: "\r\nOptional. Gets or sets the key encryption key certificate expiry\r\ndate.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? KekCertExpiryDate

      {

          get;

          set;

      }
    content.vb: Public Property KekCertExpiryDate As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekCertThumbprint
  commentId: P:Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekCertThumbprint
  id: KekCertThumbprint
  parent: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: KekCertThumbprint
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekCertThumbprint
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/EncryptionDetails.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: KekCertThumbprint
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/EncryptionDetails.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery.Models
  summary: "\r\nOptional. Gets or sets the key encryption key certificate\r\nthumbprint.\r\n"
  example: []
  syntax:
    content: >-
      public string KekCertThumbprint

      {

          get;

          set;

      }
    content.vb: Public Property KekCertThumbprint As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekState
  commentId: P:Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekState
  id: KekState
  parent: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: KekState
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.KekState
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/EncryptionDetails.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: KekState
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/EncryptionDetails.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery.Models
  summary: "\r\nOptional. Gets or sets the key encryption key state for the fabric.\r\n"
  example: []
  syntax:
    content: >-
      public string KekState

      {

          get;

          set;

      }
    content.vb: Public Property KekState As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.#ctor
  commentId: M:Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails
  langs:
  - csharp
  - vb
  name: EncryptionDetails()
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.EncryptionDetails.EncryptionDetails()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/EncryptionDetails.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/EncryptionDetails.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery.Models
  summary: "\r\nInitializes a new instance of the EncryptionDetails class.\r\n"
  example: []
  syntax:
    content: public EncryptionDetails()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery.Models
  fullName: Microsoft.Azure.Management.SiteRecovery.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
