items:
- uid: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions
  commentId: T:Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions
  id: InMageVolumeExclusionOptions
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  children:
  - Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.#ctor
  - Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.OnlyExcludeIfSingleVolume
  - Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.VolumeLabel
  langs:
  - csharp
  - vb
  name: InMageVolumeExclusionOptions
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/InMageVolumeExclusionOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InMageVolumeExclusionOptions
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/InMageVolumeExclusionOptions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery.Models
  summary: "\r\nGuest disk signature based disk exclusion option when doing enable\r\nprotection of virtual machine in InMage provider.\r\n"
  example: []
  syntax:
    content: public class InMageVolumeExclusionOptions
    content.vb: Public Class InMageVolumeExclusionOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.OnlyExcludeIfSingleVolume
  commentId: P:Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.OnlyExcludeIfSingleVolume
  id: OnlyExcludeIfSingleVolume
  parent: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions
  langs:
  - csharp
  - vb
  name: OnlyExcludeIfSingleVolume
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.OnlyExcludeIfSingleVolume
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/InMageVolumeExclusionOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OnlyExcludeIfSingleVolume
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/InMageVolumeExclusionOptions.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery.Models
  summary: "\r\nOptional. The value indicating whether to exclude multi volume disk\r\nor not. If a disk has multiple volumes and one of the volume has\r\nlabel matching with VolumeLabel this disk will be excluded from\r\nreplication if OnlyExcludeIfSingleVolume is false.\r\n"
  example: []
  syntax:
    content: >-
      public string OnlyExcludeIfSingleVolume

      {

          get;

          set;

      }
    content.vb: Public Property OnlyExcludeIfSingleVolume As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.VolumeLabel
  commentId: P:Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.VolumeLabel
  id: VolumeLabel
  parent: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions
  langs:
  - csharp
  - vb
  name: VolumeLabel
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.VolumeLabel
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/InMageVolumeExclusionOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VolumeLabel
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/InMageVolumeExclusionOptions.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery.Models
  summary: "\r\nOptional. The volume label. The disk having any volume with this\r\nlabel will be excluded from replication.\r\n"
  example: []
  syntax:
    content: >-
      public string VolumeLabel

      {

          get;

          set;

      }
    content.vb: Public Property VolumeLabel As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.#ctor
  commentId: M:Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions
  langs:
  - csharp
  - vb
  name: InMageVolumeExclusionOptions()
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.InMageVolumeExclusionOptions.InMageVolumeExclusionOptions()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/InMageVolumeExclusionOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/Models/InMageVolumeExclusionOptions.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery.Models
  summary: "\r\nInitializes a new instance of the InMageVolumeExclusionOptions\r\nclass.\r\n"
  example: []
  syntax:
    content: public InMageVolumeExclusionOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery.Models
  fullName: Microsoft.Azure.Management.SiteRecovery.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
