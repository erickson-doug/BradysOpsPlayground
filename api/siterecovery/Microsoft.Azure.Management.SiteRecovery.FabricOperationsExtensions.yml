items:
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  commentId: T:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  id: FabricOperationsExtensions
  parent: Microsoft.Azure.Management.SiteRecovery
  children:
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginCreating(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginCreatingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeleting(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeletingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeployProcessServer(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeployProcessServerAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginPurging(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginPurgingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginReassociateGateway(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginReassociateGatewayAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginRenewCertificate(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginRenewCertificateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Create(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.CreateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Delete(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeployProcessServer(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeployProcessServerAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Get(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetCreateStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetCreateStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeleteStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeleteStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeployProcessServerStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeployProcessServerStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetPurgeStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetPurgeStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetReassociateGatewayStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetReassociateGatewayStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetRenewCertificateStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetRenewCertificateStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.List(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ListAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Purge(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.PurgeAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ReassociateGateway(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ReassociateGatewayAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.RenewCertificate(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  - Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.RenewCertificateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  langs:
  - csharp
  - vb
  name: FabricOperationsExtensions
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FabricOperationsExtensions
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  syntax:
    content: public class FabricOperationsExtensions
    content.vb: Public Class FabricOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginCreating(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginCreating(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginCreating(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreating(IFabricOperations, String, FabricCreationInput, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginCreating(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreating
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nCreates a Fabric\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse BeginCreating(IFabricOperations operations, string fabricName, FabricCreationInput input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginCreating(operations As IFabricOperations, fabricName As String, input As FabricCreationInput, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput
      description: "\r\nRequired. Input to create fabric\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginCreatingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginCreatingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginCreatingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreatingAsync(IFabricOperations, String, FabricCreationInput, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginCreatingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreatingAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nCreates a Fabric\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> BeginCreatingAsync(IFabricOperations operations, string fabricName, FabricCreationInput input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginCreatingAsync(operations As IFabricOperations, fabricName As String, input As FabricCreationInput, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput
      description: "\r\nRequired. Input to create fabric\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeleting(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeleting(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginDeleting(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleting(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeleting(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeleting
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeletes a Fabric\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse BeginDeleting(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginDeleting(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeletingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeletingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginDeletingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeletingAsync(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeletingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeletingAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 125
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeletes a Fabric\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> BeginDeletingAsync(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginDeletingAsync(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeployProcessServer(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeployProcessServer(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginDeployProcessServer(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeployProcessServer(IFabricOperations, String, DeployProcessServerRequest, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeployProcessServer(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeployProcessServer
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 149
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeploy a Process Server.\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse BeginDeployProcessServer(IFabricOperations operations, string fabricName, DeployProcessServerRequest input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginDeployProcessServer(operations As IFabricOperations, fabricName As String, input As DeployProcessServerRequest, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest
      description: "\r\nRequired. Input to deploy a Process Server.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeployProcessServerAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeployProcessServerAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginDeployProcessServerAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeployProcessServerAsync(IFabricOperations, String, DeployProcessServerRequest, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginDeployProcessServerAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeployProcessServerAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 177
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeploy a Process Server.\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> BeginDeployProcessServerAsync(IFabricOperations operations, string fabricName, DeployProcessServerRequest input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginDeployProcessServerAsync(operations As IFabricOperations, fabricName As String, input As DeployProcessServerRequest, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest
      description: "\r\nRequired. Input to deploy a Process Server.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginPurging(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginPurging(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginPurging(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginPurging(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginPurging(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginPurging
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 198
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPurges a Fabric\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse BeginPurging(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginPurging(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginPurgingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginPurgingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginPurgingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginPurgingAsync(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginPurgingAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginPurgingAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 223
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPurges a Fabric\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> BeginPurgingAsync(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginPurgingAsync(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginReassociateGateway(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginReassociateGateway(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginReassociateGateway(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginReassociateGateway(IFabricOperations, String, FailoverProcessServerRequest, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginReassociateGateway(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginReassociateGateway
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 247
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPerforms reassociate gateway operation on a fabric.\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse BeginReassociateGateway(IFabricOperations operations, string fabricName, FailoverProcessServerRequest input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginReassociateGateway(operations As IFabricOperations, fabricName As String, input As FailoverProcessServerRequest, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest
      description: "\r\nRequired. Input to reassociate a gateway.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginReassociateGatewayAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginReassociateGatewayAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginReassociateGatewayAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginReassociateGatewayAsync(IFabricOperations, String, FailoverProcessServerRequest, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginReassociateGatewayAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginReassociateGatewayAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 275
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPerforms reassociate gateway operation on a fabric.\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> BeginReassociateGatewayAsync(IFabricOperations operations, string fabricName, FailoverProcessServerRequest input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginReassociateGatewayAsync(operations As IFabricOperations, fabricName As String, input As FailoverProcessServerRequest, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest
      description: "\r\nRequired. Input to reassociate a gateway.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginRenewCertificate(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginRenewCertificate(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginRenewCertificate(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRenewCertificate(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginRenewCertificate(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginRenewCertificate
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 296
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nRenews certificates of a Fabric\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse BeginRenewCertificate(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginRenewCertificate(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginRenewCertificateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginRenewCertificateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: BeginRenewCertificateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginRenewCertificateAsync(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.BeginRenewCertificateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginRenewCertificateAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 321
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nRenews certificates of a Fabric\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> BeginRenewCertificateAsync(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function BeginRenewCertificateAsync(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Create(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Create(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: Create(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IFabricOperations, String, FabricCreationInput, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Create(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Create
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 345
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nCreates a fabric\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse Create(IFabricOperations operations, string fabricName, FabricCreationInput input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function Create(operations As IFabricOperations, fabricName As String, input As FabricCreationInput, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput
      description: "\r\nRequired. Input to create fabric\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.CreateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.CreateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: CreateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IFabricOperations, String, FabricCreationInput, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.CreateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 373
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nCreates a fabric\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> CreateAsync(IFabricOperations operations, string fabricName, FabricCreationInput input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function CreateAsync(operations As IFabricOperations, fabricName As String, input As FabricCreationInput, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput
      description: "\r\nRequired. Input to create fabric\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Delete(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Delete(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: Delete(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Delete(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Delete
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 394
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeletes a fabric\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse Delete(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function Delete(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: DeleteAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 419
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeletes a fabric\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> DeleteAsync(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function DeleteAsync(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeployProcessServer(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeployProcessServer(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: DeployProcessServer(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeployProcessServer(IFabricOperations, String, DeployProcessServerRequest, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeployProcessServer(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeployProcessServer
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 443
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeploy a Process Server.\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse DeployProcessServer(IFabricOperations operations, string fabricName, DeployProcessServerRequest input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function DeployProcessServer(operations As IFabricOperations, fabricName As String, input As DeployProcessServerRequest, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest
      description: "\r\nRequired. Input to deploy a Process Server.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeployProcessServerAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeployProcessServerAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: DeployProcessServerAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeployProcessServerAsync(IFabricOperations, String, DeployProcessServerRequest, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.DeployProcessServerAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeployProcessServerAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 471
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nDeploy a Process Server.\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> DeployProcessServerAsync(IFabricOperations operations, string fabricName, DeployProcessServerRequest input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function DeployProcessServerAsync(operations As IFabricOperations, fabricName As String, input As DeployProcessServerRequest, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest
      description: "\r\nRequired. Input to deploy a Process Server.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Get(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Get(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: Get(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Get(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Get
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 492
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nGet the server object by Id.\r\n"
  example: []
  syntax:
    content: public static FabricResponse Get(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function Get(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As FabricResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
      description: "\r\nThe response model for the fabric object\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: GetAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 517
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nGet the server object by Id.\r\n"
  example: []
  syntax:
    content: public static Task<FabricResponse> GetAsync(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function GetAsync(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As Task(Of FabricResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse}
      description: "\r\nThe response model for the fabric object\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetCreateStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetCreateStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetCreateStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCreateStatus(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetCreateStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetCreateStatus
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 538
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static FabricOperationResponse GetCreateStatus(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetCreateStatus(operations As IFabricOperations, operationStatusLink As String) As FabricOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
      description: "\r\nA standard service response for fabric long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetCreateStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetCreateStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetCreateStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetCreateStatusAsync(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetCreateStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetCreateStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 563
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static Task<FabricOperationResponse> GetCreateStatusAsync(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetCreateStatusAsync(operations As IFabricOperations, operationStatusLink As String) As Task(Of FabricOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse}
      description: "\r\nA standard service response for fabric long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeleteStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeleteStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetDeleteStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetDeleteStatus(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeleteStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDeleteStatus
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 584
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse GetDeleteStatus(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetDeleteStatus(operations As IFabricOperations, operationStatusLink As String) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeleteStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeleteStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetDeleteStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetDeleteStatusAsync(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeleteStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDeleteStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 609
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> GetDeleteStatusAsync(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetDeleteStatusAsync(operations As IFabricOperations, operationStatusLink As String) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeployProcessServerStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeployProcessServerStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetDeployProcessServerStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetDeployProcessServerStatus(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeployProcessServerStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDeployProcessServerStatus
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 630
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static DeployProcessServerOperationResponse GetDeployProcessServerStatus(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetDeployProcessServerStatus(operations As IFabricOperations, operationStatusLink As String) As DeployProcessServerOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeployProcessServerStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeployProcessServerStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetDeployProcessServerStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetDeployProcessServerStatusAsync(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetDeployProcessServerStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDeployProcessServerStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 655
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static Task<DeployProcessServerOperationResponse> GetDeployProcessServerStatusAsync(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetDeployProcessServerStatusAsync(operations As IFabricOperations, operationStatusLink As String) As Task(Of DeployProcessServerOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetPurgeStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetPurgeStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetPurgeStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetPurgeStatus(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetPurgeStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPurgeStatus
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 676
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse GetPurgeStatus(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetPurgeStatus(operations As IFabricOperations, operationStatusLink As String) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetPurgeStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetPurgeStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetPurgeStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetPurgeStatusAsync(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetPurgeStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPurgeStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 701
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> GetPurgeStatusAsync(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetPurgeStatusAsync(operations As IFabricOperations, operationStatusLink As String) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetReassociateGatewayStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetReassociateGatewayStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetReassociateGatewayStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetReassociateGatewayStatus(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetReassociateGatewayStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetReassociateGatewayStatus
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 722
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static ReassociateGatewayOperationResponse GetReassociateGatewayStatus(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetReassociateGatewayStatus(operations As IFabricOperations, operationStatusLink As String) As ReassociateGatewayOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetReassociateGatewayStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetReassociateGatewayStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetReassociateGatewayStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetReassociateGatewayStatusAsync(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetReassociateGatewayStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetReassociateGatewayStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 747
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static Task<ReassociateGatewayOperationResponse> GetReassociateGatewayStatusAsync(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetReassociateGatewayStatusAsync(operations As IFabricOperations, operationStatusLink As String) As Task(Of ReassociateGatewayOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetRenewCertificateStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetRenewCertificateStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetRenewCertificateStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetRenewCertificateStatus(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetRenewCertificateStatus(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetRenewCertificateStatus
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 768
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static FabricOperationResponse GetRenewCertificateStatus(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetRenewCertificateStatus(operations As IFabricOperations, operationStatusLink As String) As FabricOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
      description: "\r\nA standard service response for fabric long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetRenewCertificateStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetRenewCertificateStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  id: GetRenewCertificateStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetRenewCertificateStatusAsync(IFabricOperations, String)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.GetRenewCertificateStatusAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetRenewCertificateStatusAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 793
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call Get Operation Status to determine whether the operation\r\nhas succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public static Task<FabricOperationResponse> GetRenewCertificateStatusAsync(IFabricOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetRenewCertificateStatusAsync(operations As IFabricOperations, operationStatusLink As String) As Task(Of FabricOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse}
      description: "\r\nA standard service response for fabric long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.List(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.List(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: List(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IFabricOperations, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.List(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: List
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 811
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nGet the list of all fabrics under the vault.\r\n"
  example: []
  syntax:
    content: public static FabricListResponse List(IFabricOperations operations, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function List(operations As IFabricOperations, customRequestHeaders As CustomRequestHeaders) As FabricListResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
      description: "\r\nThe response model for the list servers operation.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ListAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ListAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: ListAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IFabricOperations, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ListAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 833
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nGet the list of all fabrics under the vault.\r\n"
  example: []
  syntax:
    content: public static Task<FabricListResponse> ListAsync(IFabricOperations operations, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function ListAsync(operations As IFabricOperations, customRequestHeaders As CustomRequestHeaders) As Task(Of FabricListResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse}
      description: "\r\nThe response model for the list servers operation.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Purge(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Purge(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: Purge(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: Purge(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.Purge(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Purge
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 854
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPurges a fabric\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse Purge(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function Purge(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.PurgeAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.PurgeAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: PurgeAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: PurgeAsync(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.PurgeAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PurgeAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 879
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPurges a fabric\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> PurgeAsync(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function PurgeAsync(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ReassociateGateway(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ReassociateGateway(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: ReassociateGateway(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: ReassociateGateway(IFabricOperations, String, FailoverProcessServerRequest, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ReassociateGateway(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReassociateGateway
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 903
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPerforms reassociate gateway operation on a fabric.\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse ReassociateGateway(IFabricOperations operations, string fabricName, FailoverProcessServerRequest input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function ReassociateGateway(operations As IFabricOperations, fabricName As String, input As FailoverProcessServerRequest, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest
      description: "\r\nRequired. Input to reassociate a gateway.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ReassociateGatewayAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ReassociateGatewayAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: ReassociateGatewayAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: ReassociateGatewayAsync(IFabricOperations, String, FailoverProcessServerRequest, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.ReassociateGatewayAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReassociateGatewayAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 931
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nPerforms reassociate gateway operation on a fabric.\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> ReassociateGatewayAsync(IFabricOperations operations, string fabricName, FailoverProcessServerRequest input, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function ReassociateGatewayAsync(operations As IFabricOperations, fabricName As String, input As FailoverProcessServerRequest, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: input
      type: Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest
      description: "\r\nRequired. Input to reassociate a gateway.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.RenewCertificate(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.RenewCertificate(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: RenewCertificate(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: RenewCertificate(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.RenewCertificate(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewCertificate
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 952
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nRenews certificates of a Fabric\r\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse RenewCertificate(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function RenewCertificate(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.RenewCertificateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  commentId: M:Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.RenewCertificateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  id: RenewCertificateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations,System.String,Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  parent: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions
  langs:
  - csharp
  - vb
  name: RenewCertificateAsync(IFabricOperations, String, CustomRequestHeaders)
  fullName: Microsoft.Azure.Management.SiteRecovery.FabricOperationsExtensions.RenewCertificateAsync(Microsoft.Azure.Management.SiteRecovery.IFabricOperations, System.String, Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenewCertificateAsync
    path: src/src/ResourceManagement/SiteRecovery/SiteRecoveryManagement/Generated/FabricOperationsExtensions.cs
    startLine: 977
  assemblies:
  - Microsoft.Azure.Management.SiteRecovery
  namespace: Microsoft.Azure.Management.SiteRecovery
  summary: "\r\nRenews certificates of a Fabric\r\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> RenewCertificateAsync(IFabricOperations operations, string fabricName, CustomRequestHeaders customRequestHeaders)
    content.vb: Public Shared Function RenewCertificateAsync(operations As IFabricOperations, fabricName As String, customRequestHeaders As CustomRequestHeaders) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.SiteRecovery.IFabricOperations.\r\n"
    - id: fabricName
      type: System.String
      description: "\r\nRequired. Fabric Name.\r\n"
    - id: customRequestHeaders
      type: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
      description: "\r\nOptional. Request header parameters.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
      description: "\r\nA standard service response for long running operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery
  fullName: Microsoft.Azure.Management.SiteRecovery
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
  parent: Microsoft.Azure.Management.SiteRecovery
  isExternal: false
  name: IFabricOperations
  fullName: Microsoft.Azure.Management.SiteRecovery.IFabricOperations
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: FabricCreationInput
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricCreationInput
- uid: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: CustomRequestHeaders
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.CustomRequestHeaders
- uid: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: LongRunningOperationResponse
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
- uid: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: Microsoft.Azure.Management.SiteRecovery.Models
  fullName: Microsoft.Azure.Management.SiteRecovery.Models
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LongRunningOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse)
  name.vb: Task(Of LongRunningOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.LongRunningOperationResponse
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: DeployProcessServerRequest
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerRequest
- uid: Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: FailoverProcessServerRequest
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.FailoverProcessServerRequest
- uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: FabricResponse
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FabricResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse)
  name.vb: Task(Of FabricResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
    name: FabricResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
    name: FabricResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricResponse
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: FabricOperationResponse
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FabricOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse)
  name.vb: Task(Of FabricOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
    name: FabricOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
    name: FabricOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricOperationResponse
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: DeployProcessServerOperationResponse
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DeployProcessServerOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse)
  name.vb: Task(Of DeployProcessServerOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
    name: DeployProcessServerOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
    name: DeployProcessServerOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.DeployProcessServerOperationResponse
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: ReassociateGatewayOperationResponse
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReassociateGatewayOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse)
  name.vb: Task(Of ReassociateGatewayOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
    name: ReassociateGatewayOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
    name: ReassociateGatewayOperationResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.ReassociateGatewayOperationResponse
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
  parent: Microsoft.Azure.Management.SiteRecovery.Models
  isExternal: false
  name: FabricListResponse
  fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FabricListResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse)
  name.vb: Task(Of FabricListResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
    name: FabricListResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
    name: FabricListResponse
    fullName: Microsoft.Azure.Management.SiteRecovery.Models.FabricListResponse
  - name: )
    fullName: )
