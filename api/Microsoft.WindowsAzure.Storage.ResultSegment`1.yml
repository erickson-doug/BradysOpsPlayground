items:
- uid: Microsoft.WindowsAzure.Storage.ResultSegment`1
  commentId: T:Microsoft.WindowsAzure.Storage.ResultSegment`1
  id: ResultSegment`1
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.ResultSegment`1.ContinuationToken
  - Microsoft.WindowsAzure.Storage.ResultSegment`1.Results
  langs:
  - csharp
  - vb
  name: ResultSegment<TElement>
  fullName: Microsoft.WindowsAzure.Storage.ResultSegment<TElement>
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/ResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ResultSegment
    path: src/Storage/Lib/Common/ResultSegment.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nRepresents a result segment that was retrieved from the total set of possible results.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.StyleCop.CSharp.MaintainabilityRules", "SA1402:FileMayOnlyContainASingleClass", Justification = "Other class is a non-generic static helper with the same name.")]

      public class ResultSegment<TElement>
    content.vb: >-
      <SuppressMessage("Microsoft.StyleCop.CSharp.MaintainabilityRules", "SA1402:FileMayOnlyContainASingleClass", Justification:="Other class is a non-generic static helper with the same name.")>

      Public Class ResultSegment(Of TElement)
    typeParameters:
    - id: TElement
      description: The type of the element returned in the result segment.
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.StyleCop.CSharp.MaintainabilityRules
    - type: System.String
      value: SA1402:FileMayOnlyContainASingleClass
    namedArguments:
    - name: Justification
      type: System.String
      value: Other class is a non-generic static helper with the same name.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.WindowsAzure.Storage.ResultSegment(Of TElement)
  name.vb: ResultSegment(Of TElement)
- uid: Microsoft.WindowsAzure.Storage.ResultSegment`1.Results
  commentId: P:Microsoft.WindowsAzure.Storage.ResultSegment`1.Results
  id: Results
  parent: Microsoft.WindowsAzure.Storage.ResultSegment`1
  langs:
  - csharp
  - vb
  name: Results
  fullName: Microsoft.WindowsAzure.Storage.ResultSegment<TElement>.Results
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/ResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Results
    path: src/Storage/Lib/Common/ResultSegment.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets an enumerable collection of results.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists", Justification = "Reviewed.")]

      public List<TElement> Results

      {

          get;

      }
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists", Justification:="Reviewed.")>

      Public ReadOnly Property Results As List(Of TElement)
    parameters: []
    return:
      type: System.Collections.Generic.List{{TElement}}
      description: An enumerable collection of results of type <code>TElement</code>.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1002:DoNotExposeGenericLists
    namedArguments:
    - name: Justification
      type: System.String
      value: Reviewed.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.ResultSegment(Of TElement).Results
- uid: Microsoft.WindowsAzure.Storage.ResultSegment`1.ContinuationToken
  commentId: P:Microsoft.WindowsAzure.Storage.ResultSegment`1.ContinuationToken
  id: ContinuationToken
  parent: Microsoft.WindowsAzure.Storage.ResultSegment`1
  langs:
  - csharp
  - vb
  name: ContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.ResultSegment<TElement>.ContinuationToken
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/ResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContinuationToken
    path: src/Storage/Lib/Common/ResultSegment.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets a continuation token to use to retrieve the next set of results with a subsequent call to the operation.\r\n"
  example: []
  syntax:
    content: >-
      public IContinuationToken ContinuationToken

      {

          get;

      }
    content.vb: Public ReadOnly Property ContinuationToken As IContinuationToken
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.IContinuationToken
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.IContinuationToken" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.ResultSegment(Of TElement).ContinuationToken
references:
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.List{{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TElement>
  fullName: System.Collections.Generic.List<TElement>
  fullname.vb: System.Collections.Generic.List(Of TElement)
  name.vb: List(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  fullName: System.Collections.Generic.List<T>
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Storage.IContinuationToken
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.IContinuationToken
