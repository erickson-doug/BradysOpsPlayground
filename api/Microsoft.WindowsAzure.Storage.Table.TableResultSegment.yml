items:
- uid: Microsoft.WindowsAzure.Storage.Table.TableResultSegment
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableResultSegment
  id: TableResultSegment
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.TableResultSegment.ContinuationToken
  - Microsoft.WindowsAzure.Storage.Table.TableResultSegment.GetEnumerator
  - Microsoft.WindowsAzure.Storage.Table.TableResultSegment.Results
  - Microsoft.WindowsAzure.Storage.Table.TableResultSegment.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: TableResultSegment
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResultSegment
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Table/TableResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TableResultSegment
    path: src/Storage/Lib/Common/Table/TableResultSegment.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nRepresents a segment of <xref href=\"Microsoft.WindowsAzure.Storage.Table.CloudTable\" data-throw-if-not-resolved=\"false\"></xref> results, with continuation information for pagination scenarios.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix", Justification = "Back compatibility.")]

      public sealed class TableResultSegment : IEnumerable<CloudTable>, IEnumerable
    content.vb: >-
      <SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix", Justification:="Back compatibility.")>

      Public NotInheritable Class TableResultSegment
          Implements IEnumerable(Of CloudTable), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.CloudTable}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1710:IdentifiersShouldHaveCorrectSuffix
    namedArguments:
    - name: Justification
      type: System.String
      value: Back compatibility.
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.TableResultSegment.Results
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableResultSegment.Results
  id: Results
  parent: Microsoft.WindowsAzure.Storage.Table.TableResultSegment
  langs:
  - csharp
  - vb
  name: Results
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResultSegment.Results
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Table/TableResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Results
    path: src/Storage/Lib/Common/Table/TableResultSegment.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nGets an enumerable collection of <xref href=\"Microsoft.WindowsAzure.Storage.Table.CloudTable\" data-throw-if-not-resolved=\"false\"></xref> results.\r\n"
  example: []
  syntax:
    content: >-
      public IList<CloudTable> Results

      {
          get;
      }
    content.vb: Public ReadOnly Property Results As IList(Of CloudTable)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Storage.Table.CloudTable}
      description: An enumerable collection of <xref href="Microsoft.WindowsAzure.Storage.Table.CloudTable" data-throw-if-not-resolved="false"></xref> objects.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Table.TableResultSegment.ContinuationToken
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableResultSegment.ContinuationToken
  id: ContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Table.TableResultSegment
  langs:
  - csharp
  - vb
  name: ContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResultSegment.ContinuationToken
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Table/TableResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContinuationToken
    path: src/Storage/Lib/Common/Table/TableResultSegment.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nGets the continuation token used to retrieve the next segment of <xref href=\"Microsoft.WindowsAzure.Storage.Table.CloudTable\" data-throw-if-not-resolved=\"false\"></xref> results. Returns null if there are no more results.\r\n"
  example: []
  syntax:
    content: >-
      public TableContinuationToken ContinuationToken

      {
          get;
      }
    content.vb: Public ReadOnly Property ContinuationToken As TableContinuationToken
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableContinuationToken" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Table.TableResultSegment.GetEnumerator
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableResultSegment.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.WindowsAzure.Storage.Table.TableResultSegment
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResultSegment.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Table/TableResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetEnumerator
    path: src/Storage/Lib/Common/Table/TableResultSegment.cs
    startLine: 74
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\r\nReturns an enumerator that iterates through the segment of <xref href=\"Microsoft.WindowsAzure.Storage.Table.CloudTable\" data-throw-if-not-resolved=\"false\"></xref> results. \r\n"
  example: []
  syntax:
    content: public IEnumerator<CloudTable> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of CloudTable)
    return:
      type: System.Collections.Generic.IEnumerator{Microsoft.WindowsAzure.Storage.Table.CloudTable}
      description: An enumerator that iterates through the segment of <xref href="Microsoft.WindowsAzure.Storage.Table.CloudTable" data-throw-if-not-resolved="false"></xref> results.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableResultSegment.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableResultSegment.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: Microsoft.WindowsAzure.Storage.Table.TableResultSegment
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: Microsoft.WindowsAzure.Storage.Table.TableResultSegment.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/Table/TableResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Storage/Lib/Common/Table/TableResultSegment.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: CloudTable
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
- uid: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Table.CloudTable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CloudTable>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.Table.CloudTable>
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.Storage.Table.CloudTable)
  name.vb: IEnumerable(Of CloudTable)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Storage.Table.CloudTable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CloudTable>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Storage.Table.CloudTable>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Storage.Table.CloudTable)
  name.vb: IList(Of CloudTable)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
- uid: System.Collections.Generic.IEnumerator{Microsoft.WindowsAzure.Storage.Table.CloudTable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<CloudTable>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.WindowsAzure.Storage.Table.CloudTable>
  fullname.vb: System.Collections.Generic.IEnumerator(Of Microsoft.WindowsAzure.Storage.Table.CloudTable)
  name.vb: IEnumerator(Of CloudTable)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.CloudTable
    name: CloudTable
    fullName: Microsoft.WindowsAzure.Storage.Table.CloudTable
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
