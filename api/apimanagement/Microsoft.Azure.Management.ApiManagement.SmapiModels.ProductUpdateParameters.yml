items:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  commentId: T:Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  id: ProductUpdateParameters
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels
  children:
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.#ctor
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.ApprovalRequired
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Description
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Name
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.State
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.SubscriptionRequired
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.SubscriptionsLimit
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Terms
  langs:
  - csharp
  - vb
  name: ProductUpdateParameters
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProductUpdateParameters
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nParameters supplied to the CreateOrUpdate Product operation.\r\n"
  example: []
  syntax:
    content: public class ProductUpdateParameters
    content.vb: Public Class ProductUpdateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.ApprovalRequired
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.ApprovalRequired
  id: ApprovalRequired
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  langs:
  - csharp
  - vb
  name: ApprovalRequired
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.ApprovalRequired
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ApprovalRequired
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets whether subscription approval is required.\r\nIf false, new subscriptions will be approved automatically\r\nenabling developers to call the product’s APIs immediately after\r\nsubscribing. If true, administrators must manually approve the\r\nsubscription before the developer can any of the product’s APIs.\r\nCan be present only if subscriptionRequired property is present\r\nand has a value of false.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? ApprovalRequired

      {

          get;

          set;

      }
    content.vb: Public Property ApprovalRequired As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Description
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Description
  id: Description
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  langs:
  - csharp
  - vb
  name: Description
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Description
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Description
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets Product description. May be 1 to 500\r\ncharacters long.\r\n"
  example: []
  syntax:
    content: >-
      public string Description

      {

          get;

          set;

      }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Name
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Name
  id: Name
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Name
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets Product name. Must be 1 to 300 characters\r\nlong.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.State
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.State
  id: State
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  langs:
  - csharp
  - vb
  name: State
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.State
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: State
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets whether product is published or not.\r\nPublished products are discoverable by users of developer portal.\r\nNon published products are visible only to administrators.\r\n"
  example: []
  syntax:
    content: >-
      public ProductStateContract? State

      {

          get;

          set;

      }
    content.vb: Public Property State As ProductStateContract?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductStateContract}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.SubscriptionRequired
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.SubscriptionRequired
  id: SubscriptionRequired
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  langs:
  - csharp
  - vb
  name: SubscriptionRequired
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.SubscriptionRequired
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SubscriptionRequired
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets whether a product subscription is required\r\nfor accessing APIs included in this product. If true, the product\r\nis referred to as \"protected\" and a valid subscription key is\r\nrequired for a request to an API included in the product to\r\nsucceed. If false, the product is referred to as \"open\" and\r\nrequests to an API included in the product can be made without a\r\nsubscription key. If property is omitted when creating a new\r\nproduct it's value is assumed to be true.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? SubscriptionRequired

      {

          get;

          set;

      }
    content.vb: Public Property SubscriptionRequired As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.SubscriptionsLimit
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.SubscriptionsLimit
  id: SubscriptionsLimit
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  langs:
  - csharp
  - vb
  name: SubscriptionsLimit
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.SubscriptionsLimit
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SubscriptionsLimit
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets whether the number of subscriptions a user\r\ncan have to this product at the same time. Set to null or omit to\r\nallow unlimited per user subscriptions. Can be present only if\r\nsubscriptionRequired property is present and has a value of false.\r\n"
  example: []
  syntax:
    content: >-
      public int ? SubscriptionsLimit

      {

          get;

          set;

      }
    content.vb: Public Property SubscriptionsLimit As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Terms
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Terms
  id: Terms
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  langs:
  - csharp
  - vb
  name: Terms
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.Terms
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Terms
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets Product terms and conditions. Developer will\r\nhave to accept these terms before he's allowed to call product API.\r\n"
  example: []
  syntax:
    content: >-
      public string Terms

      {

          get;

          set;

      }
    content.vb: Public Property Terms As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.#ctor
  commentId: M:Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters
  langs:
  - csharp
  - vb
  name: ProductUpdateParameters()
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductUpdateParameters.ProductUpdateParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/ProductUpdateParameters.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nInitializes a new instance of the ProductUpdateParameters class.\r\n"
  example: []
  syntax:
    content: public ProductUpdateParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels
  isExternal: false
  name: Microsoft.Azure.Management.ApiManagement.SmapiModels
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductStateContract}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ProductStateContract>
  fullName: System.Nullable<Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductStateContract>
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductStateContract)
  name.vb: Nullable(Of ProductStateContract)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductStateContract
    name: ProductStateContract
    fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductStateContract
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductStateContract
    name: ProductStateContract
    fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.ProductStateContract
  - name: )
    fullName: )
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
