items:
- uid: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration
  commentId: T:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration
  id: HostnameConfiguration
  parent: Microsoft.Azure.Management.ApiManagement.Models
  children:
  - Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.#ctor
  - Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.#ctor(Microsoft.Azure.Management.ApiManagement.Models.HostnameType,System.String,Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation)
  - Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Certificate
  - Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Hostname
  - Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Type
  langs:
  - csharp
  - vb
  name: HostnameConfiguration
  fullName: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HostnameConfiguration
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.Models
  summary: "\r\nCustom hostname configuration.\r\n"
  example: []
  syntax:
    content: public class HostnameConfiguration
    content.vb: Public Class HostnameConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Certificate
  commentId: P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Certificate
  id: Certificate
  parent: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration
  langs:
  - csharp
  - vb
  name: Certificate
  fullName: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Certificate
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Certificate
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.Models
  summary: "\r\nRequired. Gets or sets certificate information.\r\n"
  example: []
  syntax:
    content: >-
      public CertificateInformation Certificate

      {

          get;

          set;

      }
    content.vb: Public Property Certificate As CertificateInformation
    parameters: []
    return:
      type: Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Hostname
  commentId: P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Hostname
  id: Hostname
  parent: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration
  langs:
  - csharp
  - vb
  name: Hostname
  fullName: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Hostname
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Hostname
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.Models
  summary: "\r\nRequired. Gets or sets hostname.\r\n"
  example: []
  syntax:
    content: >-
      public string Hostname

      {

          get;

          set;

      }
    content.vb: Public Property Hostname As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Type
  commentId: P:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Type
  id: Type
  parent: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration
  langs:
  - csharp
  - vb
  name: Type
  fullName: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.Type
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Type
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.Models
  summary: "\r\nRequired. Gets or sets hostname type.\r\n"
  example: []
  syntax:
    content: >-
      public HostnameType Type

      {

          get;

          set;

      }
    content.vb: Public Property Type As HostnameType
    parameters: []
    return:
      type: Microsoft.Azure.Management.ApiManagement.Models.HostnameType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.#ctor
  commentId: M:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration
  langs:
  - csharp
  - vb
  name: HostnameConfiguration()
  fullName: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.HostnameConfiguration()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.Models
  summary: "\r\nInitializes a new instance of the HostnameConfiguration class.\r\n"
  example: []
  syntax:
    content: public HostnameConfiguration()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.#ctor(Microsoft.Azure.Management.ApiManagement.Models.HostnameType,System.String,Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation)
  commentId: M:Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.#ctor(Microsoft.Azure.Management.ApiManagement.Models.HostnameType,System.String,Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation)
  id: '#ctor(Microsoft.Azure.Management.ApiManagement.Models.HostnameType,System.String,Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation)'
  parent: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration
  langs:
  - csharp
  - vb
  name: HostnameConfiguration(HostnameType, String, CertificateInformation)
  fullName: Microsoft.Azure.Management.ApiManagement.Models.HostnameConfiguration.HostnameConfiguration(Microsoft.Azure.Management.ApiManagement.Models.HostnameType, System.String, Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/Models/HostnameConfiguration.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.Models
  summary: "\r\nInitializes a new instance of the HostnameConfiguration class with\r\nrequired arguments.\r\n"
  example: []
  syntax:
    content: public HostnameConfiguration(HostnameType type, string hostname, CertificateInformation certificate)
    content.vb: Public Sub New(type As HostnameType, hostname As String, certificate As CertificateInformation)
    parameters:
    - id: type
      type: Microsoft.Azure.Management.ApiManagement.Models.HostnameType
    - id: hostname
      type: System.String
    - id: certificate
      type: Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ApiManagement.Models
  isExternal: false
  name: Microsoft.Azure.Management.ApiManagement.Models
  fullName: Microsoft.Azure.Management.ApiManagement.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation
  parent: Microsoft.Azure.Management.ApiManagement.Models
  isExternal: false
  name: CertificateInformation
  fullName: Microsoft.Azure.Management.ApiManagement.Models.CertificateInformation
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.ApiManagement.Models.HostnameType
  parent: Microsoft.Azure.Management.ApiManagement.Models
  isExternal: false
  name: HostnameType
  fullName: Microsoft.Azure.Management.ApiManagement.Models.HostnameType
