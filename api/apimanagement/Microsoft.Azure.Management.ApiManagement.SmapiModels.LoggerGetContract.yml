items:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract
  commentId: T:Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract
  id: LoggerGetContract
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels
  children:
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.#ctor
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.#ctor(Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerTypeContract)
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Description
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Id
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.IdPath
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.IsBuffered
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Type
  langs:
  - csharp
  - vb
  name: LoggerGetContract
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LoggerGetContract
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nLogger.\r\n"
  example: []
  syntax:
    content: public class LoggerGetContract
    content.vb: Public Class LoggerGetContract
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Id
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Id
  id: Id
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Id
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/LoggerGetContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Id
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/LoggerGetContract.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  syntax:
    content: >-
      public string Id

      {

          get;

      }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Description
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Description
  id: Description
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract
  langs:
  - csharp
  - vb
  name: Description
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Description
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Description
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets Logger description.\r\n"
  example: []
  syntax:
    content: >-
      public string Description

      {

          get;

          set;

      }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.IdPath
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.IdPath
  id: IdPath
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract
  langs:
  - csharp
  - vb
  name: IdPath
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.IdPath
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IdPath
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets logger identifier.\r\n"
  example: []
  syntax:
    content: >-
      public string IdPath

      {

          get;

          set;

      }
    content.vb: Public Property IdPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.IsBuffered
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.IsBuffered
  id: IsBuffered
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract
  langs:
  - csharp
  - vb
  name: IsBuffered
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.IsBuffered
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsBuffered
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets whether records are buffered in the logger\r\nbefore publishing. Default is assumed to be true.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? IsBuffered

      {

          get;

          set;

      }
    content.vb: Public Property IsBuffered As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Type
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Type
  id: Type
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract
  langs:
  - csharp
  - vb
  name: Type
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.Type
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Type
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nRequired. Gets or sets Logger type.\r\n"
  example: []
  syntax:
    content: >-
      public LoggerTypeContract Type

      {

          get;

          set;

      }
    content.vb: Public Property Type As LoggerTypeContract
    parameters: []
    return:
      type: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerTypeContract
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.#ctor
  commentId: M:Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract
  langs:
  - csharp
  - vb
  name: LoggerGetContract()
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.LoggerGetContract()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nInitializes a new instance of the LoggerGetContract class.\r\n"
  example: []
  syntax:
    content: public LoggerGetContract()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.#ctor(Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerTypeContract)
  commentId: M:Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.#ctor(Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerTypeContract)
  id: '#ctor(Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerTypeContract)'
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract
  langs:
  - csharp
  - vb
  name: LoggerGetContract(LoggerTypeContract)
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerGetContract.LoggerGetContract(Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerTypeContract)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/LoggerGetContract.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nInitializes a new instance of the LoggerGetContract class with\r\nrequired arguments.\r\n"
  example: []
  syntax:
    content: public LoggerGetContract(LoggerTypeContract type)
    content.vb: Public Sub New(type As LoggerTypeContract)
    parameters:
    - id: type
      type: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerTypeContract
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels
  isExternal: false
  name: Microsoft.Azure.Management.ApiManagement.SmapiModels
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerTypeContract
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels
  isExternal: false
  name: LoggerTypeContract
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.LoggerTypeContract
