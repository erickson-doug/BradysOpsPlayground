items:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract
  commentId: T:Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract
  id: CertificateContract
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels
  children:
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.#ctor
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.ExpirationDate
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Id
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.IdPath
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Subject
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Thumbprint
  langs:
  - csharp
  - vb
  name: CertificateContract
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CertificateContract
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nCertificate details.\r\n"
  example: []
  syntax:
    content: public class CertificateContract
    content.vb: Public Class CertificateContract
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Id
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Id
  id: Id
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract
  langs:
  - csharp
  - vb
  name: Id
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Id
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/CertificateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Id
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/CertificateContract.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  syntax:
    content: >-
      public string Id

      {

          get;

      }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.ExpirationDate
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.ExpirationDate
  id: ExpirationDate
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract
  langs:
  - csharp
  - vb
  name: ExpirationDate
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.ExpirationDate
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExpirationDate
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets Expiration date of the certificate.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime ExpirationDate

      {

          get;

          set;

      }
    content.vb: Public Property ExpirationDate As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.IdPath
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.IdPath
  id: IdPath
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract
  langs:
  - csharp
  - vb
  name: IdPath
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.IdPath
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IdPath
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets Certificate identifier path:\r\n/certificates/{certificateId}\r\n"
  example: []
  syntax:
    content: >-
      public string IdPath

      {

          get;

          set;

      }
    content.vb: Public Property IdPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Subject
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Subject
  id: Subject
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract
  langs:
  - csharp
  - vb
  name: Subject
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Subject
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Subject
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets Subject attribute of the certificate.\r\n"
  example: []
  syntax:
    content: >-
      public string Subject

      {

          get;

          set;

      }
    content.vb: Public Property Subject As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Thumbprint
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Thumbprint
  id: Thumbprint
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract
  langs:
  - csharp
  - vb
  name: Thumbprint
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.Thumbprint
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Thumbprint
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets Thumbprint of the certificate.\r\n"
  example: []
  syntax:
    content: >-
      public string Thumbprint

      {

          get;

          set;

      }
    content.vb: Public Property Thumbprint As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.#ctor
  commentId: M:Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract
  langs:
  - csharp
  - vb
  name: CertificateContract()
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.CertificateContract.CertificateContract()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/CertificateContract.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nInitializes a new instance of the CertificateContract class.\r\n"
  example: []
  syntax:
    content: public CertificateContract()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels
  isExternal: false
  name: Microsoft.Azure.Management.ApiManagement.SmapiModels
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
