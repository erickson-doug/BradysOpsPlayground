items:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  commentId: T:Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  id: TenantConfigurationSyncStateContract
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels
  children:
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.#ctor
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.Branch
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.CommitId
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.ConfigurationChangeDate
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsExport
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsGitEnabled
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsSynced
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.SyncDate
  langs:
  - csharp
  - vb
  name: TenantConfigurationSyncStateContract
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TenantConfigurationSyncStateContract
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nTenant Configuration Synchronization State.\r\n"
  example: []
  syntax:
    content: public class TenantConfigurationSyncStateContract
    content.vb: Public Class TenantConfigurationSyncStateContract
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.Branch
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.Branch
  id: Branch
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  langs:
  - csharp
  - vb
  name: Branch
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.Branch
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Branch
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets the name of Git branch.\r\n"
  example: []
  syntax:
    content: >-
      public string Branch

      {

          get;

          set;

      }
    content.vb: Public Property Branch As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.CommitId
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.CommitId
  id: CommitId
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  langs:
  - csharp
  - vb
  name: CommitId
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.CommitId
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CommitId
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets the latest commit Id.\r\n"
  example: []
  syntax:
    content: >-
      public string CommitId

      {

          get;

          set;

      }
    content.vb: Public Property CommitId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.ConfigurationChangeDate
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.ConfigurationChangeDate
  id: ConfigurationChangeDate
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  langs:
  - csharp
  - vb
  name: ConfigurationChangeDate
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.ConfigurationChangeDate
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ConfigurationChangeDate
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets the date of the latest configuration change,\r\nin ISO 8601 format.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? ConfigurationChangeDate

      {

          get;

          set;

      }
    content.vb: Public Property ConfigurationChangeDate As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsExport
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsExport
  id: IsExport
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  langs:
  - csharp
  - vb
  name: IsExport
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsExport
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsExport
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets value indicating if last sync was save\r\n(true) or deploy (false) operation.\r\n"
  example: []
  syntax:
    content: >-
      public bool IsExport

      {

          get;

          set;

      }
    content.vb: Public Property IsExport As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsGitEnabled
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsGitEnabled
  id: IsGitEnabled
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  langs:
  - csharp
  - vb
  name: IsGitEnabled
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsGitEnabled
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsGitEnabled
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets value indicating whether Git configuration\r\naccess is enabled.\r\n"
  example: []
  syntax:
    content: >-
      public bool IsGitEnabled

      {

          get;

          set;

      }
    content.vb: Public Property IsGitEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsSynced
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsSynced
  id: IsSynced
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  langs:
  - csharp
  - vb
  name: IsSynced
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.IsSynced
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsSynced
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets value indicating if last synchronization was\r\nlater than the configuration change.\r\n"
  example: []
  syntax:
    content: >-
      public bool IsSynced

      {

          get;

          set;

      }
    content.vb: Public Property IsSynced As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.SyncDate
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.SyncDate
  id: SyncDate
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  langs:
  - csharp
  - vb
  name: SyncDate
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.SyncDate
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SyncDate
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets the date of the latest synchronization, in\r\nISO 8601 format.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? SyncDate

      {

          get;

          set;

      }
    content.vb: Public Property SyncDate As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.#ctor
  commentId: M:Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract
  langs:
  - csharp
  - vb
  name: TenantConfigurationSyncStateContract()
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.TenantConfigurationSyncStateContract.TenantConfigurationSyncStateContract()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/TenantConfigurationSyncStateContract.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nInitializes a new instance of the\r\nTenantConfigurationSyncStateContract class.\r\n"
  example: []
  syntax:
    content: public TenantConfigurationSyncStateContract()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels
  isExternal: false
  name: Microsoft.Azure.Management.ApiManagement.SmapiModels
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
