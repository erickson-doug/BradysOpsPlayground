items:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged
  commentId: T:Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged
  id: Paged
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels
  children:
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.#ctor
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.NextLink
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.TotalCount
  langs:
  - csharp
  - vb
  name: Paged
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/Paged.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Paged
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/Paged.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  syntax:
    content: public abstract class Paged
    content.vb: Public MustInherit Class Paged
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.NextLink
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.NextLink
  id: NextLink
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged
  langs:
  - csharp
  - vb
  name: NextLink
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.NextLink
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/Paged.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NextLink
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/Paged.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets next page link if any.\r\n"
  example: []
  syntax:
    content: >-
      public string NextLink

      {

          get;

          set;

      }
    content.vb: Public Property NextLink As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.TotalCount
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.TotalCount
  id: TotalCount
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged
  langs:
  - csharp
  - vb
  name: TotalCount
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.TotalCount
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/Paged.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TotalCount
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/Paged.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nOptional. Gets or sets total records count number.\r\n"
  example: []
  syntax:
    content: >-
      public long TotalCount

      {

          get;

          set;

      }
    content.vb: Public Property TotalCount As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.#ctor
  commentId: M:Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged
  langs:
  - csharp
  - vb
  name: Paged()
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.Paged.Paged()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/Paged.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Generated/SmapiModels/Paged.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  summary: "\r\nInitializes a new instance of the Paged class.\r\n"
  example: []
  syntax:
    content: public Paged()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels
  isExternal: false
  name: Microsoft.Azure.Management.ApiManagement.SmapiModels
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
