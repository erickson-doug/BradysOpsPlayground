items:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1
  commentId: T:Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1
  id: IPaged`1
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels
  children:
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1.NextLink
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1.TotalCount
  - Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1.Values
  langs:
  - csharp
  - vb
  name: IPaged<T>
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged<T>
  type: Interface
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/IPaged.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IPaged
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/IPaged.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  syntax:
    content: public interface IPaged<T>
    content.vb: Public Interface IPaged(Of T)
    typeParameters:
    - id: T
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged(Of T)
  name.vb: IPaged(Of T)
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1.NextLink
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1.NextLink
  id: NextLink
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1
  langs:
  - csharp
  - vb
  name: NextLink
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged<T>.NextLink
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/IPaged.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NextLink
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/IPaged.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  syntax:
    content: >-
      string NextLink

      {

          get;

      }
    content.vb: ReadOnly Property NextLink As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged(Of T).NextLink
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1.TotalCount
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1.TotalCount
  id: TotalCount
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1
  langs:
  - csharp
  - vb
  name: TotalCount
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged<T>.TotalCount
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/IPaged.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TotalCount
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/IPaged.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  syntax:
    content: >-
      long TotalCount

      {

          get;

      }
    content.vb: ReadOnly Property TotalCount As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged(Of T).TotalCount
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1.Values
  commentId: P:Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1.Values
  id: Values
  parent: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged`1
  langs:
  - csharp
  - vb
  name: Values
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged<T>.Values
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/IPaged.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Values
    path: src/src/ResourceManagement/ApiManagement/ApiManagementManagement/Customizations/SmapiModels/IPaged.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.ApiManagement
  namespace: Microsoft.Azure.Management.ApiManagement.SmapiModels
  syntax:
    content: >-
      IList<T> Values

      {

          get;

      }
    content.vb: ReadOnly Property Values As IList(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.IList{{T}}
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Azure.Management.ApiManagement.SmapiModels.IPaged(Of T).Values
references:
- uid: Microsoft.Azure.Management.ApiManagement.SmapiModels
  isExternal: false
  name: Microsoft.Azure.Management.ApiManagement.SmapiModels
  fullName: Microsoft.Azure.Management.ApiManagement.SmapiModels
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.Collections.Generic.IList{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
