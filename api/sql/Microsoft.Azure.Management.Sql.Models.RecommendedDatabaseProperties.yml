items:
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
  commentId: T:Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
  id: RecommendedDatabaseProperties
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.#ctor
  - Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.Name
  - Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.TargetEdition
  - Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.TargetServiceLevelObjective
  langs:
  - csharp
  - vb
  name: RecommendedDatabaseProperties
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedDatabaseProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RecommendedDatabaseProperties
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedDatabaseProperties.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRepresents the properties of a recommended Azure SQL Database being\r\nupgraded.\r\n"
  example: []
  syntax:
    content: public class RecommendedDatabaseProperties
    content.vb: Public Class RecommendedDatabaseProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.Name
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.Name
  id: Name
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.Name
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedDatabaseProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedDatabaseProperties.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the name of the Azure SQL Database being\r\nupgraded.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.TargetEdition
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.TargetEdition
  id: TargetEdition
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
  langs:
  - csharp
  - vb
  name: TargetEdition
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.TargetEdition
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedDatabaseProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TargetEdition
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedDatabaseProperties.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the target edition for the Azure SQL\r\nDatabase being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public string TargetEdition

      {

          get;

          set;

      }
    content.vb: Public Property TargetEdition As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.TargetServiceLevelObjective
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.TargetServiceLevelObjective
  id: TargetServiceLevelObjective
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
  langs:
  - csharp
  - vb
  name: TargetServiceLevelObjective
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.TargetServiceLevelObjective
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedDatabaseProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TargetServiceLevelObjective
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedDatabaseProperties.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the target Service Level Objective for the\r\nAzure SQL Database being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public string TargetServiceLevelObjective

      {

          get;

          set;

      }
    content.vb: Public Property TargetServiceLevelObjective As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
  langs:
  - csharp
  - vb
  name: RecommendedDatabaseProperties()
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties.RecommendedDatabaseProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedDatabaseProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedDatabaseProperties.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the RecommendedDatabaseProperties\r\nclass.\r\n"
  example: []
  syntax:
    content: public RecommendedDatabaseProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
