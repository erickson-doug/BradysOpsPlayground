items:
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  commentId: T:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  id: RecommendedIndexProperties
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.#ctor
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Action
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Columns
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Created
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.EstimatedImpact
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IncludedColumns
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IndexScript
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IndexType
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.LastModified
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.ReportedImpact
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Schema
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.State
  - Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Table
  langs:
  - csharp
  - vb
  name: RecommendedIndexProperties
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RecommendedIndexProperties
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRepresents the properties of an Azure SQL Database recommended index.\r\n"
  example: []
  syntax:
    content: public class RecommendedIndexProperties
    content.vb: Public Class RecommendedIndexProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Action
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Action
  id: Action
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: Action
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Action
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Action
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the proposed index action. We suggest user to create\r\nmissing index, drop unused index or to rebuild already existing\r\nindex to improve its performance. Possible values are 'Create',\r\n'Drop', 'Rebuild'.\r\n"
  example: []
  syntax:
    content: >-
      public string Action

      {

          get;

          set;

      }
    content.vb: Public Property Action As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Columns
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Columns
  id: Columns
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: Columns
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Columns
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Columns
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Columns over which to build index\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> Columns

      {

          get;

          set;

      }
    content.vb: Public Property Columns As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Created
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Created
  id: Created
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: Created
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Created
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Created
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the UTC datetime showing when this resource was\r\ncreated.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime Created

      {

          get;

          set;

      }
    content.vb: Public Property Created As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.EstimatedImpact
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.EstimatedImpact
  id: EstimatedImpact
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: EstimatedImpact
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.EstimatedImpact
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EstimatedImpact
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the estimated impact of doing recommended index\r\naction.\r\n"
  example: []
  syntax:
    content: >-
      public IList<OperationImpact> EstimatedImpact

      {

          get;

          set;

      }
    content.vb: Public Property EstimatedImpact As IList(Of OperationImpact)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.OperationImpact}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IncludedColumns
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IncludedColumns
  id: IncludedColumns
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: IncludedColumns
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IncludedColumns
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IncludedColumns
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the list of column names to be included in the index\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> IncludedColumns

      {

          get;

          set;

      }
    content.vb: Public Property IncludedColumns As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IndexScript
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IndexScript
  id: IndexScript
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: IndexScript
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IndexScript
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IndexScript
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the full build index script\r\n"
  example: []
  syntax:
    content: >-
      public string IndexScript

      {

          get;

          set;

      }
    content.vb: Public Property IndexScript As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IndexType
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IndexType
  id: IndexType
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: IndexType
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.IndexType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IndexType
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the type of index (CLUSTERED, NONCLUSTERED,\r\nCOLUMNSTORE, CLUSTERED COLUMNSTORE)\r\n"
  example: []
  syntax:
    content: >-
      public string IndexType

      {

          get;

          set;

      }
    content.vb: Public Property IndexType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.LastModified
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.LastModified
  id: LastModified
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: LastModified
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.LastModified
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LastModified
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the UTC datetime of when was this resource last\r\nchanged.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime LastModified

      {

          get;

          set;

      }
    content.vb: Public Property LastModified As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.ReportedImpact
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.ReportedImpact
  id: ReportedImpact
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: ReportedImpact
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.ReportedImpact
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReportedImpact
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the values reported after index action is complete.\r\n"
  example: []
  syntax:
    content: >-
      public IList<OperationImpact> ReportedImpact

      {

          get;

          set;

      }
    content.vb: Public Property ReportedImpact As IList(Of OperationImpact)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.OperationImpact}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Schema
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Schema
  id: Schema
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: Schema
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Schema
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Schema
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 145
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the schema where table to build index over resides\r\n"
  example: []
  syntax:
    content: >-
      public string Schema

      {

          get;

          set;

      }
    content.vb: Public Property Schema As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.State
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.State
  id: State
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: State
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.State
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: State
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 159
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the state recommendation is in. Current options are:\r\n'Active', 'Pending', 'Executing', 'Verifying', 'Pending Revert',\r\n'Reverting', 'Reverted', 'Ignored', 'Expired', 'Blocked',\r\n'Success'.\r\n"
  example: []
  syntax:
    content: >-
      public string State

      {

          get;

          set;

      }
    content.vb: Public Property State As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Table
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Table
  id: Table
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: Table
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.Table
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Table
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 170
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the table on which to build index.\r\n"
  example: []
  syntax:
    content: >-
      public string Table

      {

          get;

          set;

      }
    content.vb: Public Property Table As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties
  langs:
  - csharp
  - vb
  name: RecommendedIndexProperties()
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedIndexProperties.RecommendedIndexProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedIndexProperties.cs
    startLine: 179
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the RecommendedIndexProperties class.\r\n"
  example: []
  syntax:
    content: public RecommendedIndexProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.OperationImpact}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<OperationImpact>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Sql.Models.OperationImpact>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Sql.Models.OperationImpact)
  name.vb: IList(Of OperationImpact)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.OperationImpact
    name: OperationImpact
    fullName: Microsoft.Azure.Management.Sql.Models.OperationImpact
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.OperationImpact
    name: OperationImpact
    fullName: Microsoft.Azure.Management.Sql.Models.OperationImpact
  - name: )
    fullName: )
