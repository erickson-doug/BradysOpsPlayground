items:
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  commentId: T:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  id: RecommendedElasticPoolProperties
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.#ctor
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseDtuMax
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseDtuMin
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseEdition
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Databases
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Dtu
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.MaxObservedDtu
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.MaxObservedStorageMB
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Metrics
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.ObservationPeriodEnd
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.ObservationPeriodStart
  - Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.StorageMB
  langs:
  - csharp
  - vb
  name: RecommendedElasticPoolProperties
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RecommendedElasticPoolProperties
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRepresents the properties of an Azure SQL Recommended Elastic Pool.\r\n"
  example: []
  syntax:
    content: public class RecommendedElasticPoolProperties
    content.vb: Public Class RecommendedElasticPoolProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseDtuMax
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseDtuMax
  id: DatabaseDtuMax
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: DatabaseDtuMax
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseDtuMax
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DatabaseDtuMax
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the maximum DTU for the database.\r\n"
  example: []
  syntax:
    content: >-
      public double DatabaseDtuMax

      {

          get;

          set;

      }
    content.vb: Public Property DatabaseDtuMax As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseDtuMin
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseDtuMin
  id: DatabaseDtuMin
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: DatabaseDtuMin
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseDtuMin
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DatabaseDtuMin
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the minimum DTU for the database.\r\n"
  example: []
  syntax:
    content: >-
      public double DatabaseDtuMin

      {

          get;

          set;

      }
    content.vb: Public Property DatabaseDtuMin As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseEdition
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseEdition
  id: DatabaseEdition
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: DatabaseEdition
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.DatabaseEdition
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DatabaseEdition
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the edition of the Azure SQL Recommended Elastic\r\nPool. The DatabaseEditions enumeration contains all the valid\r\neditions.\r\n"
  example: []
  syntax:
    content: >-
      public string DatabaseEdition

      {

          get;

          set;

      }
    content.vb: Public Property DatabaseEdition As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Databases
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Databases
  id: Databases
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: Databases
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Databases
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Databases
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the list of Azure Sql Databases in this pool.\r\nExpanded property\r\n"
  example: []
  syntax:
    content: >-
      public IList<Database> Databases

      {

          get;

          set;

      }
    content.vb: Public Property Databases As IList(Of Database)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.Database}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Dtu
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Dtu
  id: Dtu
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: Dtu
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Dtu
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Dtu
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the DTU for the Sql Azure Recommended Elastic Pool.\r\n"
  example: []
  syntax:
    content: >-
      public double Dtu

      {

          get;

          set;

      }
    content.vb: Public Property Dtu As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.MaxObservedDtu
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.MaxObservedDtu
  id: MaxObservedDtu
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: MaxObservedDtu
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.MaxObservedDtu
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MaxObservedDtu
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets maximum observed DTU.\r\n"
  example: []
  syntax:
    content: >-
      public double MaxObservedDtu

      {

          get;

          set;

      }
    content.vb: Public Property MaxObservedDtu As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.MaxObservedStorageMB
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.MaxObservedStorageMB
  id: MaxObservedStorageMB
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: MaxObservedStorageMB
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.MaxObservedStorageMB
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MaxObservedStorageMB
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets maximum observed storage in megabytes.\r\n"
  example: []
  syntax:
    content: >-
      public double MaxObservedStorageMB

      {

          get;

          set;

      }
    content.vb: Public Property MaxObservedStorageMB As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Metrics
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Metrics
  id: Metrics
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: Metrics
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.Metrics
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Metrics
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the list of Azure Sql Databases housed in\r\nthe server. Expanded property\r\n"
  example: []
  syntax:
    content: >-
      public IList<RecommendedElasticPoolMetric> Metrics

      {

          get;

          set;

      }
    content.vb: Public Property Metrics As IList(Of RecommendedElasticPoolMetric)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolMetric}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.ObservationPeriodEnd
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.ObservationPeriodEnd
  id: ObservationPeriodEnd
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: ObservationPeriodEnd
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.ObservationPeriodEnd
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ObservationPeriodEnd
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the observation period start.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime ObservationPeriodEnd

      {

          get;

          set;

      }
    content.vb: Public Property ObservationPeriodEnd As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.ObservationPeriodStart
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.ObservationPeriodStart
  id: ObservationPeriodStart
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: ObservationPeriodStart
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.ObservationPeriodStart
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ObservationPeriodStart
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the observation period start.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime ObservationPeriodStart

      {

          get;

          set;

      }
    content.vb: Public Property ObservationPeriodStart As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.StorageMB
  commentId: P:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.StorageMB
  id: StorageMB
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: StorageMB
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.StorageMB
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageMB
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets storage size in megabytes.\r\n"
  example: []
  syntax:
    content: >-
      public double StorageMB

      {

          get;

          set;

      }
    content.vb: Public Property StorageMB As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: RecommendedElasticPoolProperties()
  fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolProperties.RecommendedElasticPoolProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/RecommendedElasticPoolProperties.cs
    startLine: 163
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the RecommendedElasticPoolProperties\r\nclass.\r\n"
  example: []
  syntax:
    content: public RecommendedElasticPoolProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  fullName: System.Double
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.Database}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Database>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Sql.Models.Database>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Sql.Models.Database)
  name.vb: IList(Of Database)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.Database
    name: Database
    fullName: Microsoft.Azure.Management.Sql.Models.Database
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.Database
    name: Database
    fullName: Microsoft.Azure.Management.Sql.Models.Database
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolMetric}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<RecommendedElasticPoolMetric>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolMetric>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolMetric)
  name.vb: IList(Of RecommendedElasticPoolMetric)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolMetric
    name: RecommendedElasticPoolMetric
    fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolMetric
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolMetric
    name: RecommendedElasticPoolMetric
    fullName: Microsoft.Azure.Management.Sql.Models.RecommendedElasticPoolMetric
  - name: )
    fullName: )
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
