items:
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  commentId: T:Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  id: ExportRequestParameters
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.#ctor
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLogin
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLoginPassword
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AuthenticationType
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKey
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKeyType
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageUri
  langs:
  - csharp
  - vb
  name: ExportRequestParameters
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExportRequestParameters
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nExport Azure SQL Database parameters.\r\n"
  example: []
  syntax:
    content: public class ExportRequestParameters
    content.vb: Public Class ExportRequestParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLogin
  commentId: P:Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLogin
  id: AdministratorLogin
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  langs:
  - csharp
  - vb
  name: AdministratorLogin
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLogin
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AdministratorLogin
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the name of the SQL administrator.\r\n"
  example: []
  syntax:
    content: >-
      public string AdministratorLogin

      {

          get;

          set;

      }
    content.vb: Public Property AdministratorLogin As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLoginPassword
  commentId: P:Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLoginPassword
  id: AdministratorLoginPassword
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  langs:
  - csharp
  - vb
  name: AdministratorLoginPassword
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLoginPassword
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AdministratorLoginPassword
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the password of the SQL administrator.\r\n"
  example: []
  syntax:
    content: >-
      public string AdministratorLoginPassword

      {

          get;

          set;

      }
    content.vb: Public Property AdministratorLoginPassword As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AuthenticationType
  commentId: P:Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AuthenticationType
  id: AuthenticationType
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  langs:
  - csharp
  - vb
  name: AuthenticationType
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AuthenticationType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AuthenticationType
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the authentication type.\r\n"
  example: []
  syntax:
    content: >-
      public string AuthenticationType

      {

          get;

          set;

      }
    content.vb: Public Property AuthenticationType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKey
  commentId: P:Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKey
  id: StorageKey
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  langs:
  - csharp
  - vb
  name: StorageKey
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKey
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageKey
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the storage key to use.\r\n"
  example: []
  syntax:
    content: >-
      public string StorageKey

      {

          get;

          set;

      }
    content.vb: Public Property StorageKey As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKeyType
  commentId: P:Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKeyType
  id: StorageKeyType
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  langs:
  - csharp
  - vb
  name: StorageKeyType
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKeyType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageKeyType
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the type of the storage key to use. Valid\r\nvalues are StorageAccessKey and SharedAccessKey.\r\n"
  example: []
  syntax:
    content: >-
      public string StorageKeyType

      {

          get;

          set;

      }
    content.vb: Public Property StorageKeyType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageUri
  commentId: P:Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageUri
  id: StorageUri
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  langs:
  - csharp
  - vb
  name: StorageUri
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageUri
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageUri
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the storage uri to use.\r\n"
  example: []
  syntax:
    content: >-
      public Uri StorageUri

      {

          get;

          set;

      }
    content.vb: Public Property StorageUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  langs:
  - csharp
  - vb
  name: ExportRequestParameters()
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.ExportRequestParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ExportRequestParameters.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the ExportRequestParameters class.\r\n"
  example: []
  syntax:
    content: public ExportRequestParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
