items:
- uid: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties
  commentId: T:Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties
  id: ServiceObjectiveProperties
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.#ctor
  - Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.Description
  - Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.Enabled
  - Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.IsDefault
  - Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.IsSystem
  - Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.ServiceObjectiveName
  langs:
  - csharp
  - vb
  name: ServiceObjectiveProperties
  fullName: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceObjectiveProperties
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRepresents the properties of an Azure SQL Database Service Objective.\r\n"
  example: []
  syntax:
    content: public class ServiceObjectiveProperties
    content.vb: Public Class ServiceObjectiveProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.Description
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.Description
  id: Description
  parent: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties
  langs:
  - csharp
  - vb
  name: Description
  fullName: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.Description
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Description
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the description for the service level objective.\r\n"
  example: []
  syntax:
    content: >-
      public string Description

      {

          get;

          set;

      }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.Enabled
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.Enabled
  id: Enabled
  parent: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties
  langs:
  - csharp
  - vb
  name: Enabled
  fullName: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.Enabled
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Enabled
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets whether the service level objective is enabled.\r\n"
  example: []
  syntax:
    content: >-
      public bool Enabled

      {

          get;

          set;

      }
    content.vb: Public Property Enabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.IsDefault
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.IsDefault
  id: IsDefault
  parent: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties
  langs:
  - csharp
  - vb
  name: IsDefault
  fullName: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.IsDefault
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsDefault
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets whether the service level objective is the default\r\nservice objective.\r\n"
  example: []
  syntax:
    content: >-
      public bool IsDefault

      {

          get;

          set;

      }
    content.vb: Public Property IsDefault As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.IsSystem
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.IsSystem
  id: IsSystem
  parent: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties
  langs:
  - csharp
  - vb
  name: IsSystem
  fullName: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.IsSystem
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsSystem
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets whether the service level objective is a system\r\nservice objective.\r\n"
  example: []
  syntax:
    content: >-
      public bool IsSystem

      {

          get;

          set;

      }
    content.vb: Public Property IsSystem As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.ServiceObjectiveName
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.ServiceObjectiveName
  id: ServiceObjectiveName
  parent: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties
  langs:
  - csharp
  - vb
  name: ServiceObjectiveName
  fullName: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.ServiceObjectiveName
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceObjectiveName
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the name for the service objective.\r\n"
  example: []
  syntax:
    content: >-
      public string ServiceObjectiveName

      {

          get;

          set;

      }
    content.vb: Public Property ServiceObjectiveName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties
  langs:
  - csharp
  - vb
  name: ServiceObjectiveProperties()
  fullName: Microsoft.Azure.Management.Sql.Models.ServiceObjectiveProperties.ServiceObjectiveProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServiceObjectiveProperties.cs
    startLine: 91
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the ServiceObjectiveProperties class.\r\n"
  example: []
  syntax:
    content: public ServiceObjectiveProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
