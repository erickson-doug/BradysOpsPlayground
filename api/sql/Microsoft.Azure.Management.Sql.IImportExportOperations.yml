items:
- uid: Microsoft.Azure.Management.Sql.IImportExportOperations
  commentId: T:Microsoft.Azure.Management.Sql.IImportExportOperations
  id: IImportExportOperations
  parent: Microsoft.Azure.Management.Sql
  children:
  - Microsoft.Azure.Management.Sql.IImportExportOperations.ExportAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Sql.IImportExportOperations.GetImportExportOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Sql.IImportExportOperations.ImportAsync(System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Sql.IImportExportOperations.ImportToExistingDatabaseAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IImportExportOperations
  fullName: Microsoft.Azure.Management.Sql.IImportExportOperations
  type: Interface
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/IImportExportOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IImportExportOperations
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/IImportExportOperations.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nRepresents all the operations for import/export on Azure SQL Databases.\r\nContains operations to: Import, Export, Get Import/Export status for\r\na database.\r\n"
  example: []
  syntax:
    content: public interface IImportExportOperations
    content.vb: Public Interface IImportExportOperations
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Management.Sql.IImportExportOperations.ExportAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Sql.IImportExportOperations.ExportAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters,System.Threading.CancellationToken)
  id: ExportAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Sql.IImportExportOperations
  langs:
  - csharp
  - vb
  name: ExportAsync(String, String, String, ExportRequestParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Sql.IImportExportOperations.ExportAsync(System.String, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ExportRequestParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/IImportExportOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExportAsync
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/IImportExportOperations.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nExports a Azure SQL Database to bacpac. To determine the status of\r\nthe operation call GetImportExportOperationStatus.\r\n"
  example: []
  syntax:
    content: Task<ImportExportResponse> ExportAsync(string resourceGroupName, string serverName, string databaseName, ExportRequestParameters parameters, CancellationToken cancellationToken)
    content.vb: Function ExportAsync(resourceGroupName As String, serverName As String, databaseName As String, parameters As ExportRequestParameters, cancellationToken As CancellationToken) As Task(Of ImportExportResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\r\nThe name of the Resource Group to which the Azure SQL Server\r\nbelongs.\r\n"
    - id: serverName
      type: System.String
      description: "\r\nThe name of the Azure SQL Server on which the database is hosted.\r\n"
    - id: databaseName
      type: System.String
      description: "\r\nThe name of the Azure SQL Database to export.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
      description: "\r\nThe required parameters for exporting a database.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
      description: "\r\nResponse Azure Sql Import/Export operations.\r\n"
- uid: Microsoft.Azure.Management.Sql.IImportExportOperations.GetImportExportOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Sql.IImportExportOperations.GetImportExportOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetImportExportOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Sql.IImportExportOperations
  langs:
  - csharp
  - vb
  name: GetImportExportOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Sql.IImportExportOperations.GetImportExportOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/IImportExportOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetImportExportOperationStatusAsync
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/IImportExportOperations.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nGets the status of an Azure Sql Database import/export operation.\r\n"
  example: []
  syntax:
    content: Task<ImportExportOperationStatusResponse> GetImportExportOperationStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Function GetImportExportOperationStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of ImportExportOperationStatusResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nLocation value returned by the Begin operation\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse}
      description: "\r\nResponse for Azure Sql Import/Export Status operation.\r\n"
- uid: Microsoft.Azure.Management.Sql.IImportExportOperations.ImportAsync(System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Sql.IImportExportOperations.ImportAsync(System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters,System.Threading.CancellationToken)
  id: ImportAsync(System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Sql.IImportExportOperations
  langs:
  - csharp
  - vb
  name: ImportAsync(String, String, ImportRequestParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Sql.IImportExportOperations.ImportAsync(System.String, System.String, Microsoft.Azure.Management.Sql.Models.ImportRequestParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/IImportExportOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ImportAsync
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/IImportExportOperations.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nImports a bacpac to Azure SQL Database. To determine the status of\r\nthe operation call GetImportExportOperationStatus.\r\n"
  example: []
  syntax:
    content: Task<ImportExportResponse> ImportAsync(string resourceGroupName, string serverName, ImportRequestParameters parameters, CancellationToken cancellationToken)
    content.vb: Function ImportAsync(resourceGroupName As String, serverName As String, parameters As ImportRequestParameters, cancellationToken As CancellationToken) As Task(Of ImportExportResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\r\nThe name of the Resource Group to which the Azure SQL Server\r\nbelongs.\r\n"
    - id: serverName
      type: System.String
      description: "\r\nThe name of the Azure SQL Server on which the database is hosted.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
      description: "\r\nThe required parameters for importing to a database.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
      description: "\r\nResponse Azure Sql Import/Export operations.\r\n"
- uid: Microsoft.Azure.Management.Sql.IImportExportOperations.ImportToExistingDatabaseAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Sql.IImportExportOperations.ImportToExistingDatabaseAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres,System.Threading.CancellationToken)
  id: ImportToExistingDatabaseAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Sql.IImportExportOperations
  langs:
  - csharp
  - vb
  name: ImportToExistingDatabaseAsync(String, String, String, ImportExtensionRequestParameteres, CancellationToken)
  fullName: Microsoft.Azure.Management.Sql.IImportExportOperations.ImportToExistingDatabaseAsync(System.String, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/IImportExportOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ImportToExistingDatabaseAsync
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/IImportExportOperations.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nImports a bacpac to an empty Azure SQL Database. To determine the\r\nstatus of the operation call GetImportExportOperationStatus.\r\n"
  example: []
  syntax:
    content: Task<ImportExportResponse> ImportToExistingDatabaseAsync(string resourceGroupName, string serverName, string databaseName, ImportExtensionRequestParameteres parameters, CancellationToken cancellationToken)
    content.vb: Function ImportToExistingDatabaseAsync(resourceGroupName As String, serverName As String, databaseName As String, parameters As ImportExtensionRequestParameteres, cancellationToken As CancellationToken) As Task(Of ImportExportResponse)
    parameters:
    - id: resourceGroupName
      type: System.String
      description: "\r\nThe name of the Resource Group to which the Azure SQL Server\r\nbelongs.\r\n"
    - id: serverName
      type: System.String
      description: "\r\nThe name of the Azure SQL Server on which the database is hosted.\r\n"
    - id: databaseName
      type: System.String
      description: "\r\nThe name of the Azure SQL Database to import to.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
      description: "\r\nThe required parameters for importing to a database.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
      description: "\r\nResponse Azure Sql Import/Export operations.\r\n"
references:
- uid: Microsoft.Azure.Management.Sql
  isExternal: false
  name: Microsoft.Azure.Management.Sql
  fullName: Microsoft.Azure.Management.Sql
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ExportRequestParameters
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ImportExportResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Sql.Models.ImportExportResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Sql.Models.ImportExportResponse)
  name.vb: Task(Of ImportExportResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
    name: ImportExportResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
    name: ImportExportResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ImportExportOperationStatusResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse)
  name.vb: Task(Of ImportExportOperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
    name: ImportExportOperationStatusResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
    name: ImportExportOperationStatusResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportRequestParameters
  fullName: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
- uid: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportExtensionRequestParameteres
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
