items:
- uid: Microsoft.Azure.Management.Sql.Models.DatabaseEditions
  commentId: T:Microsoft.Azure.Management.Sql.Models.DatabaseEditions
  id: DatabaseEditions
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Basic
  - Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Business
  - Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Free
  - Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Premium
  - Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Standard
  - Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Web
  langs:
  - csharp
  - vb
  name: DatabaseEditions
  fullName: Microsoft.Azure.Management.Sql.Models.DatabaseEditions
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DatabaseEditions
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nDefines the valid editions of Azure SQL Databases. See MSDN for more\r\ninformation.\r\n"
  example: []
  syntax:
    content: public class DatabaseEditions
    content.vb: Public Class DatabaseEditions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Web
  commentId: F:Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Web
  id: Web
  parent: Microsoft.Azure.Management.Sql.Models.DatabaseEditions
  langs:
  - csharp
  - vb
  name: Web
  fullName: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Web
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Web
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nThe Web Edition Database is best suited for small Web applications\r\nand workgroup or departmental applications.\r\n"
  example: []
  syntax:
    content: public const string Web = "Web"
    content.vb: Public Const Web As String = "Web"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Business
  commentId: F:Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Business
  id: Business
  parent: Microsoft.Azure.Management.Sql.Models.DatabaseEditions
  langs:
  - csharp
  - vb
  name: Business
  fullName: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Business
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Business
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nThe Business Edition Database is best suited for independent\r\nsoftware vendors (ISVs), line-of-business (LOB) applications, and\r\nenterprise applications.\r\n"
  example: []
  syntax:
    content: public const string Business = "Business"
    content.vb: Public Const Business As String = "Business"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Basic
  commentId: F:Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Basic
  id: Basic
  parent: Microsoft.Azure.Management.Sql.Models.DatabaseEditions
  langs:
  - csharp
  - vb
  name: Basic
  fullName: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Basic
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Basic
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  syntax:
    content: public const string Basic = "Basic"
    content.vb: Public Const Basic As String = "Basic"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Standard
  commentId: F:Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Standard
  id: Standard
  parent: Microsoft.Azure.Management.Sql.Models.DatabaseEditions
  langs:
  - csharp
  - vb
  name: Standard
  fullName: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Standard
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Standard
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nThe Standard Edition Database is best suited for a group of users\r\nmakingfewer than 1000 transactions per minute.\r\n"
  example: []
  syntax:
    content: public const string Standard = "Standard"
    content.vb: Public Const Standard As String = "Standard"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Premium
  commentId: F:Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Premium
  id: Premium
  parent: Microsoft.Azure.Management.Sql.Models.DatabaseEditions
  langs:
  - csharp
  - vb
  name: Premium
  fullName: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Premium
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Premium
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nThe Premium Edition Database is for situations requiring a high\r\nnumber of transactionsper second (>100).  Supports more users than\r\nBasic and Standard editions.\r\n"
  example: []
  syntax:
    content: public const string Premium = "Premium"
    content.vb: Public Const Premium As String = "Premium"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Free
  commentId: F:Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Free
  id: Free
  parent: Microsoft.Azure.Management.Sql.Models.DatabaseEditions
  langs:
  - csharp
  - vb
  name: Free
  fullName: Microsoft.Azure.Management.Sql.Models.DatabaseEditions.Free
  type: Field
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Free
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/DatabaseEditions.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nThe Free Edition Database is available for certain offers and\r\nproduct bundles.\r\n"
  example: []
  syntax:
    content: public const string Free = "Free"
    content.vb: Public Const Free As String = "Free"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
