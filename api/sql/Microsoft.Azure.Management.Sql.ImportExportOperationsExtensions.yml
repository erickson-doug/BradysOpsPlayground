items:
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  id: ImportExportOperationsExtensions
  parent: Microsoft.Azure.Management.Sql
  children:
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  - Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  langs:
  - csharp
  - vb
  name: ImportExportOperationsExtensions
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ImportExportOperationsExtensions
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nThe Windows Azure SQL Database management API provides a RESTful set of\r\nweb services that interact with Windows Azure SQL Database services to\r\nmanage your databases. The API enables users to create, retrieve,\r\nupdate, and delete databases and servers.\r\n"
  example: []
  syntax:
    content: public class ImportExportOperationsExtensions
    content.vb: Public Class ImportExportOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  id: Export(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: Export(IImportExportOperations, String, String, String, ExportRequestParameters)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Export(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Export
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nExports a Azure SQL Database to bacpac. To determine the status of\r\nthe operation call GetImportExportOperationStatus.\r\n"
  example: []
  syntax:
    content: public static ImportExportResponse Export(IImportExportOperations operations, string resourceGroupName, string serverName, string databaseName, ExportRequestParameters parameters)
    content.vb: Public Shared Function Export(operations As IImportExportOperations, resourceGroupName As String, serverName As String, databaseName As String, parameters As ExportRequestParameters) As ImportExportResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\r\n"
    - id: resourceGroupName
      type: System.String
      description: "\r\nRequired. The name of the Resource Group to which the Azure SQL\r\nServer belongs.\r\n"
    - id: serverName
      type: System.String
      description: "\r\nRequired. The name of the Azure SQL Server on which the database is\r\nhosted.\r\n"
    - id: databaseName
      type: System.String
      description: "\r\nRequired. The name of the Azure SQL Database to export.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
      description: "\r\nRequired. The required parameters for exporting a database.\r\n"
    return:
      type: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
      description: "\r\nResponse Azure Sql Import/Export operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  id: ExportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExportAsync(IImportExportOperations, String, String, String, ExportRequestParameters)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ExportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ExportRequestParameters)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExportAsync
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nExports a Azure SQL Database to bacpac. To determine the status of\r\nthe operation call GetImportExportOperationStatus.\r\n"
  example: []
  syntax:
    content: public static Task<ImportExportResponse> ExportAsync(IImportExportOperations operations, string resourceGroupName, string serverName, string databaseName, ExportRequestParameters parameters)
    content.vb: Public Shared Function ExportAsync(operations As IImportExportOperations, resourceGroupName As String, serverName As String, databaseName As String, parameters As ExportRequestParameters) As Task(Of ImportExportResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\r\n"
    - id: resourceGroupName
      type: System.String
      description: "\r\nRequired. The name of the Resource Group to which the Azure SQL\r\nServer belongs.\r\n"
    - id: serverName
      type: System.String
      description: "\r\nRequired. The name of the Azure SQL Server on which the database is\r\nhosted.\r\n"
    - id: databaseName
      type: System.String
      description: "\r\nRequired. The name of the Azure SQL Database to export.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
      description: "\r\nRequired. The required parameters for exporting a database.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
      description: "\r\nResponse Azure Sql Import/Export operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  id: GetImportExportOperationStatus(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetImportExportOperationStatus(IImportExportOperations, String)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatus(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetImportExportOperationStatus
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nGets the status of an Azure Sql Database import/export operation.\r\n"
  example: []
  syntax:
    content: public static ImportExportOperationStatusResponse GetImportExportOperationStatus(IImportExportOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetImportExportOperationStatus(operations As IImportExportOperations, operationStatusLink As String) As ImportExportOperationStatusResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation\r\n"
    return:
      type: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
      description: "\r\nResponse for Azure Sql Import/Export Status operation.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  id: GetImportExportOperationStatusAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String)
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetImportExportOperationStatusAsync(IImportExportOperations, String)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.GetImportExportOperationStatusAsync(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetImportExportOperationStatusAsync
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 137
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nGets the status of an Azure Sql Database import/export operation.\r\n"
  example: []
  syntax:
    content: public static Task<ImportExportOperationStatusResponse> GetImportExportOperationStatusAsync(IImportExportOperations operations, string operationStatusLink)
    content.vb: Public Shared Function GetImportExportOperationStatusAsync(operations As IImportExportOperations, operationStatusLink As String) As Task(Of ImportExportOperationStatusResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\r\n"
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse}
      description: "\r\nResponse for Azure Sql Import/Export Status operation.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  id: Import(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: Import(IImportExportOperations, String, String, ImportRequestParameters)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.Import(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Import
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 164
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nImports a bacpac to Azure SQL Database. To determine the status of\r\nthe operation call GetImportExportOperationStatus.\r\n"
  example: []
  syntax:
    content: public static ImportExportResponse Import(IImportExportOperations operations, string resourceGroupName, string serverName, ImportRequestParameters parameters)
    content.vb: Public Shared Function Import(operations As IImportExportOperations, resourceGroupName As String, serverName As String, parameters As ImportRequestParameters) As ImportExportResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\r\n"
    - id: resourceGroupName
      type: System.String
      description: "\r\nRequired. The name of the Resource Group to which the Azure SQL\r\nServer belongs.\r\n"
    - id: serverName
      type: System.String
      description: "\r\nRequired. The name of the Azure SQL Server on which the database is\r\nhosted.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
      description: "\r\nRequired. The required parameters for importing to a database.\r\n"
    return:
      type: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
      description: "\r\nResponse Azure Sql Import/Export operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  id: ImportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportAsync(IImportExportOperations, String, String, ImportRequestParameters)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportAsync(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ImportRequestParameters)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ImportAsync
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 195
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nImports a bacpac to Azure SQL Database. To determine the status of\r\nthe operation call GetImportExportOperationStatus.\r\n"
  example: []
  syntax:
    content: public static Task<ImportExportResponse> ImportAsync(IImportExportOperations operations, string resourceGroupName, string serverName, ImportRequestParameters parameters)
    content.vb: Public Shared Function ImportAsync(operations As IImportExportOperations, resourceGroupName As String, serverName As String, parameters As ImportRequestParameters) As Task(Of ImportExportResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\r\n"
    - id: resourceGroupName
      type: System.String
      description: "\r\nRequired. The name of the Resource Group to which the Azure SQL\r\nServer belongs.\r\n"
    - id: serverName
      type: System.String
      description: "\r\nRequired. The name of the Azure SQL Server on which the database is\r\nhosted.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
      description: "\r\nRequired. The required parameters for importing to a database.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
      description: "\r\nResponse Azure Sql Import/Export operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  id: ImportToExistingDatabase(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportToExistingDatabase(IImportExportOperations, String, String, String, ImportExtensionRequestParameteres)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabase(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ImportToExistingDatabase
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 225
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nImports a bacpac to an empty Azure SQL Database. To determine the\r\nstatus of the operation call GetImportExportOperationStatus.\r\n"
  example: []
  syntax:
    content: public static ImportExportResponse ImportToExistingDatabase(IImportExportOperations operations, string resourceGroupName, string serverName, string databaseName, ImportExtensionRequestParameteres parameters)
    content.vb: Public Shared Function ImportToExistingDatabase(operations As IImportExportOperations, resourceGroupName As String, serverName As String, databaseName As String, parameters As ImportExtensionRequestParameteres) As ImportExportResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\r\n"
    - id: resourceGroupName
      type: System.String
      description: "\r\nRequired. The name of the Resource Group to which the Azure SQL\r\nServer belongs.\r\n"
    - id: serverName
      type: System.String
      description: "\r\nRequired. The name of the Azure SQL Server on which the database is\r\nhosted.\r\n"
    - id: databaseName
      type: System.String
      description: "\r\nRequired. The name of the Azure SQL Database to import to.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
      description: "\r\nRequired. The required parameters for importing to a database.\r\n"
    return:
      type: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
      description: "\r\nResponse Azure Sql Import/Export operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  commentId: M:Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  id: ImportToExistingDatabaseAsync(Microsoft.Azure.Management.Sql.IImportExportOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  parent: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportToExistingDatabaseAsync(IImportExportOperations, String, String, String, ImportExtensionRequestParameteres)
  fullName: Microsoft.Azure.Management.Sql.ImportExportOperationsExtensions.ImportToExistingDatabaseAsync(Microsoft.Azure.Management.Sql.IImportExportOperations, System.String, System.String, System.String, Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ImportToExistingDatabaseAsync
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/ImportExportOperationsExtensions.cs
    startLine: 259
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql
  summary: "\r\nImports a bacpac to an empty Azure SQL Database. To determine the\r\nstatus of the operation call GetImportExportOperationStatus.\r\n"
  example: []
  syntax:
    content: public static Task<ImportExportResponse> ImportToExistingDatabaseAsync(IImportExportOperations operations, string resourceGroupName, string serverName, string databaseName, ImportExtensionRequestParameteres parameters)
    content.vb: Public Shared Function ImportToExistingDatabaseAsync(operations As IImportExportOperations, resourceGroupName As String, serverName As String, databaseName As String, parameters As ImportExtensionRequestParameteres) As Task(Of ImportExportResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Sql.IImportExportOperations
      description: "\r\nReference to the\r\nMicrosoft.Azure.Management.Sql.IImportExportOperations.\r\n"
    - id: resourceGroupName
      type: System.String
      description: "\r\nRequired. The name of the Resource Group to which the Azure SQL\r\nServer belongs.\r\n"
    - id: serverName
      type: System.String
      description: "\r\nRequired. The name of the Azure SQL Server on which the database is\r\nhosted.\r\n"
    - id: databaseName
      type: System.String
      description: "\r\nRequired. The name of the Azure SQL Database to import to.\r\n"
    - id: parameters
      type: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
      description: "\r\nRequired. The required parameters for importing to a database.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
      description: "\r\nResponse Azure Sql Import/Export operations.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Sql
  isExternal: false
  name: Microsoft.Azure.Management.Sql
  fullName: Microsoft.Azure.Management.Sql
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Sql.IImportExportOperations
  parent: Microsoft.Azure.Management.Sql
  isExternal: false
  name: IImportExportOperations
  fullName: Microsoft.Azure.Management.Sql.IImportExportOperations
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ExportRequestParameters
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
- uid: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportExportResponse
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ImportExportResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Sql.Models.ImportExportResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Sql.Models.ImportExportResponse)
  name.vb: Task(Of ImportExportResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
    name: ImportExportResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
    name: ImportExportResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportResponse
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportExportOperationStatusResponse
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ImportExportOperationStatusResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse)
  name.vb: Task(Of ImportExportOperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
    name: ImportExportOperationStatusResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
    name: ImportExportOperationStatusResponse
    fullName: Microsoft.Azure.Management.Sql.Models.ImportExportOperationStatusResponse
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportRequestParameters
  fullName: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
- uid: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportExtensionRequestParameteres
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
