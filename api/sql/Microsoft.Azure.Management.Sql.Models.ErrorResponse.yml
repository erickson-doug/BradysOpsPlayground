items:
- uid: Microsoft.Azure.Management.Sql.Models.ErrorResponse
  commentId: T:Microsoft.Azure.Management.Sql.Models.ErrorResponse
  id: ErrorResponse
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.ErrorResponse.#ctor
  - Microsoft.Azure.Management.Sql.Models.ErrorResponse.#ctor(System.String,System.String)
  - Microsoft.Azure.Management.Sql.Models.ErrorResponse.Code
  - Microsoft.Azure.Management.Sql.Models.ErrorResponse.Message
  - Microsoft.Azure.Management.Sql.Models.ErrorResponse.Target
  langs:
  - csharp
  - vb
  name: ErrorResponse
  fullName: Microsoft.Azure.Management.Sql.Models.ErrorResponse
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ErrorResponse
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  syntax:
    content: public class ErrorResponse
    content.vb: Public Class ErrorResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.ErrorResponse.Code
  commentId: P:Microsoft.Azure.Management.Sql.Models.ErrorResponse.Code
  id: Code
  parent: Microsoft.Azure.Management.Sql.Models.ErrorResponse
  langs:
  - csharp
  - vb
  name: Code
  fullName: Microsoft.Azure.Management.Sql.Models.ErrorResponse.Code
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Code
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRequired. Gets or sets the error code returned from the server.\r\n"
  example: []
  syntax:
    content: >-
      public string Code

      {

          get;

          set;

      }
    content.vb: Public Property Code As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ErrorResponse.Message
  commentId: P:Microsoft.Azure.Management.Sql.Models.ErrorResponse.Message
  id: Message
  parent: Microsoft.Azure.Management.Sql.Models.ErrorResponse
  langs:
  - csharp
  - vb
  name: Message
  fullName: Microsoft.Azure.Management.Sql.Models.ErrorResponse.Message
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Message
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRequired. Gets or sets the error message returned from the server.\r\n"
  example: []
  syntax:
    content: >-
      public string Message

      {

          get;

          set;

      }
    content.vb: Public Property Message As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ErrorResponse.Target
  commentId: P:Microsoft.Azure.Management.Sql.Models.ErrorResponse.Target
  id: Target
  parent: Microsoft.Azure.Management.Sql.Models.ErrorResponse
  langs:
  - csharp
  - vb
  name: Target
  fullName: Microsoft.Azure.Management.Sql.Models.ErrorResponse.Target
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Target
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the target of the error.\r\n"
  example: []
  syntax:
    content: >-
      public string Target

      {

          get;

          set;

      }
    content.vb: Public Property Target As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ErrorResponse.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.ErrorResponse.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.ErrorResponse
  langs:
  - csharp
  - vb
  name: ErrorResponse()
  fullName: Microsoft.Azure.Management.Sql.Models.ErrorResponse.ErrorResponse()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the ErrorResponse class.\r\n"
  example: []
  syntax:
    content: public ErrorResponse()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ErrorResponse.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Sql.Models.ErrorResponse.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Management.Sql.Models.ErrorResponse
  langs:
  - csharp
  - vb
  name: ErrorResponse(String, String)
  fullName: Microsoft.Azure.Management.Sql.Models.ErrorResponse.ErrorResponse(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ErrorResponse.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the ErrorResponse class with required\r\narguments.\r\n"
  example: []
  syntax:
    content: public ErrorResponse(string code, string message)
    content.vb: Public Sub New(code As String, message As String)
    parameters:
    - id: code
      type: System.String
    - id: message
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
