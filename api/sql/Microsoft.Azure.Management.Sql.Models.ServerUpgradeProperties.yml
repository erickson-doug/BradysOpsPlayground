items:
- uid: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties
  commentId: T:Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties
  id: ServerUpgradeProperties
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.#ctor
  - Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.#ctor(System.String)
  - Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.DatabaseCollection
  - Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.ElasticPoolCollection
  - Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.ScheduleUpgradeAfterUtcDateTime
  - Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.Version
  langs:
  - csharp
  - vb
  name: ServerUpgradeProperties
  fullName: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServerUpgradeProperties
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nStart Azure SQL Database Server Upgrade properties.\r\n"
  example: []
  syntax:
    content: public class ServerUpgradeProperties
    content.vb: Public Class ServerUpgradeProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.DatabaseCollection
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.DatabaseCollection
  id: DatabaseCollection
  parent: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties
  langs:
  - csharp
  - vb
  name: DatabaseCollection
  fullName: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.DatabaseCollection
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DatabaseCollection
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the collection of recommended database\r\nproperties to upgrade the Azure SQL Database Server.\r\n"
  example: []
  syntax:
    content: >-
      public IList<RecommendedDatabaseProperties> DatabaseCollection

      {

          get;

          set;

      }
    content.vb: Public Property DatabaseCollection As IList(Of RecommendedDatabaseProperties)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.ElasticPoolCollection
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.ElasticPoolCollection
  id: ElasticPoolCollection
  parent: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties
  langs:
  - csharp
  - vb
  name: ElasticPoolCollection
  fullName: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.ElasticPoolCollection
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ElasticPoolCollection
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the collection of recommended elastic pool\r\nproperties to upgrade the Azure SQL Database Server.\r\n"
  example: []
  syntax:
    content: >-
      public IList<UpgradeRecommendedElasticPoolProperties> ElasticPoolCollection

      {

          get;

          set;

      }
    content.vb: Public Property ElasticPoolCollection As IList(Of UpgradeRecommendedElasticPoolProperties)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.ScheduleUpgradeAfterUtcDateTime
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.ScheduleUpgradeAfterUtcDateTime
  id: ScheduleUpgradeAfterUtcDateTime
  parent: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties
  langs:
  - csharp
  - vb
  name: ScheduleUpgradeAfterUtcDateTime
  fullName: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.ScheduleUpgradeAfterUtcDateTime
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ScheduleUpgradeAfterUtcDateTime
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the earliest time to upgrade the Azure SQL\r\nDatabase Server.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? ScheduleUpgradeAfterUtcDateTime

      {

          get;

          set;

      }
    content.vb: Public Property ScheduleUpgradeAfterUtcDateTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.Version
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.Version
  id: Version
  parent: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties
  langs:
  - csharp
  - vb
  name: Version
  fullName: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.Version
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Version
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRequired. Gets or sets the version for the Azure SQL Database\r\nServer being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public string Version

      {

          get;

          set;

      }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties
  langs:
  - csharp
  - vb
  name: ServerUpgradeProperties()
  fullName: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.ServerUpgradeProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the ServerUpgradeProperties class.\r\n"
  example: []
  syntax:
    content: public ServerUpgradeProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.#ctor(System.String)
  commentId: M:Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties
  langs:
  - csharp
  - vb
  name: ServerUpgradeProperties(String)
  fullName: Microsoft.Azure.Management.Sql.Models.ServerUpgradeProperties.ServerUpgradeProperties(System.String)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerUpgradeProperties.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the ServerUpgradeProperties class\r\nwith required arguments.\r\n"
  example: []
  syntax:
    content: public ServerUpgradeProperties(string version)
    content.vb: Public Sub New(version As String)
    parameters:
    - id: version
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<RecommendedDatabaseProperties>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties)
  name.vb: IList(Of RecommendedDatabaseProperties)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
    name: RecommendedDatabaseProperties
    fullName: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
    name: RecommendedDatabaseProperties
    fullName: Microsoft.Azure.Management.Sql.Models.RecommendedDatabaseProperties
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<UpgradeRecommendedElasticPoolProperties>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties)
  name.vb: IList(Of UpgradeRecommendedElasticPoolProperties)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
    name: UpgradeRecommendedElasticPoolProperties
    fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
    name: UpgradeRecommendedElasticPoolProperties
    fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  - name: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
