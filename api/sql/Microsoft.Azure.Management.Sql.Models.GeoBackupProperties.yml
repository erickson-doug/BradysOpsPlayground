items:
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties
  commentId: T:Microsoft.Azure.Management.Sql.Models.GeoBackupProperties
  id: GeoBackupProperties
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.#ctor
  - Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.Edition
  - Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.ElasticPoolName
  - Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.LastAvailableBackupDate
  - Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.ServiceLevelObjective
  langs:
  - csharp
  - vb
  name: GeoBackupProperties
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GeoBackupProperties
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRepresents the properties of an Azure SQL Database geo backup.\r\n"
  example: []
  syntax:
    content: public class GeoBackupProperties
    content.vb: Public Class GeoBackupProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.Edition
  commentId: P:Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.Edition
  id: Edition
  parent: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties
  langs:
  - csharp
  - vb
  name: Edition
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.Edition
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Edition
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets edition\r\n"
  example: []
  syntax:
    content: >-
      public string Edition

      {

          get;

          set;

      }
    content.vb: Public Property Edition As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.ElasticPoolName
  commentId: P:Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.ElasticPoolName
  id: ElasticPoolName
  parent: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties
  langs:
  - csharp
  - vb
  name: ElasticPoolName
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.ElasticPoolName
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ElasticPoolName
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the elastic pool name for the database\r\n"
  example: []
  syntax:
    content: >-
      public string ElasticPoolName

      {

          get;

          set;

      }
    content.vb: Public Property ElasticPoolName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.LastAvailableBackupDate
  commentId: P:Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.LastAvailableBackupDate
  id: LastAvailableBackupDate
  parent: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties
  langs:
  - csharp
  - vb
  name: LastAvailableBackupDate
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.LastAvailableBackupDate
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LastAvailableBackupDate
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the last available backup date\r\n"
  example: []
  syntax:
    content: >-
      public DateTime LastAvailableBackupDate

      {

          get;

          set;

      }
    content.vb: Public Property LastAvailableBackupDate As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.ServiceLevelObjective
  commentId: P:Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.ServiceLevelObjective
  id: ServiceLevelObjective
  parent: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties
  langs:
  - csharp
  - vb
  name: ServiceLevelObjective
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.ServiceLevelObjective
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceLevelObjective
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the current service level objective name for\r\nthe database\r\n"
  example: []
  syntax:
    content: >-
      public string ServiceLevelObjective

      {

          get;

          set;

      }
    content.vb: Public Property ServiceLevelObjective As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties
  langs:
  - csharp
  - vb
  name: GeoBackupProperties()
  fullName: Microsoft.Azure.Management.Sql.Models.GeoBackupProperties.GeoBackupProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/GeoBackupProperties.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the GeoBackupProperties class.\r\n"
  example: []
  syntax:
    content: public GeoBackupProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
