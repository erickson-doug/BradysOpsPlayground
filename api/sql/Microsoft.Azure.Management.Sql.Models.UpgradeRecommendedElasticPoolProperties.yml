items:
- uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  commentId: T:Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  id: UpgradeRecommendedElasticPoolProperties
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.#ctor
  - Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseCollection
  - Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseDtuMax
  - Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseDtuMin
  - Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Dtu
  - Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Edition
  - Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.IncludeAllDatabases
  - Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Name
  - Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.StorageMb
  langs:
  - csharp
  - vb
  name: UpgradeRecommendedElasticPoolProperties
  fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpgradeRecommendedElasticPoolProperties
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRepresents the properties of a Azure SQL Recommended Elastic Pool being\r\nupgraded.\r\n"
  example: []
  syntax:
    content: public class UpgradeRecommendedElasticPoolProperties
    content.vb: Public Class UpgradeRecommendedElasticPoolProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseCollection
  commentId: P:Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseCollection
  id: DatabaseCollection
  parent: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: DatabaseCollection
  fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseCollection
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DatabaseCollection
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the list of database names to be put in the\r\nAzure SQL Recommended Elastic Pool being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> DatabaseCollection

      {

          get;

          set;

      }
    content.vb: Public Property DatabaseCollection As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseDtuMax
  commentId: P:Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseDtuMax
  id: DatabaseDtuMax
  parent: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: DatabaseDtuMax
  fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseDtuMax
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DatabaseDtuMax
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the DTU cap for database for the Azure SQL\r\nRecommended Elastic Pool being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public int DatabaseDtuMax

      {

          get;

          set;

      }
    content.vb: Public Property DatabaseDtuMax As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseDtuMin
  commentId: P:Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseDtuMin
  id: DatabaseDtuMin
  parent: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: DatabaseDtuMin
  fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.DatabaseDtuMin
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DatabaseDtuMin
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the DTU guarantee for database for the Azure\r\nSQL Recommended Elastic Pool being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public int DatabaseDtuMin

      {

          get;

          set;

      }
    content.vb: Public Property DatabaseDtuMin As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Dtu
  commentId: P:Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Dtu
  id: Dtu
  parent: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: Dtu
  fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Dtu
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Dtu
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the DTU guarantee for the Azure SQL\r\nRecommended Elastic Pool being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public int Dtu

      {

          get;

          set;

      }
    content.vb: Public Property Dtu As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Edition
  commentId: P:Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Edition
  id: Edition
  parent: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: Edition
  fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Edition
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Edition
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the target edition for the Azure SQL\r\nRecommended Elastic Pool being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public string Edition

      {

          get;

          set;

      }
    content.vb: Public Property Edition As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.IncludeAllDatabases
  commentId: P:Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.IncludeAllDatabases
  id: IncludeAllDatabases
  parent: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: IncludeAllDatabases
  fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.IncludeAllDatabases
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IncludeAllDatabases
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets whether all databases to be put in the Azure\r\nSQL Recommended Elastic Pool being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? IncludeAllDatabases

      {

          get;

          set;

      }
    content.vb: Public Property IncludeAllDatabases As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Name
  commentId: P:Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Name
  id: Name
  parent: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.Name
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the name of the Azure SQL Recommended\r\nElastic Pool being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.StorageMb
  commentId: P:Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.StorageMb
  id: StorageMb
  parent: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: StorageMb
  fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.StorageMb
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageMb
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the storage limit in MB for the Azure SQL\r\nRecommended Elastic Pool being upgraded.\r\n"
  example: []
  syntax:
    content: >-
      public int StorageMb

      {

          get;

          set;

      }
    content.vb: Public Property StorageMb As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties
  langs:
  - csharp
  - vb
  name: UpgradeRecommendedElasticPoolProperties()
  fullName: Microsoft.Azure.Management.Sql.Models.UpgradeRecommendedElasticPoolProperties.UpgradeRecommendedElasticPoolProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/UpgradeRecommendedElasticPoolProperties.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the\r\nUpgradeRecommendedElasticPoolProperties class.\r\n"
  example: []
  syntax:
    content: public UpgradeRecommendedElasticPoolProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
