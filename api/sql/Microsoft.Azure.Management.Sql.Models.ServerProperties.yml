items:
- uid: Microsoft.Azure.Management.Sql.Models.ServerProperties
  commentId: T:Microsoft.Azure.Management.Sql.Models.ServerProperties
  id: ServerProperties
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.ServerProperties.#ctor
  - Microsoft.Azure.Management.Sql.Models.ServerProperties.AdministratorLogin
  - Microsoft.Azure.Management.Sql.Models.ServerProperties.AdministratorLoginPassword
  - Microsoft.Azure.Management.Sql.Models.ServerProperties.FullyQualifiedDomainName
  - Microsoft.Azure.Management.Sql.Models.ServerProperties.Version
  langs:
  - csharp
  - vb
  name: ServerProperties
  fullName: Microsoft.Azure.Management.Sql.Models.ServerProperties
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServerProperties
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRepresents the properties of an Azure SQL Database.\r\n"
  example: []
  syntax:
    content: public class ServerProperties
    content.vb: Public Class ServerProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.ServerProperties.AdministratorLogin
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServerProperties.AdministratorLogin
  id: AdministratorLogin
  parent: Microsoft.Azure.Management.Sql.Models.ServerProperties
  langs:
  - csharp
  - vb
  name: AdministratorLogin
  fullName: Microsoft.Azure.Management.Sql.Models.ServerProperties.AdministratorLogin
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AdministratorLogin
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets administrator username for the server.\r\n"
  example: []
  syntax:
    content: >-
      public string AdministratorLogin

      {

          get;

          set;

      }
    content.vb: Public Property AdministratorLogin As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerProperties.AdministratorLoginPassword
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServerProperties.AdministratorLoginPassword
  id: AdministratorLoginPassword
  parent: Microsoft.Azure.Management.Sql.Models.ServerProperties
  langs:
  - csharp
  - vb
  name: AdministratorLoginPassword
  fullName: Microsoft.Azure.Management.Sql.Models.ServerProperties.AdministratorLoginPassword
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AdministratorLoginPassword
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the administrator login password.\r\n"
  example: []
  syntax:
    content: >-
      public string AdministratorLoginPassword

      {

          get;

          set;

      }
    content.vb: Public Property AdministratorLoginPassword As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerProperties.FullyQualifiedDomainName
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServerProperties.FullyQualifiedDomainName
  id: FullyQualifiedDomainName
  parent: Microsoft.Azure.Management.Sql.Models.ServerProperties
  langs:
  - csharp
  - vb
  name: FullyQualifiedDomainName
  fullName: Microsoft.Azure.Management.Sql.Models.ServerProperties.FullyQualifiedDomainName
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FullyQualifiedDomainName
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the fully qualified domain name of the server.\r\n"
  example: []
  syntax:
    content: >-
      public string FullyQualifiedDomainName

      {

          get;

          set;

      }
    content.vb: Public Property FullyQualifiedDomainName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerProperties.Version
  commentId: P:Microsoft.Azure.Management.Sql.Models.ServerProperties.Version
  id: Version
  parent: Microsoft.Azure.Management.Sql.Models.ServerProperties
  langs:
  - csharp
  - vb
  name: Version
  fullName: Microsoft.Azure.Management.Sql.Models.ServerProperties.Version
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Version
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the version of the server.\r\n"
  example: []
  syntax:
    content: >-
      public string Version

      {

          get;

          set;

      }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ServerProperties.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.ServerProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.ServerProperties
  langs:
  - csharp
  - vb
  name: ServerProperties()
  fullName: Microsoft.Azure.Management.Sql.Models.ServerProperties.ServerProperties()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ServerProperties.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the ServerProperties class.\r\n"
  example: []
  syntax:
    content: public ServerProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
