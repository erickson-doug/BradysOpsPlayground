items:
- uid: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  commentId: T:Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  id: ImportExtensionRequestParameteres
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.#ctor
  - Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.#ctor(Microsoft.Azure.Management.Sql.Models.ImportExtensionProperties)
  - Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.ExtensionName
  - Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.ExtensionType
  - Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.Properties
  langs:
  - csharp
  - vb
  name: ImportExtensionRequestParameteres
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ImportExtensionRequestParameteres
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nImport Azure SQL Database parameters.\r\n"
  example: []
  syntax:
    content: public class ImportExtensionRequestParameteres
    content.vb: Public Class ImportExtensionRequestParameteres
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.ExtensionName
  commentId: P:Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.ExtensionName
  id: ExtensionName
  parent: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  langs:
  - csharp
  - vb
  name: ExtensionName
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.ExtensionName
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExtensionName
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the name of the extenstion.\r\n"
  example: []
  syntax:
    content: >-
      public string ExtensionName

      {

          get;

          set;

      }
    content.vb: Public Property ExtensionName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.ExtensionType
  commentId: P:Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.ExtensionType
  id: ExtensionType
  parent: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  langs:
  - csharp
  - vb
  name: ExtensionType
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.ExtensionType
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExtensionType
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets the type of the extenstion.\r\n"
  example: []
  syntax:
    content: >-
      public string ExtensionType

      {

          get;

          set;

      }
    content.vb: Public Property ExtensionType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.Properties
  commentId: P:Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.Properties
  id: Properties
  parent: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.Properties
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Properties
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nRequired. Gets or sets the properties of the request.\r\n"
  example: []
  syntax:
    content: >-
      public ImportExtensionProperties Properties

      {

          get;

          set;

      }
    content.vb: Public Property Properties As ImportExtensionProperties
    parameters: []
    return:
      type: Microsoft.Azure.Management.Sql.Models.ImportExtensionProperties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  langs:
  - csharp
  - vb
  name: ImportExtensionRequestParameteres()
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.ImportExtensionRequestParameteres()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the ImportExtensionRequestParameteres\r\nclass.\r\n"
  example: []
  syntax:
    content: public ImportExtensionRequestParameteres()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.#ctor(Microsoft.Azure.Management.Sql.Models.ImportExtensionProperties)
  commentId: M:Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.#ctor(Microsoft.Azure.Management.Sql.Models.ImportExtensionProperties)
  id: '#ctor(Microsoft.Azure.Management.Sql.Models.ImportExtensionProperties)'
  parent: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres
  langs:
  - csharp
  - vb
  name: ImportExtensionRequestParameteres(ImportExtensionProperties)
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExtensionRequestParameteres.ImportExtensionRequestParameteres(Microsoft.Azure.Management.Sql.Models.ImportExtensionProperties)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportExtensionRequestParameteres.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the ImportExtensionRequestParameteres\r\nclass with required arguments.\r\n"
  example: []
  syntax:
    content: public ImportExtensionRequestParameteres(ImportExtensionProperties properties)
    content.vb: Public Sub New(properties As ImportExtensionProperties)
    parameters:
    - id: properties
      type: Microsoft.Azure.Management.Sql.Models.ImportExtensionProperties
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Sql.Models.ImportExtensionProperties
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ImportExtensionProperties
  fullName: Microsoft.Azure.Management.Sql.Models.ImportExtensionProperties
