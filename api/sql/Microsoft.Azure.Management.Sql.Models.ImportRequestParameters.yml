items:
- uid: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  commentId: T:Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  id: ImportRequestParameters
  parent: Microsoft.Azure.Management.Sql.Models
  children:
  - Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.#ctor
  - Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.DatabaseMaxSize
  - Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.DatabaseName
  - Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.Edition
  - Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.ServiceObjectiveName
  langs:
  - csharp
  - vb
  name: ImportRequestParameters
  fullName: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ImportRequestParameters
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nImport Azure SQL Database parameters.\r\n"
  example: []
  syntax:
    content: 'public class ImportRequestParameters : ExportRequestParameters'
    content.vb: >-
      Public Class ImportRequestParameters

          Inherits ExportRequestParameters
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  inheritedMembers:
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLogin
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLoginPassword
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AuthenticationType
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKey
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKeyType
  - Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageUri
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.DatabaseMaxSize
  commentId: P:Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.DatabaseMaxSize
  id: DatabaseMaxSize
  parent: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  langs:
  - csharp
  - vb
  name: DatabaseMaxSize
  fullName: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.DatabaseMaxSize
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DatabaseMaxSize
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the maximum size for the newly imported\r\ndatabase.\r\n"
  example: []
  syntax:
    content: >-
      public long DatabaseMaxSize

      {

          get;

          set;

      }
    content.vb: Public Property DatabaseMaxSize As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.DatabaseName
  commentId: P:Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.DatabaseName
  id: DatabaseName
  parent: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  langs:
  - csharp
  - vb
  name: DatabaseName
  fullName: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.DatabaseName
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DatabaseName
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the name of the Azure SQL database to import.\r\n"
  example: []
  syntax:
    content: >-
      public string DatabaseName

      {

          get;

          set;

      }
    content.vb: Public Property DatabaseName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.Edition
  commentId: P:Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.Edition
  id: Edition
  parent: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  langs:
  - csharp
  - vb
  name: Edition
  fullName: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.Edition
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Edition
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the edition for the Azure Sql Database being\r\ncreated.\r\n"
  example: []
  syntax:
    content: >-
      public string Edition

      {

          get;

          set;

      }
    content.vb: Public Property Edition As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.ServiceObjectiveName
  commentId: P:Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.ServiceObjectiveName
  id: ServiceObjectiveName
  parent: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  langs:
  - csharp
  - vb
  name: ServiceObjectiveName
  fullName: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.ServiceObjectiveName
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceObjectiveName
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nOptional. Gets or sets the name of the service objective to assign\r\nto the Azure SQL Database.\r\n"
  example: []
  syntax:
    content: >-
      public string ServiceObjectiveName

      {

          get;

          set;

      }
    content.vb: Public Property ServiceObjectiveName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.#ctor
  commentId: M:Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters
  langs:
  - csharp
  - vb
  name: ImportRequestParameters()
  fullName: Microsoft.Azure.Management.Sql.Models.ImportRequestParameters.ImportRequestParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Sql/SqlManagement/Generated/Models/ImportRequestParameters.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Management.Sql
  namespace: Microsoft.Azure.Management.Sql.Models
  summary: "\r\nInitializes a new instance of the ImportRequestParameters class.\r\n"
  example: []
  syntax:
    content: public ImportRequestParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: Microsoft.Azure.Management.Sql.Models
  fullName: Microsoft.Azure.Management.Sql.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  parent: Microsoft.Azure.Management.Sql.Models
  isExternal: false
  name: ExportRequestParameters
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLogin
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  isExternal: false
  name: AdministratorLogin
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLogin
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLoginPassword
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  isExternal: false
  name: AdministratorLoginPassword
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AdministratorLoginPassword
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AuthenticationType
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  isExternal: false
  name: AuthenticationType
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.AuthenticationType
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKey
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  isExternal: false
  name: StorageKey
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKey
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKeyType
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  isExternal: false
  name: StorageKeyType
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageKeyType
- uid: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageUri
  parent: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters
  isExternal: false
  name: StorageUri
  fullName: Microsoft.Azure.Management.Sql.Models.ExportRequestParameters.StorageUri
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
