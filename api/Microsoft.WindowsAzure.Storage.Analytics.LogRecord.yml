items:
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  commentId: T:Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  id: LogRecord
  parent: Microsoft.WindowsAzure.Storage.Analytics
  children:
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.AuthenticationType
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ClientRequestId
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ConditionsUsed
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.EndToEndLatency
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ETagIdentifier
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.HttpStatusCode
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.LastModifiedTime
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OperationCount
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OperationType
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OwnerAccountName
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ReferrerHeader
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestContentLength
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestedObjectKey
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequesterAccountName
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequesterIPAddress
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestHeaderSize
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestIdHeader
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestMD5
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestPacketSize
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestStartTime
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestStatus
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestUrl
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestVersionHeader
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ResponseHeaderSize
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ResponsePacketSize
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServerLatency
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServerMD5
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServiceType
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.UserAgentHeader
  - Microsoft.WindowsAzure.Storage.Analytics.LogRecord.VersionNumber
  langs:
  - csharp
  - vb
  name: LogRecord
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  type: Class
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LogRecord
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nRepresents a Storage Analytics log entry.\r\n"
  example: []
  syntax:
    content: 'public class LogRecord : object'
    content.vb: >-
      Public Class LogRecord
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.VersionNumber
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.VersionNumber
  id: VersionNumber
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: VersionNumber
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.VersionNumber
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VersionNumber
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe version of Storage Analytics Logging used to record the entry.\r\n"
  example: []
  syntax:
    content: >-
      public string VersionNumber

      {
          get;
      }
    content.vb: Public ReadOnly Property VersionNumber As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the version number.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestStartTime
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestStartTime
  id: RequestStartTime
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequestStartTime
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestStartTime
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestStartTime
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 108
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe time at which the request was received by the service, in UTC format.\r\n"
  example: []
  syntax:
    content: >-
      public DateTimeOffset? RequestStartTime

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestStartTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
      description: A <see cref="!:DateTimeOffset"></see> specifying the request start time.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OperationType
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OperationType
  id: OperationType
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: OperationType
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OperationType
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OperationType
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe type of REST operation performed. \r\n"
  example: []
  syntax:
    content: >-
      public string OperationType

      {
          get;
      }
    content.vb: Public ReadOnly Property OperationType As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> specifying the operation type.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestStatus
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestStatus
  id: RequestStatus
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequestStatus
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestStatus
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestStatus
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 120
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe status of the requested operation.\r\n"
  example: []
  syntax:
    content: >-
      public string RequestStatus

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestStatus As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> indicating the request status.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.HttpStatusCode
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.HttpStatusCode
  id: HttpStatusCode
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: HttpStatusCode
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.HttpStatusCode
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HttpStatusCode
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 126
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe HTTP status code for the request. If the request is interrupted, this value may be set to Unknown.\r\n"
  example: []
  syntax:
    content: >-
      public string HttpStatusCode

      {
          get;
      }
    content.vb: Public ReadOnly Property HttpStatusCode As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the HTTP status code.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.EndToEndLatency
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.EndToEndLatency
  id: EndToEndLatency
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: EndToEndLatency
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.EndToEndLatency
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndToEndLatency
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 133
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe total time in milliseconds to perform the requested operation, including the time required to read the\r\nincoming request and send the response to the requester.\r\n"
  example: []
  syntax:
    content: >-
      public TimeSpan? EndToEndLatency

      {
          get;
      }
    content.vb: Public ReadOnly Property EndToEndLatency As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{TimeSpan}
      description: A <see cref="!:System.TimeSpan"></see> indicating the end-to-end latency for the operation.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServerLatency
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServerLatency
  id: ServerLatency
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: ServerLatency
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServerLatency
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServerLatency
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 140
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe total time in milliseconds to perform the requested operation. This value does not include network \r\nlatency (the time required to read the incoming request and send the response to the requester).\r\n"
  example: []
  syntax:
    content: >-
      public TimeSpan? ServerLatency

      {
          get;
      }
    content.vb: Public ReadOnly Property ServerLatency As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{TimeSpan}
      description: A <see cref="!:System.TimeSpan"></see> indicating the server latency for the operation.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.AuthenticationType
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.AuthenticationType
  id: AuthenticationType
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: AuthenticationType
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.AuthenticationType
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AuthenticationType
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 146
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nIndicates whether the request was authenticated via Shared Key or a Shared Access Signature (SAS), or was anonymous.\r\n"
  example: []
  syntax:
    content: >-
      public string AuthenticationType

      {
          get;
      }
    content.vb: Public ReadOnly Property AuthenticationType As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> indicating the authentication scheme.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequesterAccountName
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequesterAccountName
  id: RequesterAccountName
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequesterAccountName
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequesterAccountName
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequesterAccountName
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 153
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe name of the storage account from which the request originated, if the request is authenticated via Shared Key. \r\nThis field is <code>null</code> for anonymous requests and requests made via a shared access signature (SAS).\r\n"
  example: []
  syntax:
    content: >-
      public string RequesterAccountName

      {
          get;
      }
    content.vb: Public ReadOnly Property RequesterAccountName As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> specifying the name of the storage account.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OwnerAccountName
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OwnerAccountName
  id: OwnerAccountName
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: OwnerAccountName
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OwnerAccountName
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OwnerAccountName
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 159
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe account name of the service owner.\r\n"
  example: []
  syntax:
    content: >-
      public string OwnerAccountName

      {
          get;
      }
    content.vb: Public ReadOnly Property OwnerAccountName As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> specifying the name of the storage account.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServiceType
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServiceType
  id: ServiceType
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: ServiceType
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServiceType
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceType
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 165
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe storage service against which the request was made: blob, table, or queue.\r\n"
  example: []
  syntax:
    content: >-
      public string ServiceType

      {
          get;
      }
    content.vb: Public ReadOnly Property ServiceType As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> indicating against which service the request was made.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestUrl
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestUrl
  id: RequestUrl
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequestUrl
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestUrl
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestUrl
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 171
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe complete URL of the request.\r\n"
  example: []
  syntax:
    content: >-
      public Uri RequestUrl

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestUrl As Uri
    parameters: []
    return:
      type: Uri
      description: A <see cref="!:System.Uri"></see> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestedObjectKey
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestedObjectKey
  id: RequestedObjectKey
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequestedObjectKey
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestedObjectKey
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestedObjectKey
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 178
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe key of the requested object, as an encoded string. This field will always use the account name, \r\neven if a custom domain name has been configured.\r\n"
  example: []
  syntax:
    content: >-
      public string RequestedObjectKey

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestedObjectKey As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestIdHeader
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestIdHeader
  id: RequestIdHeader
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequestIdHeader
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestIdHeader
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestIdHeader
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 184
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe request ID assigned by the storage service. This is equivalent to the value of the x-ms-request-id header.\r\n"
  example: []
  syntax:
    content: >-
      public Guid? RequestIdHeader

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestIdHeader As Guid?
    parameters: []
    return:
      type: System.Nullable{Guid}
      description: A <see cref="!:System.Guid"></see> containing the request ID.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OperationCount
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OperationCount
  id: OperationCount
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: OperationCount
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.OperationCount
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OperationCount
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 191
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe number of operations logged for a request, starting at index zero. Some requests require more than\r\none operation, such as Copy Blob, though most perform just one operation.\r\n"
  example: []
  syntax:
    content: >-
      public int ? OperationCount

      {
          get;
      }
    content.vb: Public ReadOnly Property OperationCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: An integer containing the operation count.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequesterIPAddress
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequesterIPAddress
  id: RequesterIPAddress
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequesterIPAddress
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequesterIPAddress
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequesterIPAddress
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 196
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe IP address of the requester, including the port number.\r\n"
  example: []
  syntax:
    content: >-
      public string RequesterIPAddress

      {
          get;
      }
    content.vb: Public ReadOnly Property RequesterIPAddress As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestVersionHeader
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestVersionHeader
  id: RequestVersionHeader
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequestVersionHeader
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestVersionHeader
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestVersionHeader
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 202
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe storage service version specified when the request was made. This is equivalent to the value of the x-ms-version header.\r\n"
  example: []
  syntax:
    content: >-
      public string RequestVersionHeader

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestVersionHeader As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the request version header.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestHeaderSize
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestHeaderSize
  id: RequestHeaderSize
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequestHeaderSize
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestHeaderSize
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestHeaderSize
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 208
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe size of the request header, in bytes. If a request is unsuccessful, this value may be <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public long ? RequestHeaderSize

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestHeaderSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: A long containing the request header size.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestPacketSize
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestPacketSize
  id: RequestPacketSize
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequestPacketSize
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestPacketSize
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestPacketSize
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 214
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe size of the request packets read by the storage service, in bytes. If a request is unsuccessful, this value may be <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public long ? RequestPacketSize

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestPacketSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: A long containing the request packet size.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ResponseHeaderSize
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ResponseHeaderSize
  id: ResponseHeaderSize
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: ResponseHeaderSize
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ResponseHeaderSize
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ResponseHeaderSize
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 220
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe size of the response header, in bytes. If a request is unsuccessful, this value may be <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public long ? ResponseHeaderSize

      {
          get;
      }
    content.vb: Public ReadOnly Property ResponseHeaderSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: A long containing the size of the response header in bytes.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ResponsePacketSize
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ResponsePacketSize
  id: ResponsePacketSize
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: ResponsePacketSize
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ResponsePacketSize
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ResponsePacketSize
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 226
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe size of the response packets written by the storage service, in bytes. If a request is unsuccessful, this value may be <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public long ? ResponsePacketSize

      {
          get;
      }
    content.vb: Public ReadOnly Property ResponsePacketSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: A long containing the packet size of the response header, in bytes.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestContentLength
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestContentLength
  id: RequestContentLength
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequestContentLength
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestContentLength
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestContentLength
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 234
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe value of the Content-Length header for the request sent to the storage service. If the request was successful, \r\nthis value is equal to request-packet-size. If a request is unsuccessful, this value may not be equal to \r\nrequest-packet-size, or it may be <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public long ? RequestContentLength

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestContentLength As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: A long containing the request content length, in bytes.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestMD5
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestMD5
  id: RequestMD5
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: RequestMD5
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.RequestMD5
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestMD5
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 241
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe value of either the Content-MD5 header or the x-ms-content-md5 header in the request as an encoded string.\r\nThe MD5 hash value specified in this field represents the content in the request. This field can be <code>null</code>.\r\n"
  example: []
  syntax:
    content: >-
      public string RequestMD5

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestMD5 As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the request MD5 value.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServerMD5
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServerMD5
  id: ServerMD5
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: ServerMD5
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ServerMD5
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServerMD5
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 247
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe value of the MD5 hash calculated by the storage service, as an encoded string.\r\n"
  example: []
  syntax:
    content: >-
      public string ServerMD5

      {
          get;
      }
    content.vb: Public ReadOnly Property ServerMD5 As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the server MD5 hash.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ETagIdentifier
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ETagIdentifier
  id: ETagIdentifier
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: ETagIdentifier
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ETagIdentifier
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ETagIdentifier
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 253
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe ETag identifier for the returned object as an encoded string.\r\n"
  example: []
  syntax:
    content: >-
      public string ETagIdentifier

      {
          get;
      }
    content.vb: Public ReadOnly Property ETagIdentifier As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the ETag for the resource.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.LastModifiedTime
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.LastModifiedTime
  id: LastModifiedTime
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: LastModifiedTime
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.LastModifiedTime
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LastModifiedTime
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 259
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe Last Modified Time (LMT) for the returned object as an encoded string. This field is <code>null</code> for operations that return multiple objects.\r\n"
  example: []
  syntax:
    content: >-
      public DateTimeOffset? LastModifiedTime

      {
          get;
      }
    content.vb: Public ReadOnly Property LastModifiedTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
      description: A <see cref="!:DateTimeOffset"></see> specifying the last modified time.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ConditionsUsed
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ConditionsUsed
  id: ConditionsUsed
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: ConditionsUsed
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ConditionsUsed
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ConditionsUsed
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 265
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nA semicolon-separated list, in the form of ConditionName=value, as an encoded string.\r\n"
  example: []
  syntax:
    content: >-
      public string ConditionsUsed

      {
          get;
      }
    content.vb: Public ReadOnly Property ConditionsUsed As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the conditions used for the request.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.UserAgentHeader
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.UserAgentHeader
  id: UserAgentHeader
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: UserAgentHeader
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.UserAgentHeader
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UserAgentHeader
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 271
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe User-Agent header value as an encoded string.\r\n"
  example: []
  syntax:
    content: >-
      public string UserAgentHeader

      {
          get;
      }
    content.vb: Public ReadOnly Property UserAgentHeader As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the value of the User-Agent header.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ReferrerHeader
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ReferrerHeader
  id: ReferrerHeader
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: ReferrerHeader
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ReferrerHeader
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReferrerHeader
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 277
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe Referrer header value as an encoded string.\r\n"
  example: []
  syntax:
    content: >-
      public string ReferrerHeader

      {
          get;
      }
    content.vb: Public ReadOnly Property ReferrerHeader As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the value of the Referrer header.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ClientRequestId
  commentId: P:Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ClientRequestId
  id: ClientRequestId
  parent: Microsoft.WindowsAzure.Storage.Analytics.LogRecord
  langs:
  - csharp
  - vb
  name: ClientRequestId
  fullName: Microsoft.WindowsAzure.Storage.Analytics.LogRecord.ClientRequestId
  type: Property
  source:
    remote:
      path: src/ClassLibraryCommon/Analytics/LogRecord.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ClientRequestId
    path: src/ClassLibraryCommon/Analytics/LogRecord.cs
    startLine: 283
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Analytics
  summary: "\r\nThe value of the x-ms-client-request-id header, included in the request as an encoded string.\r\n"
  example: []
  syntax:
    content: >-
      public string ClientRequestId

      {
          get;
      }
    content.vb: Public ReadOnly Property ClientRequestId As String
    parameters: []
    return:
      type: System.String
      description: A <see cref="!:System.String"></see> containing the client request ID.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Analytics
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Analytics
  fullName: Microsoft.WindowsAzure.Storage.Analytics
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{DateTimeOffset}
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  fullname.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Nullable{TimeSpan}
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  fullname.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: Uri
  isExternal: true
  name: Uri
  fullName: Uri
- uid: System.Nullable{Guid}
  definition: System.Nullable`1
  name: Nullable<Guid>
  fullName: System.Nullable<Guid>
  fullname.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Guid
    name: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    fullName: Guid
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
