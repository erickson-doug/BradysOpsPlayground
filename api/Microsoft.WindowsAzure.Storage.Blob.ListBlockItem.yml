items:
- uid: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.ListBlockItem
  id: ListBlockItem
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Committed
  - Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Length
  - Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Name
  langs:
  - csharp
  - vb
  name: ListBlockItem
  fullName: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ListBlockItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ListBlockItem
    path: src/Storage/Lib/Common/Blob/ListBlockItem.cs
    startLine: 22
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRepresents a block retrieved from the blob's block list.\r\n"
  example: []
  syntax:
    content: public sealed class ListBlockItem
    content.vb: Public NotInheritable Class ListBlockItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Name
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ListBlockItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: src/Storage/Lib/Common/Blob/ListBlockItem.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the name of the block.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

      }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The block name.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Length
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Length
  id: Length
  parent: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem
  langs:
  - csharp
  - vb
  name: Length
  fullName: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Length
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ListBlockItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Length
    path: src/Storage/Lib/Common/Blob/ListBlockItem.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets the size of block in bytes.\r\n"
  example: []
  syntax:
    content: >-
      public long Length

      {

          get;

      }
    content.vb: Public ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: The block size.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Committed
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Committed
  id: Committed
  parent: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem
  langs:
  - csharp
  - vb
  name: Committed
  fullName: Microsoft.WindowsAzure.Storage.Blob.ListBlockItem.Committed
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/ListBlockItem.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Committed
    path: src/Storage/Lib/Common/Blob/ListBlockItem.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets a value indicating whether or not the block has been committed.\r\n"
  example: []
  syntax:
    content: >-
      public bool Committed

      {

          get;

      }
    content.vb: Public ReadOnly Property Committed As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if the block has been committed; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
