items:
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  id: SharedAccessBlobHeaders
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.#ctor
  - Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.#ctor(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  - Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.CacheControl
  - Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentDisposition
  - Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentEncoding
  - Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentLanguage
  - Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentType
  langs:
  - csharp
  - vb
  name: SharedAccessBlobHeaders
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SharedAccessBlobHeaders
    path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRepresents the optional headers that can be returned with blobs accessed using SAS.\r\n"
  example: []
  syntax:
    content: public sealed class SharedAccessBlobHeaders
    content.vb: Public NotInheritable Class SharedAccessBlobHeaders
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  langs:
  - csharp
  - vb
  name: SharedAccessBlobHeaders()
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.SharedAccessBlobHeaders()
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public SharedAccessBlobHeaders()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.#ctor(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.#ctor(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  id: '#ctor(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)'
  parent: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  langs:
  - csharp
  - vb
  name: SharedAccessBlobHeaders(SharedAccessBlobHeaders)
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.SharedAccessBlobHeaders(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders\" data-throw-if-not-resolved=\"false\"></xref> class based on an existing instance.\r\n"
  example: []
  syntax:
    content: public SharedAccessBlobHeaders(SharedAccessBlobHeaders sharedAccessBlobHeaders)
    content.vb: Public Sub New(sharedAccessBlobHeaders As SharedAccessBlobHeaders)
    parameters:
    - id: sharedAccessBlobHeaders
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
      description: The set of <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false"></xref> to clone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.CacheControl
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.CacheControl
  id: CacheControl
  parent: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  langs:
  - csharp
  - vb
  name: CacheControl
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.CacheControl
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CacheControl
    path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the cache-control header returned with the blob.\r\n"
  example: []
  syntax:
    content: >-
      public string CacheControl

      {
          get;
          set;
      }
    content.vb: Public Property CacheControl As String
    parameters: []
    return:
      type: System.String
      description: A string containing the cache-control value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentDisposition
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentDisposition
  id: ContentDisposition
  parent: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  langs:
  - csharp
  - vb
  name: ContentDisposition
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentDisposition
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContentDisposition
    path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the content-disposition header returned with the blob.\r\n"
  example: []
  syntax:
    content: >-
      public string ContentDisposition

      {
          get;
          set;
      }
    content.vb: Public Property ContentDisposition As String
    parameters: []
    return:
      type: System.String
      description: A string containing the content-disposition value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentEncoding
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentEncoding
  id: ContentEncoding
  parent: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  langs:
  - csharp
  - vb
  name: ContentEncoding
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentEncoding
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContentEncoding
    path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the content-encoding header returned with the blob.\r\n"
  example: []
  syntax:
    content: >-
      public string ContentEncoding

      {
          get;
          set;
      }
    content.vb: Public Property ContentEncoding As String
    parameters: []
    return:
      type: System.String
      description: A string containing the content-encoding value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentLanguage
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentLanguage
  id: ContentLanguage
  parent: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  langs:
  - csharp
  - vb
  name: ContentLanguage
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentLanguage
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContentLanguage
    path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the content-language header returned with the blob.\r\n"
  example: []
  syntax:
    content: >-
      public string ContentLanguage

      {
          get;
          set;
      }
    content.vb: Public Property ContentLanguage As String
    parameters: []
    return:
      type: System.String
      description: A string containing the content-language value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentType
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentType
  id: ContentType
  parent: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders.ContentType
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContentType
    path: src/Storage/Lib/Common/Blob/SharedAccessBlobHeaders.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the content-type header returned with the blob.\r\n"
  example: []
  syntax:
    content: >-
      public string ContentType

      {
          get;
          set;
      }
    content.vb: Public Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: A string containing the content-type value.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: SharedAccessBlobHeaders
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
