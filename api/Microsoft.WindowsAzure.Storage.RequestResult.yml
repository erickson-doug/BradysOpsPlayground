items:
- uid: Microsoft.WindowsAzure.Storage.RequestResult
  commentId: T:Microsoft.WindowsAzure.Storage.RequestResult
  id: RequestResult
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5
  - Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes
  - Microsoft.WindowsAzure.Storage.RequestResult.EndTime
  - Microsoft.WindowsAzure.Storage.RequestResult.Etag
  - Microsoft.WindowsAzure.Storage.RequestResult.Exception
  - Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation
  - Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode
  - Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage
  - Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes
  - Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted
  - Microsoft.WindowsAzure.Storage.RequestResult.ReadXml(System.Xml.XmlReader)
  - Microsoft.WindowsAzure.Storage.RequestResult.RequestDate
  - Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID
  - Microsoft.WindowsAzure.Storage.RequestResult.StartTime
  - Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation
  - Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage(System.String)
  - Microsoft.WindowsAzure.Storage.RequestResult.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: RequestResult
  fullName: Microsoft.WindowsAzure.Storage.RequestResult
  type: Class
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestResult
    path: src/Common/RequestResult.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nRepresents the result of a physical request.\r\n"
  example: []
  syntax:
    content: public sealed class RequestResult
    content.vb: Public NotInheritable Class RequestResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode
  id: HttpStatusCode
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: HttpStatusCode
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HttpStatusCode
    path: src/Common/RequestResult.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets or sets the HTTP status code for the request.\r\n"
  example: []
  syntax:
    content: >-
      public int HttpStatusCode

      {
          get;
          set;
      }
    content.vb: Public Property HttpStatusCode As Integer
    parameters: []
    return:
      type: System.Int32
      description: The HTTP status code for the request.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage
  id: HttpStatusMessage
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: HttpStatusMessage
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HttpStatusMessage
    path: src/Common/RequestResult.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets the HTTP status message for the request.\r\n"
  example: []
  syntax:
    content: >-
      public string HttpStatusMessage

      {
          get;
      }
    content.vb: Public ReadOnly Property HttpStatusMessage As String
    parameters: []
    return:
      type: System.String
      description: The HTTP status message for the request.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID
  id: ServiceRequestID
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: ServiceRequestID
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceRequestID
    path: src/Common/RequestResult.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets the service request ID for this request.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", MessageId = "ID", Justification = "Back compatibility.")]

      public string ServiceRequestID

      {
          get;
      }
    content.vb: >-
      <SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", MessageId:="ID", Justification:="Back compatibility.")>

      Public ReadOnly Property ServiceRequestID As String
    parameters: []
    return:
      type: System.String
      description: The service request ID for this request.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1709:IdentifiersShouldBeCasedCorrectly
    namedArguments:
    - name: MessageId
      type: System.String
      value: ID
    - name: Justification
      type: System.String
      value: Back compatibility.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5
  id: ContentMd5
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: ContentMd5
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContentMd5
    path: src/Common/RequestResult.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets the content-MD5 value for the request. \r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", MessageId = "Md", Justification = "Back compatibility.")]

      public string ContentMd5

      {
          get;
      }
    content.vb: >-
      <SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", MessageId:="Md", Justification:="Back compatibility.")>

      Public ReadOnly Property ContentMd5 As String
    parameters: []
    return:
      type: System.String
      description: The content-MD5 value for the request.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1709:IdentifiersShouldBeCasedCorrectly
    namedArguments:
    - name: MessageId
      type: System.String
      value: Md
    - name: Justification
      type: System.String
      value: Back compatibility.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.Etag
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.Etag
  id: Etag
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: Etag
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.Etag
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Etag
    path: src/Common/RequestResult.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets the ETag value of the request.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId = "Etag", Justification = "Reviewed: Etag can be used for identifier names.")]

      public string Etag

      {
          get;
      }
    content.vb: >-
      <SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId:="Etag", Justification:="Reviewed: Etag can be used for identifier names.")>

      Public ReadOnly Property Etag As String
    parameters: []
    return:
      type: System.String
      description: The ETag value of the request.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1704:IdentifiersShouldBeSpelledCorrectly
    namedArguments:
    - name: MessageId
      type: System.String
      value: Etag
    - name: Justification
      type: System.String
      value: 'Reviewed: Etag can be used for identifier names.'
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes
  id: IngressBytes
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: IngressBytes
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IngressBytes
    path: src/Common/RequestResult.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nThe number of bytes read from the response body for the given request\r\n"
  example: []
  syntax:
    content: >-
      public long IngressBytes

      {
          get;
          set;
      }
    content.vb: Public Property IngressBytes As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes
  id: EgressBytes
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: EgressBytes
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EgressBytes
    path: src/Common/RequestResult.cs
    startLine: 81
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "        \r\nThe number of bytes written to the request body for a given request\r\n"
  example: []
  syntax:
    content: >-
      public long EgressBytes

      {
          get;
          set;
      }
    content.vb: Public Property EgressBytes As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RequestResult.RequestDate
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.RequestDate
  id: RequestDate
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: RequestDate
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.RequestDate
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequestDate
    path: src/Common/RequestResult.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets the request date.\r\n"
  example: []
  syntax:
    content: >-
      public string RequestDate

      {
          get;
      }
    content.vb: Public ReadOnly Property RequestDate As String
    parameters: []
    return:
      type: System.String
      description: The request date.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation
  id: TargetLocation
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: TargetLocation
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TargetLocation
    path: src/Common/RequestResult.cs
    startLine: 93
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets the location to which the request was sent.\r\n"
  example: []
  syntax:
    content: >-
      public StorageLocation TargetLocation

      {
          get;
      }
    content.vb: Public ReadOnly Property TargetLocation As StorageLocation
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageLocation
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageLocation" data-throw-if-not-resolved="false"></xref> enumeration value.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation
  id: ExtendedErrorInformation
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: ExtendedErrorInformation
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExtendedErrorInformation
    path: src/Common/RequestResult.cs
    startLine: 99
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets the extended error information.\r\n"
  example: []
  syntax:
    content: >-
      public StorageExtendedErrorInformation ExtendedErrorInformation

      {
          get;
      }
    content.vb: Public ReadOnly Property ExtendedErrorInformation As StorageExtendedErrorInformation
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted
  id: IsRequestServerEncrypted
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: IsRequestServerEncrypted
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsRequestServerEncrypted
    path: src/Common/RequestResult.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets whether or not the data for a write operation is encrypted server-side.\r\n"
  example: []
  syntax:
    content: >-
      public bool IsRequestServerEncrypted

      {
          get;
      }
    content.vb: Public ReadOnly Property IsRequestServerEncrypted As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.Exception
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.Exception
  id: Exception
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: Exception
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.Exception
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Exception
    path: src/Common/RequestResult.cs
    startLine: 110
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets or sets the exception.\r\n"
  example: []
  syntax:
    content: >-
      public Exception Exception

      {
          get;
          set;
      }
    content.vb: Public Property Exception As Exception
    parameters: []
    return:
      type: System.Exception
      description: An <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RequestResult.StartTime
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.StartTime
  id: StartTime
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: StartTime
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.StartTime
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartTime
    path: src/Common/RequestResult.cs
    startLine: 137
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets the start time of the operation.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime StartTime

      {
          get;
      }
    content.vb: Public ReadOnly Property StartTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value indicating the start time of the operation.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.EndTime
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.EndTime
  id: EndTime
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: EndTime
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.EndTime
  type: Property
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndTime
    path: src/Common/RequestResult.cs
    startLine: 143
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGets the end time of the operation.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime EndTime

      {
          get;
      }
    content.vb: Public ReadOnly Property EndTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value indicating the end time of the operation.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage(System.String)
  id: TranslateFromExceptionMessage(System.String)
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: TranslateFromExceptionMessage(String)
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage(System.String)
  type: Method
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TranslateFromExceptionMessage
    path: src/Common/RequestResult.cs
    startLine: 153
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nTranslates the specified message into a <xref href=\"Microsoft.WindowsAzure.Storage.RequestResult\" data-throw-if-not-resolved=\"false\"></xref> object.\r\n"
  example: []
  syntax:
    content: public static RequestResult TranslateFromExceptionMessage(string message)
    content.vb: Public Shared Function TranslateFromExceptionMessage(message As String) As RequestResult
    parameters:
    - id: message
      type: System.String
      description: The message to translate.
    return:
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The translated <xref href="Microsoft.WindowsAzure.Storage.RequestResult" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ReadXml(System.Xml.XmlReader)
  commentId: M:Microsoft.WindowsAzure.Storage.RequestResult.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReadXml
    path: src/Common/RequestResult.cs
    startLine: 194
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nGenerates a serializable RequestResult from its XML representation.\r\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    content.vb: Public Sub ReadXml(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> stream from which the RequestResult is deserialized.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RequestResult.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.WindowsAzure.Storage.RequestResult.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/Common/RequestResult.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WriteXml
    path: src/Common/RequestResult.cs
    startLine: 243
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nConverts a serializable RequestResult into its XML representation.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly", MessageId = "TranslateFromExceptionMessage", Justification = "TranslateFromException is a field name that when split could confuse the users")]

      [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly", MessageId = "RequestResult", Justification = "RequestResult is a variable name which when split could confuse the users")]

      [SuppressMessage("Microsoft.Globalization", "CA1303:Do not pass literals as localized parameters", MessageId = "System.Xml.XmlWriter.WriteComment(System.String)", Justification = "Reviewed. Literals can be used in an internal method")]

      public void WriteXml(XmlWriter writer)
    content.vb: >-
      <SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly", MessageId:="TranslateFromExceptionMessage", Justification:="TranslateFromException is a field name that when split could confuse the users")>

      <SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly", MessageId:="RequestResult", Justification:="RequestResult is a variable name which when split could confuse the users")>

      <SuppressMessage("Microsoft.Globalization", "CA1303:Do not pass literals as localized parameters", MessageId:="System.Xml.XmlWriter.WriteComment(System.String)", Justification:="Reviewed. Literals can be used in an internal method")>

      Public Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> stream to which the RequestResult is serialized.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA2204:Literals should be spelled correctly
    namedArguments:
    - name: MessageId
      type: System.String
      value: TranslateFromExceptionMessage
    - name: Justification
      type: System.String
      value: TranslateFromException is a field name that when split could confuse the users
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA2204:Literals should be spelled correctly
    namedArguments:
    - name: MessageId
      type: System.String
      value: RequestResult
    - name: Justification
      type: System.String
      value: RequestResult is a variable name which when split could confuse the users
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Globalization
    - type: System.String
      value: CA1303:Do not pass literals as localized parameters
    namedArguments:
    - name: MessageId
      type: System.String
      value: System.Xml.XmlWriter.WriteComment(System.String)
    - name: Justification
      type: System.String
      value: Reviewed. Literals can be used in an internal method
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: Microsoft.WindowsAzure.Storage.StorageLocation
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageLocation
  fullName: Microsoft.WindowsAzure.Storage.StorageLocation
- uid: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageExtendedErrorInformation
  fullName: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  fullName: System.Exception
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: Microsoft.WindowsAzure.Storage.RequestResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: RequestResult
  fullName: Microsoft.WindowsAzure.Storage.RequestResult
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  fullName: System.Xml.XmlWriter
