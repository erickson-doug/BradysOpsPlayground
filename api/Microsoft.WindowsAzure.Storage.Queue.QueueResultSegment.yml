items:
- uid: Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment
  id: QueueResultSegment
  parent: Microsoft.WindowsAzure.Storage.Queue
  children:
  - Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment.ContinuationToken
  - Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment.Results
  langs:
  - csharp
  - vb
  name: QueueResultSegment
  fullName: Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/QueueResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: QueueResultSegment
    path: src/Storage/Lib/Common/Queue/QueueResultSegment.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nRepresents a segment of <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueue\" data-throw-if-not-resolved=\"false\"></xref> results, with continuation information for pagination scenarios.\r\n"
  example: []
  syntax:
    content: public sealed class QueueResultSegment
    content.vb: Public NotInheritable Class QueueResultSegment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment.Results
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment.Results
  id: Results
  parent: Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment
  langs:
  - csharp
  - vb
  name: Results
  fullName: Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment.Results
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/QueueResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Results
    path: src/Storage/Lib/Common/Queue/QueueResultSegment.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets an enumerable collection of <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueue\" data-throw-if-not-resolved=\"false\"></xref> results.\r\n"
  example: []
  syntax:
    content: >-
      public IEnumerable<CloudQueue> Results

      {

          get;

      }
    content.vb: Public ReadOnly Property Results As IEnumerable(Of CloudQueue)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueue}
      description: An enumerable collection of <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueue" data-throw-if-not-resolved="false"></xref> objects.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment.ContinuationToken
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment.ContinuationToken
  id: ContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment
  langs:
  - csharp
  - vb
  name: ContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Queue.QueueResultSegment.ContinuationToken
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Queue/QueueResultSegment.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ContinuationToken
    path: src/Storage/Lib/Common/Queue/QueueResultSegment.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\r\nGets the continuation token used to retrieve the next segment of <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueue\" data-throw-if-not-resolved=\"false\"></xref> results. Returns null if there are no more results.\r\n"
  example: []
  syntax:
    content: >-
      public QueueContinuationToken ContinuationToken

      {

          get;

      }
    content.vb: Public ReadOnly Property ContinuationToken As QueueContinuationToken
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.QueueContinuationToken
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.QueueContinuationToken" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: CloudQueue
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
- uid: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue
  fullName: Microsoft.WindowsAzure.Storage.Queue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Queue.CloudQueue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CloudQueue>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.Queue.CloudQueue>
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.Storage.Queue.CloudQueue)
  name.vb: IEnumerable(Of CloudQueue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
    name: CloudQueue
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
    name: CloudQueue
    fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Storage.Queue.QueueContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: QueueContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Queue.QueueContinuationToken
