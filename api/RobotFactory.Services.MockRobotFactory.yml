items:
- uid: RobotFactory.Services.MockRobotFactory
  commentId: T:RobotFactory.Services.MockRobotFactory
  id: MockRobotFactory
  parent: RobotFactory.Services
  children:
  - RobotFactory.Services.MockRobotFactory._robots
  - RobotFactory.Services.MockRobotFactory.AttachRobot(RobotFactory.Models.Robot)
  - RobotFactory.Services.MockRobotFactory.DetachRobot(System.Int32)
  - RobotFactory.Services.MockRobotFactory.RechargeRobot(System.Int32)
  - RobotFactory.Services.MockRobotFactory.RobotUsed
  - RobotFactory.Services.MockRobotFactory.UseRobot(System.Int32)
  langs:
  - csharp
  - vb
  name: MockRobotFactory
  fullName: RobotFactory.Services.MockRobotFactory
  type: Class
  source:
    remote:
      path: src/RobotFactory/Services/MockRobotFactory.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MockRobotFactory
    path: src/RobotFactory/Services/MockRobotFactory.cs
    startLine: 9
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: 'public class MockRobotFactory : IRobotFactory'
    content.vb: >-
      Public Class MockRobotFactory

          Implements IRobotFactory
  inheritance:
  - System.Object
  implements:
  - RobotFactory.Services.IRobotFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: RobotFactory.Services.MockRobotFactory._robots
  commentId: P:RobotFactory.Services.MockRobotFactory._robots
  id: _robots
  parent: RobotFactory.Services.MockRobotFactory
  langs:
  - csharp
  - vb
  name: _robots
  fullName: RobotFactory.Services.MockRobotFactory._robots
  type: Property
  source:
    remote:
      path: src/RobotFactory/Services/MockRobotFactory.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: _robots
    path: src/RobotFactory/Services/MockRobotFactory.cs
    startLine: 11
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: >-
      public List<Robot> _robots

      {

          get;

      }
    content.vb: Public ReadOnly Property _robots As List(Of Robot)
    parameters: []
    return:
      type: System.Collections.Generic.List{RobotFactory.Models.Robot}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: RobotFactory.Services.MockRobotFactory.RobotUsed
  commentId: E:RobotFactory.Services.MockRobotFactory.RobotUsed
  id: RobotUsed
  parent: RobotFactory.Services.MockRobotFactory
  langs:
  - csharp
  - vb
  name: RobotUsed
  fullName: RobotFactory.Services.MockRobotFactory.RobotUsed
  type: Event
  source:
    remote:
      path: src/RobotFactory/Services/MockRobotFactory.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RobotUsed
    path: src/RobotFactory/Services/MockRobotFactory.cs
    startLine: 13
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: public event EventHandler<Robot> RobotUsed
    content.vb: Public Event RobotUsed As EventHandler(Of Robot)
    return:
      type: System.EventHandler{RobotFactory.Models.Robot}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotFactory.Services.MockRobotFactory.AttachRobot(RobotFactory.Models.Robot)
  commentId: M:RobotFactory.Services.MockRobotFactory.AttachRobot(RobotFactory.Models.Robot)
  id: AttachRobot(RobotFactory.Models.Robot)
  parent: RobotFactory.Services.MockRobotFactory
  langs:
  - csharp
  - vb
  name: AttachRobot(Robot)
  fullName: RobotFactory.Services.MockRobotFactory.AttachRobot(RobotFactory.Models.Robot)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/MockRobotFactory.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AttachRobot
    path: src/RobotFactory/Services/MockRobotFactory.cs
    startLine: 15
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: public bool AttachRobot(Robot robot)
    content.vb: Public Function AttachRobot(robot As Robot) As Boolean
    parameters:
    - id: robot
      type: RobotFactory.Models.Robot
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotFactory.Services.MockRobotFactory.DetachRobot(System.Int32)
  commentId: M:RobotFactory.Services.MockRobotFactory.DetachRobot(System.Int32)
  id: DetachRobot(System.Int32)
  parent: RobotFactory.Services.MockRobotFactory
  langs:
  - csharp
  - vb
  name: DetachRobot(Int32)
  fullName: RobotFactory.Services.MockRobotFactory.DetachRobot(System.Int32)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/MockRobotFactory.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DetachRobot
    path: src/RobotFactory/Services/MockRobotFactory.cs
    startLine: 21
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: public bool DetachRobot(int robotId)
    content.vb: Public Function DetachRobot(robotId As Integer) As Boolean
    parameters:
    - id: robotId
      type: System.Int32
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotFactory.Services.MockRobotFactory.RechargeRobot(System.Int32)
  commentId: M:RobotFactory.Services.MockRobotFactory.RechargeRobot(System.Int32)
  id: RechargeRobot(System.Int32)
  parent: RobotFactory.Services.MockRobotFactory
  langs:
  - csharp
  - vb
  name: RechargeRobot(Int32)
  fullName: RobotFactory.Services.MockRobotFactory.RechargeRobot(System.Int32)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/MockRobotFactory.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RechargeRobot
    path: src/RobotFactory/Services/MockRobotFactory.cs
    startLine: 27
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: public bool RechargeRobot(int robotId)
    content.vb: Public Function RechargeRobot(robotId As Integer) As Boolean
    parameters:
    - id: robotId
      type: System.Int32
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: RobotFactory.Services.MockRobotFactory.UseRobot(System.Int32)
  commentId: M:RobotFactory.Services.MockRobotFactory.UseRobot(System.Int32)
  id: UseRobot(System.Int32)
  parent: RobotFactory.Services.MockRobotFactory
  langs:
  - csharp
  - vb
  name: UseRobot(Int32)
  fullName: RobotFactory.Services.MockRobotFactory.UseRobot(System.Int32)
  type: Method
  source:
    remote:
      path: src/RobotFactory/Services/MockRobotFactory.cs
      branch: basic-dotnet
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UseRobot
    path: src/RobotFactory/Services/MockRobotFactory.cs
    startLine: 33
  assemblies:
  - RobotFactory
  namespace: RobotFactory.Services
  syntax:
    content: public bool UseRobot(int robotId)
    content.vb: Public Function UseRobot(robotId As Integer) As Boolean
    parameters:
    - id: robotId
      type: System.Int32
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: RobotFactory.Services
  isExternal: false
  name: RobotFactory.Services
  fullName: RobotFactory.Services
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: RobotFactory.Services.IRobotFactory
  parent: RobotFactory.Services
  isExternal: false
  name: IRobotFactory
  fullName: RobotFactory.Services.IRobotFactory
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.List{RobotFactory.Models.Robot}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Robot>
  fullName: System.Collections.Generic.List<RobotFactory.Models.Robot>
  fullname.vb: System.Collections.Generic.List(Of RobotFactory.Models.Robot)
  name.vb: List(Of Robot)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: RobotFactory.Models.Robot
    name: Robot
    fullName: RobotFactory.Models.Robot
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: RobotFactory.Models.Robot
    name: Robot
    fullName: RobotFactory.Models.Robot
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  fullName: System.Collections.Generic.List<T>
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.EventHandler{RobotFactory.Models.Robot}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<Robot>
  fullName: System.EventHandler<RobotFactory.Models.Robot>
  fullname.vb: System.EventHandler(Of RobotFactory.Models.Robot)
  name.vb: EventHandler(Of Robot)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    fullName: <
  - uid: RobotFactory.Models.Robot
    name: Robot
    fullName: RobotFactory.Models.Robot
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: RobotFactory.Models.Robot
    name: Robot
    fullName: RobotFactory.Models.Robot
  - name: )
    fullName: )
- uid: System.EventHandler`1
  parent: System
  isExternal: true
  name: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    fullName: <
  - name: TEventArgs
    fullName: TEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    fullName: TEventArgs
  - name: )
    fullName: )
- uid: RobotFactory.Models.Robot
  parent: RobotFactory.Models
  isExternal: false
  name: Robot
  fullName: RobotFactory.Models.Robot
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: RobotFactory.Models
  isExternal: false
  name: RobotFactory.Models
  fullName: RobotFactory.Models
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
