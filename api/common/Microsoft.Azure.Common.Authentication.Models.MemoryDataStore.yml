items:
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  commentId: T:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  id: MemoryDataStore
  parent: Microsoft.Azure.Common.Authentication.Models
  children:
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.CopyFile(System.String,System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.CreateDirectory(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DeleteDirectory(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DeleteFile(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DirectoryExists(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.EmptyDirectory(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.FileExists(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetCertificate(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetDirectories(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetDirectories(System.String,System.String,System.IO.SearchOption)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFileAttributes(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFiles(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFiles(System.String,System.String,System.IO.SearchOption)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsBytes(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsStream(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsText(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.RemoveCertificate(System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.RenameFile(System.String,System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.VirtualStore
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String,System.Byte[])
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String,System.String)
  - Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String,System.String,System.Text.Encoding)
  langs:
  - csharp
  - vb
  name: MemoryDataStore
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  type: Class
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MemoryDataStore
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: 'public class MemoryDataStore : IDataStore'
    content.vb: >-
      Public Class MemoryDataStore

          Implements IDataStore
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Common.Authentication.IDataStore
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.VirtualStore
  commentId: P:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.VirtualStore
  id: VirtualStore
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: VirtualStore
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.VirtualStore
  type: Property
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualStore
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: >-
      public Dictionary<string, string> VirtualStore

      {

          get;

          set;

      }
    content.vb: Public Property VirtualStore As Dictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String,System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String,System.String)
  id: WriteFile(System.String,System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: WriteFile(String, String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WriteFile
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void WriteFile(string path, string contents)
    content.vb: Public Sub WriteFile(path As String, contents As String)
    parameters:
    - id: path
      type: System.String
    - id: contents
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String,System.String,System.Text.Encoding)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String,System.String,System.Text.Encoding)
  id: WriteFile(System.String,System.String,System.Text.Encoding)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: WriteFile(String, String, Encoding)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String, System.String, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WriteFile
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void WriteFile(string path, string contents, Encoding encoding)
    content.vb: Public Sub WriteFile(path As String, contents As String, encoding As Encoding)
    parameters:
    - id: path
      type: System.String
    - id: contents
      type: System.String
    - id: encoding
      type: System.Text.Encoding
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String,System.Byte[])
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String,System.Byte[])
  id: WriteFile(System.String,System.Byte[])
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: WriteFile(String, Byte[])
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WriteFile
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void WriteFile(string path, byte[] contents)
    content.vb: Public Sub WriteFile(path As String, contents As Byte())
    parameters:
    - id: path
      type: System.String
    - id: contents
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.WriteFile(System.String, System.Byte())
  name.vb: WriteFile(String, Byte())
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsText(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsText(System.String)
  id: ReadFileAsText(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: ReadFileAsText(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsText(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReadFileAsText
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public string ReadFileAsText(string path)
    content.vb: Public Function ReadFileAsText(path As String) As String
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsStream(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsStream(System.String)
  id: ReadFileAsStream(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: ReadFileAsStream(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsStream(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReadFileAsStream
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public Stream ReadFileAsStream(string path)
    content.vb: Public Function ReadFileAsStream(path As String) As Stream
    parameters:
    - id: path
      type: System.String
    return:
      type: System.IO.Stream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsBytes(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsBytes(System.String)
  id: ReadFileAsBytes(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: ReadFileAsBytes(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.ReadFileAsBytes(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReadFileAsBytes
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public byte[] ReadFileAsBytes(string path)
    content.vb: Public Function ReadFileAsBytes(path As String) As Byte()
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.RenameFile(System.String,System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.RenameFile(System.String,System.String)
  id: RenameFile(System.String,System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: RenameFile(String, String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.RenameFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RenameFile
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void RenameFile(string oldPath, string newPath)
    content.vb: Public Sub RenameFile(oldPath As String, newPath As String)
    parameters:
    - id: oldPath
      type: System.String
    - id: newPath
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.CopyFile(System.String,System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: CopyFile(String, String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.CopyFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CopyFile
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void CopyFile(string oldPath, string newPath)
    content.vb: Public Sub CopyFile(oldPath As String, newPath As String)
    parameters:
    - id: oldPath
      type: System.String
    - id: newPath
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.FileExists(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.FileExists(System.String)
  id: FileExists(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: FileExists(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.FileExists(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FileExists
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public bool FileExists(string path)
    content.vb: Public Function FileExists(path As String) As Boolean
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DeleteFile(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: DeleteFile(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DeleteFile(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteFile
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void DeleteFile(string path)
    content.vb: Public Sub DeleteFile(path As String)
    parameters:
    - id: path
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DeleteDirectory(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DeleteDirectory(System.String)
  id: DeleteDirectory(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: DeleteDirectory(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DeleteDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteDirectory
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void DeleteDirectory(string dir)
    content.vb: Public Sub DeleteDirectory(dir As String)
    parameters:
    - id: dir
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.EmptyDirectory(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.EmptyDirectory(System.String)
  id: EmptyDirectory(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: EmptyDirectory(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.EmptyDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EmptyDirectory
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 146
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void EmptyDirectory(string dirPath)
    content.vb: Public Sub EmptyDirectory(dirPath As String)
    parameters:
    - id: dirPath
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DirectoryExists(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: DirectoryExists(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.DirectoryExists(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DirectoryExists
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public bool DirectoryExists(string path)
    content.vb: Public Function DirectoryExists(path As String) As Boolean
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.CreateDirectory(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: CreateDirectory(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.CreateDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateDirectory
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void CreateDirectory(string path)
    content.vb: Public Sub CreateDirectory(path As String)
    parameters:
    - id: path
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetDirectories(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetDirectories(System.String)
  id: GetDirectories(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: GetDirectories(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetDirectories(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDirectories
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 174
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public string[] GetDirectories(string sourceDirName)
    content.vb: Public Function GetDirectories(sourceDirName As String) As String()
    parameters:
    - id: sourceDirName
      type: System.String
    return:
      type: System.String[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetDirectories(System.String,System.String,System.IO.SearchOption)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetDirectories(System.String,System.String,System.IO.SearchOption)
  id: GetDirectories(System.String,System.String,System.IO.SearchOption)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: GetDirectories(String, String, SearchOption)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetDirectories(System.String, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDirectories
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 191
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public string[] GetDirectories(string startDirectory, string filePattern, SearchOption options)
    content.vb: Public Function GetDirectories(startDirectory As String, filePattern As String, options As SearchOption) As String()
    parameters:
    - id: startDirectory
      type: System.String
    - id: filePattern
      type: System.String
    - id: options
      type: System.IO.SearchOption
    return:
      type: System.String[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFiles(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: GetFiles(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFiles(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetFiles
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 208
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public string[] GetFiles(string sourceDirName)
    content.vb: Public Function GetFiles(sourceDirName As String) As String()
    parameters:
    - id: sourceDirName
      type: System.String
    return:
      type: System.String[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFiles(System.String,System.String,System.IO.SearchOption)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFiles(System.String,System.String,System.IO.SearchOption)
  id: GetFiles(System.String,System.String,System.IO.SearchOption)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: GetFiles(String, String, SearchOption)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFiles(System.String, System.String, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetFiles
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 224
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public string[] GetFiles(string startDirectory, string filePattern, SearchOption options)
    content.vb: Public Function GetFiles(startDirectory As String, filePattern As String, options As SearchOption) As String()
    parameters:
    - id: startDirectory
      type: System.String
    - id: filePattern
      type: System.String
    - id: options
      type: System.IO.SearchOption
    return:
      type: System.String[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFileAttributes(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFileAttributes(System.String)
  id: GetFileAttributes(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: GetFileAttributes(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetFileAttributes(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetFileAttributes
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 240
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public FileAttributes GetFileAttributes(string path)
    content.vb: Public Function GetFileAttributes(path As String) As FileAttributes
    parameters:
    - id: path
      type: System.String
    return:
      type: System.IO.FileAttributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetCertificate(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetCertificate(System.String)
  id: GetCertificate(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: GetCertificate(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.GetCertificate(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetCertificate
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 263
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public X509Certificate2 GetCertificate(string thumbprint)
    content.vb: Public Function GetCertificate(thumbprint As String) As X509Certificate2
    parameters:
    - id: thumbprint
      type: System.String
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: AddCertificate(X509Certificate2)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AddCertificate
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 275
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void AddCertificate(X509Certificate2 cert)
    content.vb: Public Sub AddCertificate(cert As X509Certificate2)
    parameters:
    - id: cert
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.RemoveCertificate(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.RemoveCertificate(System.String)
  id: RemoveCertificate(System.String)
  parent: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore
  langs:
  - csharp
  - vb
  name: RemoveCertificate(String)
  fullName: Microsoft.Azure.Common.Authentication.Models.MemoryDataStore.RemoveCertificate(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RemoveCertificate
    path: src/src/Authentication/Common.Authentication/Models/MemoryDataStore.cs
    startLine: 283
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Models
  syntax:
    content: public void RemoveCertificate(string thumbprint)
    content.vb: Public Sub RemoveCertificate(thumbprint As String)
    parameters:
    - id: thumbprint
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Common.Authentication.Models
  isExternal: false
  name: Microsoft.Azure.Common.Authentication.Models
  fullName: Microsoft.Azure.Common.Authentication.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Common.Authentication.IDataStore
  parent: Microsoft.Azure.Common.Authentication
  isExternal: false
  name: IDataStore
  fullName: Microsoft.Azure.Common.Authentication.IDataStore
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Common.Authentication
  isExternal: false
  name: Microsoft.Azure.Common.Authentication
  fullName: Microsoft.Azure.Common.Authentication
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.String[]
  isExternal: true
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.IO.SearchOption
  parent: System.IO
  isExternal: true
  name: SearchOption
  fullName: System.IO.SearchOption
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: true
  name: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
