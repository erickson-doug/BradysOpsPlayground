items:
- uid: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask
  commentId: T:Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask
  id: ValidateStrongNameSignatureTask
  parent: Microsoft.WindowsAzure.Build.Tasks
  children:
  - Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.Assembly
  - Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.Execute
  - Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.ExpectedDelaySigned
  - Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.ExpectedTokenSignature
  - Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.WindowsSdkPath
  langs:
  - csharp
  - vb
  name: ValidateStrongNameSignatureTask
  fullName: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask
  type: Class
  source:
    remote:
      path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ValidateStrongNameSignatureTask
    path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Build.Tasks
  namespace: Microsoft.WindowsAzure.Build.Tasks
  summary: "\r\nA simple Microsoft Build task for validating the strong name signature\r\non a .NET assembly.\r\n"
  example: []
  syntax:
    content: 'public class ValidateStrongNameSignatureTask : Task, ITask'
    content.vb: >-
      Public Class ValidateStrongNameSignatureTask

          Inherits Task

          Implements ITask
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  implements:
  - Microsoft.Build.Framework.ITask
  inheritedMembers:
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.Log
  - Microsoft.Build.Utilities.Task.TaskResources
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.WindowsSdkPath
  commentId: P:Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.WindowsSdkPath
  id: WindowsSdkPath
  parent: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask
  langs:
  - csharp
  - vb
  name: WindowsSdkPath
  fullName: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.WindowsSdkPath
  type: Property
  source:
    remote:
      path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WindowsSdkPath
    path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Build.Tasks
  namespace: Microsoft.WindowsAzure.Build.Tasks
  summary: "\r\nGets or sets the path to the Windows SDK on the machine.\r\n"
  example: []
  syntax:
    content: >-
      [Required]

      public string WindowsSdkPath

      {

          get;

          set;

      }
    content.vb: >-
      <Required>

      Public Property WindowsSdkPath As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.RequiredAttribute
    ctor: Microsoft.Build.Framework.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.Assembly
  commentId: P:Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.Assembly
  id: Assembly
  parent: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask
  langs:
  - csharp
  - vb
  name: Assembly
  fullName: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.Assembly
  type: Property
  source:
    remote:
      path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Assembly
    path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Build.Tasks
  namespace: Microsoft.WindowsAzure.Build.Tasks
  summary: "\r\nGets or sets the assembly whose strong name needs to be verified.\r\n"
  example: []
  syntax:
    content: >-
      [Required]

      public ITaskItem Assembly

      {

          get;

          set;

      }
    content.vb: >-
      <Required>

      Public Property Assembly As ITaskItem
    parameters: []
    return:
      type: Microsoft.Build.Framework.ITaskItem
  attributes:
  - type: Microsoft.Build.Framework.RequiredAttribute
    ctor: Microsoft.Build.Framework.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.ExpectedTokenSignature
  commentId: P:Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.ExpectedTokenSignature
  id: ExpectedTokenSignature
  parent: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask
  langs:
  - csharp
  - vb
  name: ExpectedTokenSignature
  fullName: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.ExpectedTokenSignature
  type: Property
  source:
    remote:
      path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExpectedTokenSignature
    path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Build.Tasks
  namespace: Microsoft.WindowsAzure.Build.Tasks
  summary: "\r\nGets or sets the expected strong name token for the assembly.\r\n"
  example: []
  syntax:
    content: >-
      [Required]

      public string ExpectedTokenSignature

      {

          get;

          set;

      }
    content.vb: >-
      <Required>

      Public Property ExpectedTokenSignature As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.RequiredAttribute
    ctor: Microsoft.Build.Framework.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.ExpectedDelaySigned
  commentId: P:Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.ExpectedDelaySigned
  id: ExpectedDelaySigned
  parent: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask
  langs:
  - csharp
  - vb
  name: ExpectedDelaySigned
  fullName: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.ExpectedDelaySigned
  type: Property
  source:
    remote:
      path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExpectedDelaySigned
    path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Build.Tasks
  namespace: Microsoft.WindowsAzure.Build.Tasks
  summary: "\r\nGets or sets a value indicating whether the assembly is expected to\r\nbe delay signed.\r\n"
  example: []
  syntax:
    content: >-
      public bool ExpectedDelaySigned

      {

          get;

          set;

      }
    content.vb: Public Property ExpectedDelaySigned As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.Execute
  commentId: M:Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.Execute
  id: Execute
  parent: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask
  langs:
  - csharp
  - vb
  name: Execute()
  fullName: Microsoft.WindowsAzure.Build.Tasks.ValidateStrongNameSignatureTask.Execute()
  type: Method
  source:
    remote:
      path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Execute
    path: src/tools/Microsoft.WindowsAzure.Build.Tasks/ValidateStrongNameSignatureTask.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Build.Tasks
  namespace: Microsoft.WindowsAzure.Build.Tasks
  summary: "\r\nExecutes the task to validate the strong name information for the\r\nassembly using the input values expected by the task.\r\n"
  example: []
  syntax:
    content: public override bool Execute()
    content.vb: Public Overrides Function Execute As Boolean
    return:
      type: System.Boolean
      description: >-
        Returns a value indicating whether the task has been

        successful and the build should continue.
  overridden: Microsoft.Build.Utilities.Task.Execute
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.WindowsAzure.Build.Tasks
  isExternal: false
  name: Microsoft.WindowsAzure.Build.Tasks
  fullName: Microsoft.WindowsAzure.Build.Tasks
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Build.Utilities.Task
  parent: Microsoft.Build.Utilities
  isExternal: true
  name: Task
  fullName: Microsoft.Build.Utilities.Task
- uid: Microsoft.Build.Framework.ITask
  parent: Microsoft.Build.Framework
  isExternal: true
  name: ITask
  fullName: Microsoft.Build.Framework.ITask
- uid: Microsoft.Build.Utilities.Task.BuildEngine
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: BuildEngine
  fullName: Microsoft.Build.Utilities.Task.BuildEngine
- uid: Microsoft.Build.Utilities.Task.BuildEngine2
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: BuildEngine2
  fullName: Microsoft.Build.Utilities.Task.BuildEngine2
- uid: Microsoft.Build.Utilities.Task.BuildEngine3
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: BuildEngine3
  fullName: Microsoft.Build.Utilities.Task.BuildEngine3
- uid: Microsoft.Build.Utilities.Task.BuildEngine4
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: BuildEngine4
  fullName: Microsoft.Build.Utilities.Task.BuildEngine4
- uid: Microsoft.Build.Utilities.Task.HostObject
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: HostObject
  fullName: Microsoft.Build.Utilities.Task.HostObject
- uid: Microsoft.Build.Utilities.Task.Log
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: Log
  fullName: Microsoft.Build.Utilities.Task.Log
- uid: Microsoft.Build.Utilities.Task.TaskResources
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: TaskResources
  fullName: Microsoft.Build.Utilities.Task.TaskResources
- uid: Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: HelpKeywordPrefix
  fullName: Microsoft.Build.Utilities.Task.HelpKeywordPrefix
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Build.Utilities
  isExternal: false
  name: Microsoft.Build.Utilities
  fullName: Microsoft.Build.Utilities
- uid: Microsoft.Build.Framework
  isExternal: false
  name: Microsoft.Build.Framework
  fullName: Microsoft.Build.Framework
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: true
  name: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Utilities.Task.Execute
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: Execute()
  fullName: Microsoft.Build.Utilities.Task.Execute()
  spec.csharp:
  - uid: Microsoft.Build.Utilities.Task.Execute
    name: Execute
    fullName: Microsoft.Build.Utilities.Task.Execute
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Build.Utilities.Task.Execute
    name: Execute
    fullName: Microsoft.Build.Utilities.Task.Execute
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
