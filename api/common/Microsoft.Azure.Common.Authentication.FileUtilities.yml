items:
- uid: Microsoft.Azure.Common.Authentication.FileUtilities
  commentId: T:Microsoft.Azure.Common.Authentication.FileUtilities
  id: FileUtilities
  parent: Microsoft.Azure.Common.Authentication
  children:
  - Microsoft.Azure.Common.Authentication.FileUtilities.CombinePath(System.String[])
  - Microsoft.Azure.Common.Authentication.FileUtilities.CopyDirectory(System.String,System.String)
  - Microsoft.Azure.Common.Authentication.FileUtilities.CreateTempDirectory
  - Microsoft.Azure.Common.Authentication.FileUtilities.DataStore
  - Microsoft.Azure.Common.Authentication.FileUtilities.DirectoryCopy(System.String,System.String,System.Boolean)
  - Microsoft.Azure.Common.Authentication.FileUtilities.EnsureDirectoryExists(System.String)
  - Microsoft.Azure.Common.Authentication.FileUtilities.GetAssemblyDirectory
  - Microsoft.Azure.Common.Authentication.FileUtilities.GetContentFilePath(System.String)
  - Microsoft.Azure.Common.Authentication.FileUtilities.GetContentFilePath(System.String,System.String)
  - Microsoft.Azure.Common.Authentication.FileUtilities.GetFileEncoding(System.String)
  - Microsoft.Azure.Common.Authentication.FileUtilities.GetInstallPath
  - Microsoft.Azure.Common.Authentication.FileUtilities.GetModuleFolderName(Microsoft.Azure.Common.Authentication.AzureModule)
  - Microsoft.Azure.Common.Authentication.FileUtilities.GetModuleName(Microsoft.Azure.Common.Authentication.AzureModule)
  - Microsoft.Azure.Common.Authentication.FileUtilities.GetPSModulePathForModule(Microsoft.Azure.Common.Authentication.AzureModule)
  - Microsoft.Azure.Common.Authentication.FileUtilities.GetWithProgramFilesPath(System.String,System.Boolean)
  - Microsoft.Azure.Common.Authentication.FileUtilities.IsValidDirectoryPath(System.String)
  - Microsoft.Azure.Common.Authentication.FileUtilities.RecreateDirectory(System.String)
  langs:
  - csharp
  - vb
  name: FileUtilities
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities
  type: Class
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FileUtilities
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public class FileUtilities
    content.vb: Public Class FileUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.DataStore
  commentId: P:Microsoft.Azure.Common.Authentication.FileUtilities.DataStore
  id: DataStore
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: DataStore
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.DataStore
  type: Property
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DataStore
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: >-
      public static IDataStore DataStore

      {

          get;

          set;

      }
    content.vb: Public Shared Property DataStore As IDataStore
    parameters: []
    return:
      type: Microsoft.Azure.Common.Authentication.IDataStore
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.GetAssemblyDirectory
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.GetAssemblyDirectory
  id: GetAssemblyDirectory
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: GetAssemblyDirectory()
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.GetAssemblyDirectory()
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetAssemblyDirectory
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static string GetAssemblyDirectory()
    content.vb: Public Shared Function GetAssemblyDirectory As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.GetContentFilePath(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.GetContentFilePath(System.String)
  id: GetContentFilePath(System.String)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: GetContentFilePath(String)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.GetContentFilePath(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetContentFilePath
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static string GetContentFilePath(string fileName)
    content.vb: Public Shared Function GetContentFilePath(fileName As String) As String
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.GetContentFilePath(System.String,System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.GetContentFilePath(System.String,System.String)
  id: GetContentFilePath(System.String,System.String)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: GetContentFilePath(String, String)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.GetContentFilePath(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetContentFilePath
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static string GetContentFilePath(string startDirectory, string fileName)
    content.vb: Public Shared Function GetContentFilePath(startDirectory As String, fileName As String) As String
    parameters:
    - id: startDirectory
      type: System.String
    - id: fileName
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.GetWithProgramFilesPath(System.String,System.Boolean)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.GetWithProgramFilesPath(System.String,System.Boolean)
  id: GetWithProgramFilesPath(System.String,System.Boolean)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: GetWithProgramFilesPath(String, Boolean)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.GetWithProgramFilesPath(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetWithProgramFilesPath
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static string GetWithProgramFilesPath(string directoryName, bool throwIfNotFound)
    content.vb: Public Shared Function GetWithProgramFilesPath(directoryName As String, throwIfNotFound As Boolean) As String
    parameters:
    - id: directoryName
      type: System.String
    - id: throwIfNotFound
      type: System.Boolean
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.DirectoryCopy(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.DirectoryCopy(System.String,System.String,System.Boolean)
  id: DirectoryCopy(System.String,System.String,System.Boolean)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: DirectoryCopy(String, String, Boolean)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.DirectoryCopy(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DirectoryCopy
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  summary: "\r\nCopies a directory.\r\n"
  example: []
  syntax:
    content: public static void DirectoryCopy(string sourceDirName, string destDirName, bool copySubDirs)
    content.vb: Public Shared Sub DirectoryCopy(sourceDirName As String, destDirName As String, copySubDirs As Boolean)
    parameters:
    - id: sourceDirName
      type: System.String
      description: The source directory name
    - id: destDirName
      type: System.String
      description: The destination directory name
    - id: copySubDirs
      type: System.Boolean
      description: Should the copy be recursive
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.EnsureDirectoryExists(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.EnsureDirectoryExists(System.String)
  id: EnsureDirectoryExists(System.String)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: EnsureDirectoryExists(String)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.EnsureDirectoryExists(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EnsureDirectoryExists
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  summary: "\r\nEnsures that a directory exists beofre attempting to write a file\r\n"
  example: []
  syntax:
    content: public static void EnsureDirectoryExists(string pathName)
    content.vb: Public Shared Sub EnsureDirectoryExists(pathName As String)
    parameters:
    - id: pathName
      type: System.String
      description: The path to the file that will be created
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.CreateTempDirectory
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.CreateTempDirectory
  id: CreateTempDirectory
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: CreateTempDirectory()
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.CreateTempDirectory()
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateTempDirectory
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 152
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  summary: "\r\nCreate a unique temp directory.\r\n"
  example: []
  syntax:
    content: public static string CreateTempDirectory()
    content.vb: Public Shared Function CreateTempDirectory As String
    return:
      type: System.String
      description: Path to the temp directory.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.CopyDirectory(System.String,System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.CopyDirectory(System.String,System.String)
  id: CopyDirectory(System.String,System.String)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: CopyDirectory(String, String)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.CopyDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CopyDirectory
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 170
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  summary: "\r\nCopy a directory from one path to another.\r\n"
  example: []
  syntax:
    content: public static void CopyDirectory(string sourceDirectory, string destinationDirectory)
    content.vb: Public Shared Sub CopyDirectory(sourceDirectory As String, destinationDirectory As String)
    parameters:
    - id: sourceDirectory
      type: System.String
      description: Source directory.
    - id: destinationDirectory
      type: System.String
      description: Destination directory.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.GetFileEncoding(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.GetFileEncoding(System.String)
  id: GetFileEncoding(System.String)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: GetFileEncoding(String)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.GetFileEncoding(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetFileEncoding
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static Encoding GetFileEncoding(string path)
    content.vb: Public Shared Function GetFileEncoding(path As String) As Encoding
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Text.Encoding
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.CombinePath(System.String[])
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.CombinePath(System.String[])
  id: CombinePath(System.String[])
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: CombinePath(String[])
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.CombinePath(System.String[])
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CombinePath
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 214
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static string CombinePath(params string[] paths)
    content.vb: Public Shared Function CombinePath(ParamArray paths As String()) As String
    parameters:
    - id: paths
      type: System.String[]
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Common.Authentication.FileUtilities.CombinePath(System.String())
  name.vb: CombinePath(String())
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.IsValidDirectoryPath(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.IsValidDirectoryPath(System.String)
  id: IsValidDirectoryPath(System.String)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: IsValidDirectoryPath(String)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.IsValidDirectoryPath(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsValidDirectoryPath
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 224
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  summary: "\r\nReturns true if path is a valid directory.\r\n"
  example: []
  syntax:
    content: public static bool IsValidDirectoryPath(string path)
    content.vb: Public Shared Function IsValidDirectoryPath(path As String) As Boolean
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.RecreateDirectory(System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.RecreateDirectory(System.String)
  id: RecreateDirectory(System.String)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: RecreateDirectory(String)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.RecreateDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RecreateDirectory
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 250
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static void RecreateDirectory(string dir)
    content.vb: Public Shared Sub RecreateDirectory(dir As String)
    parameters:
    - id: dir
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.GetPSModulePathForModule(Microsoft.Azure.Common.Authentication.AzureModule)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.GetPSModulePathForModule(Microsoft.Azure.Common.Authentication.AzureModule)
  id: GetPSModulePathForModule(Microsoft.Azure.Common.Authentication.AzureModule)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: GetPSModulePathForModule(AzureModule)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.GetPSModulePathForModule(Microsoft.Azure.Common.Authentication.AzureModule)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPSModulePathForModule
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 265
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  summary: "\r\nGets the root installation path for the given Azure module.\r\n"
  example: []
  syntax:
    content: public static string GetPSModulePathForModule(AzureModule module)
    content.vb: Public Shared Function GetPSModulePathForModule(module As AzureModule) As String
    parameters:
    - id: module
      type: Microsoft.Azure.Common.Authentication.AzureModule
      description: The module name
    return:
      type: System.String
      description: The module full path
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.GetInstallPath
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.GetInstallPath
  id: GetInstallPath
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: GetInstallPath()
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.GetInstallPath()
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetInstallPath
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 274
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  summary: "\r\nGets the root directory for all modules installation.\r\n"
  example: []
  syntax:
    content: public static string GetInstallPath()
    content.vb: Public Shared Function GetInstallPath As String
    return:
      type: System.String
      description: The install path
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.GetModuleName(Microsoft.Azure.Common.Authentication.AzureModule)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.GetModuleName(Microsoft.Azure.Common.Authentication.AzureModule)
  id: GetModuleName(Microsoft.Azure.Common.Authentication.AzureModule)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: GetModuleName(AzureModule)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.GetModuleName(Microsoft.Azure.Common.Authentication.AzureModule)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetModuleName
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static string GetModuleName(AzureModule module)
    content.vb: Public Shared Function GetModuleName(module As AzureModule) As String
    parameters:
    - id: module
      type: Microsoft.Azure.Common.Authentication.AzureModule
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.FileUtilities.GetModuleFolderName(Microsoft.Azure.Common.Authentication.AzureModule)
  commentId: M:Microsoft.Azure.Common.Authentication.FileUtilities.GetModuleFolderName(Microsoft.Azure.Common.Authentication.AzureModule)
  id: GetModuleFolderName(Microsoft.Azure.Common.Authentication.AzureModule)
  parent: Microsoft.Azure.Common.Authentication.FileUtilities
  langs:
  - csharp
  - vb
  name: GetModuleFolderName(AzureModule)
  fullName: Microsoft.Azure.Common.Authentication.FileUtilities.GetModuleFolderName(Microsoft.Azure.Common.Authentication.AzureModule)
  type: Method
  source:
    remote:
      path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetModuleFolderName
    path: src/src/Authentication/Common.Authentication/Utilities/FileUtilities.cs
    startLine: 315
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static string GetModuleFolderName(AzureModule module)
    content.vb: Public Shared Function GetModuleFolderName(module As AzureModule) As String
    parameters:
    - id: module
      type: Microsoft.Azure.Common.Authentication.AzureModule
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Common.Authentication
  isExternal: false
  name: Microsoft.Azure.Common.Authentication
  fullName: Microsoft.Azure.Common.Authentication
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Common.Authentication.IDataStore
  parent: Microsoft.Azure.Common.Authentication
  isExternal: false
  name: IDataStore
  fullName: Microsoft.Azure.Common.Authentication.IDataStore
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.String[]
  isExternal: true
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: Microsoft.Azure.Common.Authentication.AzureModule
  parent: Microsoft.Azure.Common.Authentication
  isExternal: false
  name: AzureModule
  fullName: Microsoft.Azure.Common.Authentication.AzureModule
