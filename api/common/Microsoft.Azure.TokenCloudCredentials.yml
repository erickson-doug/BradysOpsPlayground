items:
- uid: Microsoft.Azure.TokenCloudCredentials
  commentId: T:Microsoft.Azure.TokenCloudCredentials
  id: TokenCloudCredentials
  parent: Microsoft.Azure
  children:
  - Microsoft.Azure.TokenCloudCredentials.#ctor(System.String)
  - Microsoft.Azure.TokenCloudCredentials.#ctor(System.String,System.String)
  - Microsoft.Azure.TokenCloudCredentials.Create(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Microsoft.Azure.TokenCloudCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - Microsoft.Azure.TokenCloudCredentials.SubscriptionId
  - Microsoft.Azure.TokenCloudCredentials.Token
  langs:
  - csharp
  - vb
  name: TokenCloudCredentials
  fullName: Microsoft.Azure.TokenCloudCredentials
  type: Class
  source:
    remote:
      path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TokenCloudCredentials
    path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Common
  namespace: Microsoft.Azure
  summary: "\r\nClass for token based credentials associated with a particular subscription.\r\n"
  example: []
  syntax:
    content: 'public class TokenCloudCredentials : SubscriptionCloudCredentials'
    content.vb: >-
      Public Class TokenCloudCredentials

          Inherits SubscriptionCloudCredentials
  inheritance:
  - System.Object
  - Microsoft.Azure.SubscriptionCloudCredentials
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.TokenCloudCredentials.SubscriptionId
  commentId: P:Microsoft.Azure.TokenCloudCredentials.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Azure.TokenCloudCredentials
  langs:
  - csharp
  - vb
  name: SubscriptionId
  fullName: Microsoft.Azure.TokenCloudCredentials.SubscriptionId
  type: Property
  source:
    remote:
      path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SubscriptionId
    path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Common
  namespace: Microsoft.Azure
  summary: "\r\nGets subscription ID which uniquely identifies Microsoft Azure \r\nsubscription. The subscription ID forms part of the URI for \r\nevery call that you make to the Service Management API.\r\n"
  example: []
  syntax:
    content: >-
      public override string SubscriptionId

      {

          get;

      }
    content.vb: Public Overrides ReadOnly Property SubscriptionId As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.Azure.SubscriptionCloudCredentials.SubscriptionId
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.TokenCloudCredentials.Token
  commentId: P:Microsoft.Azure.TokenCloudCredentials.Token
  id: Token
  parent: Microsoft.Azure.TokenCloudCredentials
  langs:
  - csharp
  - vb
  name: Token
  fullName: Microsoft.Azure.TokenCloudCredentials.Token
  type: Property
  source:
    remote:
      path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Token
    path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Common
  namespace: Microsoft.Azure
  summary: "\r\nGets or sets secure token used to authenticate against Microsoft Azure API. \r\nNo anonymous requests are allowed.\r\n"
  example: []
  syntax:
    content: >-
      public string Token

      {

          get;

          set;

      }
    content.vb: Public Property Token As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.TokenCloudCredentials.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.TokenCloudCredentials.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.TokenCloudCredentials
  langs:
  - csharp
  - vb
  name: TokenCloudCredentials(String, String)
  fullName: Microsoft.Azure.TokenCloudCredentials.TokenCloudCredentials(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Common
  namespace: Microsoft.Azure
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.Azure.TokenCloudCredentials\" data-throw-if-not-resolved=\"false\"></xref>\r\nclass with subscription ID.\r\n"
  example: []
  syntax:
    content: public TokenCloudCredentials(string subscriptionId, string token)
    content.vb: Public Sub New(subscriptionId As String, token As String)
    parameters:
    - id: subscriptionId
      type: System.String
      description: The Subscription ID.
    - id: token
      type: System.String
      description: Valid JSON Web Token (JWT).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.TokenCloudCredentials.#ctor(System.String)
  commentId: M:Microsoft.Azure.TokenCloudCredentials.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.TokenCloudCredentials
  langs:
  - csharp
  - vb
  name: TokenCloudCredentials(String)
  fullName: Microsoft.Azure.TokenCloudCredentials.TokenCloudCredentials(System.String)
  type: Constructor
  source:
    remote:
      path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Common
  namespace: Microsoft.Azure
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.Azure.TokenCloudCredentials\" data-throw-if-not-resolved=\"false\"></xref>\r\nclass without subscription ID.\r\n"
  example: []
  syntax:
    content: public TokenCloudCredentials(string token)
    content.vb: Public Sub New(token As String)
    parameters:
    - id: token
      type: System.String
      description: Valid JSON Web Token (JWT).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.TokenCloudCredentials.Create(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Microsoft.Azure.TokenCloudCredentials.Create(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: Create(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Microsoft.Azure.TokenCloudCredentials
  langs:
  - csharp
  - vb
  name: Create(IDictionary<String, Object>)
  fullName: Microsoft.Azure.TokenCloudCredentials.Create(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Create
    path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Common
  namespace: Microsoft.Azure
  summary: "\r\nAttempt to create token credentials from a collection of\r\nsettings.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated method. Use public constructor instead.")]

      public static TokenCloudCredentials Create(IDictionary<string, object> settings)
    content.vb: >-
      <Obsolete("Deprecated method. Use public constructor instead.")>

      Public Shared Function Create(settings As IDictionary(Of String, Object)) As TokenCloudCredentials
    parameters:
    - id: settings
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: The settings to use.
    return:
      type: Microsoft.Azure.TokenCloudCredentials
      description: "\r\nTokenCloudCredentials is created, null otherwise.\r\n"
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated method. Use public constructor instead.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.TokenCloudCredentials.Create(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: Create(IDictionary(Of String, Object))
- uid: Microsoft.Azure.TokenCloudCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.TokenCloudCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Microsoft.Azure.TokenCloudCredentials
  langs:
  - csharp
  - vb
  name: ProcessHttpRequestAsync(HttpRequestMessage, CancellationToken)
  fullName: Microsoft.Azure.TokenCloudCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProcessHttpRequestAsync
    path: src/src/Common/Common/Credentials/TokenCloudCredentials.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Common
  namespace: Microsoft.Azure
  summary: "\r\nApply the credentials to the HTTP request.\r\n"
  example: []
  syntax:
    content: public override Task ProcessHttpRequestAsync(HttpRequestMessage request, CancellationToken cancellationToken)
    content.vb: Public Overrides Function ProcessHttpRequestAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The HTTP request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: "\r\nTask that will complete when processing has completed.\r\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure
  isExternal: false
  name: Microsoft.Azure
  fullName: Microsoft.Azure
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.SubscriptionCloudCredentials
  parent: Microsoft.Azure
  isExternal: false
  name: SubscriptionCloudCredentials
  fullName: Microsoft.Azure.SubscriptionCloudCredentials
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.SubscriptionCloudCredentials.SubscriptionId
  parent: Microsoft.Azure.SubscriptionCloudCredentials
  isExternal: false
  name: SubscriptionId
  fullName: Microsoft.Azure.SubscriptionCloudCredentials.SubscriptionId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.TokenCloudCredentials
  parent: Microsoft.Azure
  isExternal: false
  name: TokenCloudCredentials
  fullName: Microsoft.Azure.TokenCloudCredentials
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
