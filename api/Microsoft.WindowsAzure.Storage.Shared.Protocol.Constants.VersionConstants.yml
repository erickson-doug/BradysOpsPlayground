items:
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants
  commentId: T:Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants
  id: Constants.VersionConstants
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants.August2013
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants.February2012
  langs:
  - csharp
  - vb
  name: Constants.VersionConstants
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants
  type: Class
  source:
    remote:
      path: src/Storage/Common/Shared/Protocol/Constants.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VersionConstants
    path: src/Storage/Common/Shared/Protocol/Constants.cs
    startLine: 1444
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\r\nConstants for version strings\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible", Justification = "Reviewed.")]

      public class VersionConstants
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible", Justification:="Reviewed.")>

      Public Class VersionConstants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1034:NestedTypesShouldNotBeVisible
    namedArguments:
    - name: Justification
      type: System.String
      value: Reviewed.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants.August2013
  commentId: F:Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants.August2013
  id: August2013
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants
  langs:
  - csharp
  - vb
  name: August2013
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants.August2013
  type: Field
  source:
    remote:
      path: src/Storage/Common/Shared/Protocol/Constants.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: August2013
    path: src/Storage/Common/Shared/Protocol/Constants.cs
    startLine: 1450
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\r\nConstant for the 2013-08-15 version.\r\n"
  example: []
  syntax:
    content: public const string August2013 = "2013-08-15"
    content.vb: Public Const August2013 As String = "2013-08-15"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants.February2012
  commentId: F:Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants.February2012
  id: February2012
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants
  langs:
  - csharp
  - vb
  name: February2012
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.VersionConstants.February2012
  type: Field
  source:
    remote:
      path: src/Storage/Common/Shared/Protocol/Constants.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: February2012
    path: src/Storage/Common/Shared/Protocol/Constants.cs
    startLine: 1455
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\r\nConstant for the 2012-02-12 version.\r\n"
  example: []
  syntax:
    content: public const string February2012 = "2012-02-12"
    content.vb: Public Const February2012 As String = "2012-02-12"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Shared.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
