items:
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  id: CloudAppendBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlock(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadText(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendBlock(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromByteArray(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromFile(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromStream(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendText(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndCreateOrReplace(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndCreateSnapshot(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndDownloadText(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndOpenWrite(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromByteArray(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromFile(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromStream(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadText(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWrite(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: CloudAppendBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CloudAppendBlob
    path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRepresents an append blob, a type of blob where blocks of data are always committed to the end of the blob.\r\n"
  example: []
  syntax:
    content: 'public class CloudAppendBlob : CloudBlob, ICloudBlob, IListBlobItem'
    content.vb: >-
      Public Class CloudAppendBlob

          Inherits CloudBlob

          Implements ICloudBlob, IListBlobItem
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  implements:
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  inheritedMembers:
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndOpenRead(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToStream(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToFile(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToByteArray(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToStream(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndExists(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndFetchAttributes(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetMetadata(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetProperties(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Delete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDelete(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDeleteIfExists(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAcquireLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndRenewLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndChangeLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndReleaseLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndBreakLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopy(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndStartCopy(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAbortCopy(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Snapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSnapshot(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ServiceClient
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Properties
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Metadata
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Uri
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotTime
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.IsSnapshot
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedUri
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedStorageUri
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CopyState
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Name
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Container
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Parent
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BlobType
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWrite(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWrite(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: OpenWrite(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: OpenWrite(Boolean, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWrite(System.Boolean, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OpenWrite
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nOpens a stream for writing to the blob.\r\n"
  remarks: "\r\nNote that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.\r\nSet the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the block size to write, in bytes, \r\nranging from between 16 KB and 4 MB inclusive.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual CloudBlobStream OpenWrite(bool createNew, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function OpenWrite(createNew As Boolean, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As CloudBlobStream
    parameters:
    - id: createNew
      type: System.Boolean
      description: Use <code>true</code> to create a new append blob or overwrite an existing one, <code>false</code> to append to an existing blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean,System.AsyncCallback,System.Object)
  id: BeginOpenWrite(System.Boolean,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginOpenWrite(Boolean, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginOpenWrite
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 121
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to open a stream for writing to the blob.\r\n"
  remarks: "\r\nNote that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.\r\nSet the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the block size to write, in bytes, \r\nranging from between 16 KB and 4 MB inclusive.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginOpenWrite(bool createNew, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginOpenWrite(createNew As Boolean, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: createNew
      type: System.Boolean
      description: Use <code>true</code> to create a new append blob or overwrite an existing one, <code>false</code> to append to an existing blob.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginOpenWrite(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginOpenWrite(Boolean, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginOpenWrite(System.Boolean, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginOpenWrite
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 143
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to open a stream for writing to the blob.\r\n"
  remarks: "\r\nNote that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.\r\nSet the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the block size to write, in bytes, \r\nranging from between 16 KB and 4 MB inclusive.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes", Justification = "Needed to ensure exceptions are not thrown on threadpool threads.")]

      public virtual ICancellableAsyncResult BeginOpenWrite(bool createNew, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes", Justification:="Needed to ensure exceptions are not thrown on threadpool threads.")>

      Public Overridable Function BeginOpenWrite(createNew As Boolean, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: createNew
      type: System.Boolean
      description: Use <code>true</code> to create a new append blob or overwrite an existing one, <code>false</code> to append to an existing blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1031:DoNotCatchGeneralExceptionTypes
    namedArguments:
    - name: Justification
      type: System.String
      value: Needed to ensure exceptions are not thrown on threadpool threads.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndOpenWrite(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndOpenWrite(System.IAsyncResult)
  id: EndOpenWrite(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndOpenWrite(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndOpenWrite(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndOpenWrite
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 254
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to open a stream for writing to the blob.\r\n"
  example: []
  syntax:
    content: public virtual CloudBlobStream EndOpenWrite(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndOpenWrite(asyncResult As IAsyncResult) As CloudBlobStream
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean)
  id: OpenWriteAsync(System.Boolean)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: OpenWriteAsync(Boolean)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OpenWriteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 272
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to open a stream for writing to the blob.\r\n"
  remarks: "\r\nNote that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.\r\nSet the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the block size to write, in bytes, \r\nranging from between 16 KB and 4 MB inclusive.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudBlobStream> OpenWriteAsync(bool createNew)
    content.vb: Public Overridable Function OpenWriteAsync(createNew As Boolean) As Task(Of CloudBlobStream)
    parameters:
    - id: createNew
      type: System.Boolean
      description: Use <code>true</code> to create a new append blob or overwrite an existing one, <code>false</code> to append to an existing blob.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,System.Threading.CancellationToken)
  id: OpenWriteAsync(System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: OpenWriteAsync(Boolean, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OpenWriteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 289
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to open a stream for writing to the blob.\r\n"
  remarks: "\r\nNote that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.\r\nSet the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the block size to write, in bytes, \r\nranging from between 16 KB and 4 MB inclusive.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudBlobStream> OpenWriteAsync(bool createNew, CancellationToken cancellationToken)
    content.vb: Public Overridable Function OpenWriteAsync(createNew As Boolean, cancellationToken As CancellationToken) As Task(Of CloudBlobStream)
    parameters:
    - id: createNew
      type: System.Boolean
      description: Use <code>true</code> to create a new append blob or overwrite an existing one, <code>false</code> to append to an existing blob.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: OpenWriteAsync(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: OpenWriteAsync(Boolean, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OpenWriteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 309
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to open a stream for writing to the blob.\r\n"
  remarks: "\r\nNote that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.\r\nSet the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the block size to write, in bytes, \r\nranging from between 16 KB and 4 MB inclusive.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudBlobStream> OpenWriteAsync(bool createNew, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function OpenWriteAsync(createNew As Boolean, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of CloudBlobStream)
    parameters:
    - id: createNew
      type: System.Boolean
      description: Use <code>true</code> to create a new append blob or overwrite an existing one, <code>false</code> to append to an existing blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: OpenWriteAsync(System.Boolean,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: OpenWriteAsync(Boolean, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.OpenWriteAsync(System.Boolean, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OpenWriteAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 330
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to open a stream for writing to the blob.\r\n"
  remarks: "\r\nNote that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.\r\nSet the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the block size to write, in bytes, \r\nranging from between 16 KB and 4 MB inclusive.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudBlobStream> OpenWriteAsync(bool createNew, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function OpenWriteAsync(createNew As Boolean, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudBlobStream)
    parameters:
    - id: createNew
      type: System.Boolean
      description: Use <code>true</code> to create a new append blob or overwrite an existing one, <code>false</code> to append to an existing blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromStream(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 350
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual void UploadFromStream(Stream source, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub UploadFromStream(source As Stream, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromStream(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStream(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 369
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual void UploadFromStream(Stream source, long length, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub UploadFromStream(source As Stream, length As Long, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromStream(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 386
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAppends a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual void AppendFromStream(Stream source, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub AppendFromStream(source As Stream, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromStream(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 404
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAppends a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual void AppendFromStream(Stream source, long length, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub AppendFromStream(source As Stream, length As Long, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  id: BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromStream(Stream, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUploadFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 460
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUploadFromStream(Stream source, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUploadFromStream(source As Stream, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginUploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromStream(Stream, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUploadFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 481
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUploadFromStream(Stream source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUploadFromStream(source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  id: BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromStream(Stream, Int64, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream, System.Int64, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUploadFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 500
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUploadFromStream(Stream source, long length, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUploadFromStream(source As Stream, length As Long, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: Specifies the number of bytes from the Stream source to upload from the start position.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromStream(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromStream(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUploadFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 522
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUploadFromStream(Stream source, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUploadFromStream(source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: Specifies the number of bytes from the Stream source to upload from the start position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  id: BeginAppendFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendFromStream(Stream, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 538
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendFromStream(Stream source, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendFromStream(source As Stream, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginAppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendFromStream(Stream, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 558
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendFromStream(Stream source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendFromStream(source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  id: BeginAppendFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendFromStream(Stream, Int64, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream, System.Int64, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 575
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendFromStream(Stream source, long length, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendFromStream(source As Stream, length As Long, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: Specifies the number of bytes from the Stream source to upload from the start position.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendFromStream(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 596
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendFromStream(Stream source, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendFromStream(source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: Specifies the number of bytes from the Stream source to upload from the start position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromStream(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromStream(System.IAsyncResult)
  id: EndUploadFromStream(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndUploadFromStream(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromStream(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndUploadFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 721
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to upload a stream to an append blob. \r\n"
  example: []
  syntax:
    content: public virtual void EndUploadFromStream(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndUploadFromStream(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromStream(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromStream(System.IAsyncResult)
  id: EndAppendFromStream(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndAppendFromStream(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromStream(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndAppendFromStream
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 731
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to append a stream to an append blob. \r\n"
  example: []
  syntax:
    content: public virtual void EndAppendFromStream(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndAppendFromStream(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream)
  id: UploadFromStreamAsync(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 746
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten.\r\n"
  remarks: "\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromStreamAsync(Stream source)
    content.vb: Public Overridable Function UploadFromStreamAsync(source As Stream) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  id: UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 761
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten.\r\n"
  remarks: "\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromStreamAsync(Stream source, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UploadFromStreamAsync(source As Stream, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 780
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromStreamAsync(Stream source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function UploadFromStreamAsync(source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 800
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromStreamAsync(Stream source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UploadFromStreamAsync(source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)
  id: UploadFromStreamAsync(System.IO.Stream,System.Int64)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, Int64)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream, System.Int64)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 815
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten.\r\n"
  remarks: "\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromStreamAsync(Stream source, long length)
    content.vb: Public Overridable Function UploadFromStreamAsync(source As Stream, length As Long) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  id: UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, Int64, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream, System.Int64, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 831
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten.\r\n"
  remarks: "\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromStreamAsync(Stream source, long length, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UploadFromStreamAsync(source As Stream, length As Long, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 851
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromStreamAsync(Stream source, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function UploadFromStreamAsync(source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromStreamAsync(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 872
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a stream to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromStreamAsync(Stream source, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UploadFromStreamAsync(source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream)
  id: AppendFromStreamAsync(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromStreamAsync(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 886
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromStreamAsync(Stream source)
    content.vb: Public Overridable Function AppendFromStreamAsync(source As Stream) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  id: AppendFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromStreamAsync(Stream, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 901
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.        \r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromStreamAsync(Stream source, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendFromStreamAsync(source As Stream, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 919
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromStreamAsync(Stream source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AppendFromStreamAsync(source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 938
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromStreamAsync(Stream source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendFromStreamAsync(source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64)
  id: AppendFromStreamAsync(System.IO.Stream,System.Int64)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromStreamAsync(Stream, Int64)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream, System.Int64)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 953
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromStreamAsync(Stream source, long length)
    content.vb: Public Overridable Function AppendFromStreamAsync(source As Stream, length As Long) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  id: AppendFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromStreamAsync(Stream, Int64, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream, System.Int64, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 969
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromStreamAsync(Stream source, long length, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendFromStreamAsync(source As Stream, length As Long, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromStreamAsync(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 988
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromStreamAsync(Stream source, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AppendFromStreamAsync(source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromStreamAsync(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromStreamAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1008
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a stream to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromStreamAsync(Stream source, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendFromStreamAsync(source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromFile(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFile(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromFile
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1028
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual void UploadFromFile(string path, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub UploadFromFile(path As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromFile(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFile(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromFile
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1050
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAppends a file to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual void AppendFromFile(string path, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub AppendFromFile(path As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)
  id: BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromFile(String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUploadFromFile
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1074
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUploadFromFile(string path, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUploadFromFile(path As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginUploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromFile(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromFile(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUploadFromFile
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1095
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUploadFromFile(string path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUploadFromFile(path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,System.AsyncCallback,System.Object)
  id: BeginAppendFromFile(System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendFromFile(String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendFromFile
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1130
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendFromFile(string path, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendFromFile(path As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginAppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendFromFile(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendFromFile
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1150
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendFromFile(string path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendFromFile(path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromFile(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromFile(System.IAsyncResult)
  id: EndUploadFromFile(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndUploadFromFile(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromFile(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndUploadFromFile
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1214
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to upload a file to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual void EndUploadFromFile(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndUploadFromFile(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromFile(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromFile(System.IAsyncResult)
  id: EndAppendFromFile(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndAppendFromFile(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromFile(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndAppendFromFile
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1227
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to upload a file to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual void EndAppendFromFile(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndAppendFromFile(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String)
  id: UploadFromFileAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromFileAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromFileAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1243
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromFileAsync(string path)
    content.vb: Public Overridable Function UploadFromFileAsync(path As String) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)
  id: UploadFromFileAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromFileAsync(String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromFileAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1259
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromFileAsync(string path, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UploadFromFileAsync(path As String, cancellationToken As CancellationToken) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromFileAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromFileAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1278
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromFileAsync(string path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function UploadFromFileAsync(path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromFileAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromFileAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromFileAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1298
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a file to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromFileAsync(string path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UploadFromFileAsync(path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String)
  id: AppendFromFileAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromFileAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromFileAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1312
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromFileAsync(string path)
    content.vb: Public Overridable Function AppendFromFileAsync(path As String) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,System.Threading.CancellationToken)
  id: AppendFromFileAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromFileAsync(String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromFileAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1327
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromFileAsync(string path, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendFromFileAsync(path As String, cancellationToken As CancellationToken) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromFileAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromFileAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1345
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromFileAsync(string path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AppendFromFileAsync(path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromFileAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromFileAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1364
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a file to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromFileAsync(string path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendFromFileAsync(path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArray(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArray(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromByteArray
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1386
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual void UploadFromByteArray(byte[] buffer, int index, int count, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub UploadFromByteArray(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArray(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: UploadFromByteArray(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromByteArray(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArray(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromByteArray
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1410
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAppends the contents of a byte array to an append blob.Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual void AppendFromByteArray(byte[] buffer, int index, int count, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub AppendFromByteArray(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArray(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AppendFromByteArray(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromByteArray(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUploadFromByteArray
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1435
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUploadFromByteArray(byte[] buffer, int index, int count, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUploadFromByteArray(buffer As Byte(), index As Integer, count As Integer, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginUploadFromByteArray(Byte(), Int32, Int32, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromByteArray(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUploadFromByteArray
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1458
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUploadFromByteArray(byte[] buffer, int index, int count, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUploadFromByteArray(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadFromByteArray(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginUploadFromByteArray(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromByteArray(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromByteArray(System.IAsyncResult)
  id: EndUploadFromByteArray(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndUploadFromByteArray(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadFromByteArray(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndUploadFromByteArray
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1474
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to upload the contents of a byte array to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual void EndUploadFromByteArray(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndUploadFromByteArray(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendFromByteArray(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendFromByteArray
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1491
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendFromByteArray(byte[] buffer, int index, int count, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendFromByteArray(buffer As Byte(), index As Integer, count As Integer, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginAppendFromByteArray(Byte(), Int32, Int32, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendFromByteArray(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendFromByteArray
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1513
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendFromByteArray(byte[] buffer, int index, int count, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendFromByteArray(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginAppendFromByteArray(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromByteArray(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromByteArray(System.IAsyncResult)
  id: EndAppendFromByteArray(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndAppendFromByteArray(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendFromByteArray(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndAppendFromByteArray
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1526
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.\r\n"
  example: []
  syntax:
    content: public virtual void EndAppendFromByteArray(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndAppendFromByteArray(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  id: UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArrayAsync(Byte[], Int32, Int32)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromByteArrayAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1543
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromByteArrayAsync(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function UploadFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: UploadFromByteArrayAsync(Byte(), Int32, Int32)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArrayAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromByteArrayAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1561
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromByteArrayAsync(byte[] buffer, int index, int count, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UploadFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer, cancellationToken As CancellationToken) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: UploadFromByteArrayAsync(Byte(), Int32, Int32, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArrayAsync(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromByteArrayAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1582
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromByteArrayAsync(byte[] buffer, int index, int count, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function UploadFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: UploadFromByteArrayAsync(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArrayAsync(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadFromByteArrayAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1604
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload the contents of a byte array to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadFromByteArrayAsync(byte[] buffer, int index, int count, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UploadFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadFromByteArrayAsync(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: UploadFromByteArrayAsync(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  id: AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromByteArrayAsync(Byte[], Int32, Int32)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromByteArrayAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1620
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromByteArrayAsync(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function AppendFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: AppendFromByteArrayAsync(Byte(), Int32, Int32)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromByteArrayAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromByteArrayAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1637
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append the contents of a byte array to an append blob. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.        \r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromByteArrayAsync(byte[] buffer, int index, int count, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer, cancellationToken As CancellationToken) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: AppendFromByteArrayAsync(Byte(), Int32, Int32, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromByteArrayAsync(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromByteArrayAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1657
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append the contents of a byte array to an append blob.This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  remarks: "\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromByteArrayAsync(byte[] buffer, int index, int count, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AppendFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AppendFromByteArrayAsync(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendFromByteArrayAsync(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendFromByteArrayAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1678
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload the contents of a byte array to an append blob.This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  remarks: "\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendFromByteArrayAsync(byte[] buffer, int index, int count, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: AppendFromByteArrayAsync(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadText(String, Encoding, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadText(System.String, System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1699
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nUploads a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual void UploadText(string content, Encoding encoding = null, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub UploadText(content As String, encoding As Encoding = Nothing, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: encoding
      type: System.Text.Encoding
      description: A <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object that indicates the text encoding to use. If <code>null</code>, UTF-8 will be used.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendText(String, Encoding, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendText(System.String, System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1720
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nAppends a string of text to an append blob. This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  remarks: "\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual void AppendText(string content, Encoding encoding = null, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub AppendText(content As String, encoding As Encoding = Nothing, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: encoding
      type: System.Text.Encoding
      description: A <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object that indicates the text encoding to use. If <code>null</code>, UTF-8 will be used.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.AsyncCallback,System.Object)
  id: BeginUploadText(System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginUploadText(String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUploadText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1741
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUploadText(string content, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUploadText(content As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginUploadText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginUploadText(String, Encoding, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginUploadText(System.String, System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUploadText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1763
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginUploadText(string content, Encoding encoding, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginUploadText(content As String, encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: encoding
      type: System.Text.Encoding
      description: A <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object that indicates the text encoding to use. If <code>null</code>, UTF-8 will be used.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadText(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadText(System.IAsyncResult)
  id: EndUploadText(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndUploadText(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndUploadText(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndUploadText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1777
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to upload a string of text to an append blob. This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  example: []
  syntax:
    content: public virtual void EndUploadText(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndUploadText(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.AsyncCallback,System.Object)
  id: BeginAppendText(System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendText(String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1790
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendText(string content, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendText(content As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginAppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendText(String, Encoding, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String, System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1811
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  remarks: "\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendText(string content, Encoding encoding, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendText(content As String, encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: encoding
      type: System.Text.Encoding
      description: A <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object that indicates the text encoding to use. If <code>null</code>, UTF-8 will be used.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendText(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendText(System.IAsyncResult)
  id: EndAppendText(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndAppendText(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendText(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndAppendText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1825
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  example: []
  syntax:
    content: public virtual void EndAppendText(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndAppendText(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String)
  id: UploadTextAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadTextAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1840
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadTextAsync(string content)
    content.vb: Public Overridable Function UploadTextAsync(content As String) As Task
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Threading.CancellationToken)
  id: UploadTextAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadTextAsync(String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1857
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadTextAsync(string content, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UploadTextAsync(content As String, cancellationToken As CancellationToken) As Task
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadTextAsync(String, Encoding, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String, System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1877
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadTextAsync(string content, Encoding encoding, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function UploadTextAsync(content As String, encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: encoding
      type: System.Text.Encoding
      description: A <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object that indicates the text encoding to use. If <code>null</code>, UTF-8 will be used.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: UploadTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: UploadTextAsync(String, Encoding, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.UploadTextAsync(System.String, System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UploadTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1898
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to upload a string of text to an append blob. If the blob already exists, it will be overwritten. Recommended only for single-writer scenarios.\r\n"
  remarks: "\r\nUse this method only in single-writer scenarios. Internally, this method uses the append-offset conditional header to avoid duplicate blocks, which may cause problems in multiple-writer scenarios.\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\nTo append data to an append blob that already exists, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task UploadTextAsync(string content, Encoding encoding, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function UploadTextAsync(content As String, encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: encoding
      type: System.Text.Encoding
      description: A <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object that indicates the text encoding to use. If <code>null</code>, UTF-8 will be used.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String)
  id: AppendTextAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendTextAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1910
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendTextAsync(string content)
    content.vb: Public Overridable Function AppendTextAsync(content As String) As Task
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Threading.CancellationToken)
  id: AppendTextAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendTextAsync(String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1923
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendTextAsync(string content, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendTextAsync(content As String, cancellationToken As CancellationToken) As Task
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendTextAsync(String, Encoding, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String, System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1942
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  remarks: "\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendTextAsync(string content, Encoding encoding, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AppendTextAsync(content As String, encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: encoding
      type: System.Text.Encoding
      description: A <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object that indicates the text encoding to use. If <code>null</code>, UTF-8 will be used.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendTextAsync(String, Encoding, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String, System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1962
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to append a string of text to an append blob. This API should be used strictly in a single writer scenario \r\nbecause the API internally uses the append-offset conditional header to avoid duplicate blocks which does not work in a multiple writer scenario.\r\n"
  remarks: "\r\nIf you have a single-writer scenario, see <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry\" data-throw-if-not-resolved=\"false\"></xref> to determine whether setting this flag to <code>true</code> is acceptable for your scenario.\r\n"
  example: []
  syntax:
    content: public virtual Task AppendTextAsync(string content, Encoding encoding, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendTextAsync(content As String, encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: content
      type: System.String
      description: A string containing the text to upload.
    - id: encoding
      type: System.Text.Encoding
      description: A <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object that indicates the text encoding to use. If <code>null</code>, UTF-8 will be used.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CreateOrReplace(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateOrReplace
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1977
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nCreates an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <xref href=\"Microsoft.WindowsAzure.Storage.AccessCondition\" data-throw-if-not-resolved=\"false\"></xref>\r\nobject generated using <xref href=\"Microsoft.WindowsAzure.Storage.AccessCondition.GenerateIfNotExistsCondition\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual void CreateOrReplace(AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Sub CreateOrReplace(accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(System.AsyncCallback,System.Object)
  id: BeginCreateOrReplace(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginCreateOrReplace(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateOrReplace
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 1996
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to create an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,\r\nuse <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateOrReplace(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateOrReplace(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginCreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginCreateOrReplace(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateOrReplace
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2012
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to create an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <xref href=\"Microsoft.WindowsAzure.Storage.AccessCondition\" data-throw-if-not-resolved=\"false\"></xref>\r\nobject generated using <xref href=\"Microsoft.WindowsAzure.Storage.AccessCondition.GenerateIfNotExistsCondition\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateOrReplace(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateOrReplace(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndCreateOrReplace(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndCreateOrReplace(System.IAsyncResult)
  id: EndCreateOrReplace(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndCreateOrReplace(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndCreateOrReplace(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndCreateOrReplace
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2028
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to create an append blob.\r\n"
  example: []
  syntax:
    content: public virtual void EndCreateOrReplace(IAsyncResult asyncResult)
    content.vb: Public Overridable Sub EndCreateOrReplace(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync
  id: CreateOrReplaceAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CreateOrReplaceAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateOrReplaceAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2039
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to create an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,\r\nuse <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateOrReplaceAsync()
    content.vb: Public Overridable Function CreateOrReplaceAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(System.Threading.CancellationToken)
  id: CreateOrReplaceAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CreateOrReplaceAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateOrReplaceAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2051
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to create an append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting,\r\nuse <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateOrReplaceAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateOrReplaceAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CreateOrReplaceAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateOrReplaceAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2065
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to create an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <xref href=\"Microsoft.WindowsAzure.Storage.AccessCondition\" data-throw-if-not-resolved=\"false\"></xref>\r\nobject generated using <xref href=\"Microsoft.WindowsAzure.Storage.AccessCondition.GenerateIfNotExistsCondition\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateOrReplaceAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateOrReplaceAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CreateOrReplaceAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateOrReplaceAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2080
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to create an empty append blob. If the blob already exists, this operation will overwrite it. To throw an exception if the blob exists, instead of overwriting, pass in an <xref href=\"Microsoft.WindowsAzure.Storage.AccessCondition\" data-throw-if-not-resolved=\"false\"></xref>\r\nobject generated using <xref href=\"Microsoft.WindowsAzure.Storage.AccessCondition.GenerateIfNotExistsCondition\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public virtual Task CreateOrReplaceAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateOrReplaceAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlock(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlock(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendBlock(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendBlock(Stream, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlock(System.IO.Stream, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendBlock
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2103
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nCommits a new block of data to the end of the blob.\r\n"
  remarks: "\r\nClients may send the Content-MD5 header for a given Append Block operation as a means to ensure transactional integrity over the wire. \r\nThe <em>contentMD5</em> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.\r\nIf the <xref href=\"BlobRequestOptions.UseTransactionalMd5\" data-throw-if-not-resolved=\"false\"></xref> property is set to <code>true</code> and the <em>contentMD5</em> parameter is set \r\nto <code>null</code>, then the client library will calculate the MD5 value internally.\r\n"
  example: []
  syntax:
    content: public virtual long AppendBlock(Stream blockData, string contentMD5 = null, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function AppendBlock(blockData As Stream, contentMD5 As String = Nothing, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Long
    parameters:
    - id: blockData
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object that provides the data for the block.
    - id: contentMD5
      type: System.String
      description: An optional hash value used to ensure transactional integrity for the block. May be <code>null</code> or an empty string.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Int64
      description: The offset at which the block was appended.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.AsyncCallback,System.Object)
  id: BeginAppendBlock(System.IO.Stream,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendBlock(Stream, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendBlock
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2166
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to commit a new block of data to the end of the blob.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendBlock(Stream blockData, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendBlock(blockData As Stream, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: blockData
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object that provides the data for the block.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.String,System.AsyncCallback,System.Object)
  id: BeginAppendBlock(System.IO.Stream,System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendBlock(Stream, String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream, System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendBlock
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2186
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to commit a new block of data to the end of the blob.\r\n"
  remarks: "\r\nClients may send the Content-MD5 header for a given Append Block operation as a means to ensure transactional integrity over the wire. \r\nThe <em>contentMD5</em> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.\r\nIf the <xref href=\"BlobRequestOptions.UseTransactionalMd5\" data-throw-if-not-resolved=\"false\"></xref> property is set to <code>true</code> and the <em>contentMD5</em> parameter is set \r\nto <code>null</code>, then the client library will calculate the MD5 value internally.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginAppendBlock(Stream blockData, string contentMD5, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginAppendBlock(blockData As Stream, contentMD5 As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: blockData
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object that provides the data for the block.
    - id: contentMD5
      type: System.String
      description: An optional hash value used to ensure transactional integrity for the block. May be <code>null</code> or an empty string.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginAppendBlock(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginAppendBlock(Stream, String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendBlock(System.IO.Stream, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginAppendBlock
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2209
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to commit a new block of data to the end of the blob.\r\n"
  remarks: "\r\nClients may send the Content-MD5 header for a given Append Block operation as a means to ensure transactional integrity over the wire. \r\nThe <em>contentMD5</em> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.\r\nIf the <xref href=\"BlobRequestOptions.UseTransactionalMd5\" data-throw-if-not-resolved=\"false\"></xref> property is set to <code>true</code> and the <em>contentMD5</em> parameter is set \r\nto <code>null</code>, then the client library will calculate the MD5 value internally.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes", Justification = "Needed to ensure exceptions are not thrown on threadpool threads.")]

      public virtual ICancellableAsyncResult BeginAppendBlock(Stream blockData, string contentMD5, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes", Justification:="Needed to ensure exceptions are not thrown on threadpool threads.")>

      Public Overridable Function BeginAppendBlock(blockData As Stream, contentMD5 As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: blockData
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object that provides the data for the block.
    - id: contentMD5
      type: System.String
      description: An optional hash value used to ensure transactional integrity for the block. May be <code>null</code> or an empty string.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1031:DoNotCatchGeneralExceptionTypes
    namedArguments:
    - name: Justification
      type: System.String
      value: Needed to ensure exceptions are not thrown on threadpool threads.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendBlock(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendBlock(System.IAsyncResult)
  id: EndAppendBlock(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndAppendBlock(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndAppendBlock(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndAppendBlock
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2320
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to commit a new block of data to the end of the blob.\r\n"
  example: []
  syntax:
    content: public virtual long EndAppendBlock(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndAppendBlock(asyncResult As IAsyncResult) As Long
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String)
  id: AppendBlockAsync(System.IO.Stream,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendBlockAsync(Stream, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream, System.String)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendBlockAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2352
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to commit a new block of data to the end of the blob.\r\n"
  remarks: "\r\nClients may send the Content-MD5 header for a given Append Block operation as a means to ensure transactional integrity over the wire. \r\nThe <em>contentMD5</em> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.\r\nIf the <xref href=\"BlobRequestOptions.UseTransactionalMd5\" data-throw-if-not-resolved=\"false\"></xref> property is set to <code>true</code> and the <em>contentMD5</em> parameter is set \r\nto <code>null</code>, then the client library will calculate the MD5 value internally.\r\n"
  example: []
  syntax:
    content: public virtual Task<long> AppendBlockAsync(Stream blockData, string contentMD5 = null)
    content.vb: Public Overridable Function AppendBlockAsync(blockData As Stream, contentMD5 As String = Nothing) As Task(Of Long)
    parameters:
    - id: blockData
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object that provides the data for the block.
    - id: contentMD5
      type: System.String
      description: An optional hash value used to ensure transactional integrity for the block. May be <code>null</code> or an empty string.
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,System.Threading.CancellationToken)
  id: AppendBlockAsync(System.IO.Stream,System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendBlockAsync(Stream, String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendBlockAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2371
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to commit a new block of data to the end of the blob.\r\n"
  remarks: "\r\nClients may send the Content-MD5 header for a given Put Block operation as a means to ensure transactional integrity over the wire. \r\nThe <em>contentMD5</em> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.\r\nIf the <xref href=\"BlobRequestOptions.UseTransactionalMd5\" data-throw-if-not-resolved=\"false\"></xref> property is set to <code>true</code> and the <em>contentMD5</em> parameter is set \r\nto <code>null</code>, then the client library will calculate the MD5 value internally.\r\n"
  example: []
  syntax:
    content: public virtual Task<long> AppendBlockAsync(Stream blockData, string contentMD5, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendBlockAsync(blockData As Stream, contentMD5 As String, cancellationToken As CancellationToken) As Task(Of Long)
    parameters:
    - id: blockData
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object that provides the data for the block.
    - id: contentMD5
      type: System.String
      description: An optional hash value used to ensure transactional integrity for the block. May be <code>null</code> or an empty string.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AppendBlockAsync(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendBlockAsync(Stream, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendBlockAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2392
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to commit a new block of data to the end of the blob.\r\n"
  remarks: "\r\nClients may send the Content-MD5 header for a given Append Block operation as a means to ensure transactional integrity over the wire. \r\nThe <em>contentMD5</em> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.\r\nIf the <xref href=\"BlobRequestOptions.UseTransactionalMd5\" data-throw-if-not-resolved=\"false\"></xref> property is set to <code>true</code> and the <em>contentMD5</em> parameter is set \r\nto <code>null</code>, then the client library will calculate the MD5 value internally.\r\n"
  example: []
  syntax:
    content: public virtual Task<long> AppendBlockAsync(Stream blockData, string contentMD5, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function AppendBlockAsync(blockData As Stream, contentMD5 As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Long)
    parameters:
    - id: blockData
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object that provides the data for the block.
    - id: contentMD5
      type: System.String
      description: An optional hash value used to ensure transactional integrity for the block. May be <code>null</code> or an empty string.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AppendBlockAsync(System.IO.Stream,System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: AppendBlockAsync(Stream, String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendBlockAsync(System.IO.Stream, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AppendBlockAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2414
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to commit a new block of data to the end of the blob.\r\n"
  remarks: "\r\nClients may send the Content-MD5 header for a given Append Block operation as a means to ensure transactional integrity over the wire. \r\nThe <em>contentMD5</em> parameter permits clients who already have access to a pre-computed MD5 value for a given byte range to provide it.\r\nIf the <xref href=\"BlobRequestOptions.UseTransactionalMd5\" data-throw-if-not-resolved=\"false\"></xref> property is set to <code>true</code> and the <em>contentMD5</em> parameter is set \r\nto <code>null</code>, then the client library will calculate the MD5 value internally.\r\n"
  example: []
  syntax:
    content: public virtual Task<long> AppendBlockAsync(Stream blockData, string contentMD5, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function AppendBlockAsync(blockData As Stream, contentMD5 As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Long)
    parameters:
    - id: blockData
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object that provides the data for the block.
    - id: contentMD5
      type: System.String
      description: An optional hash value used to ensure transactional integrity for the block. May be <code>null</code> or an empty string.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadText(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadText(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadText(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: DownloadText(Encoding, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadText(System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2430
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nDownloads the blob's contents as a string.\r\n"
  example: []
  syntax:
    content: public virtual string DownloadText(Encoding encoding = null, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function DownloadText(encoding As Encoding = Nothing, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As String
    parameters:
    - id: encoding
      type: System.Text.Encoding
      description: An object that indicates the text encoding to use.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.String
      description: The contents of the blob, as a string.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.AsyncCallback,System.Object)
  id: BeginDownloadText(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadText(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDownloadText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2448
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to download the blob's contents as a string.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDownloadText(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDownloadText(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDownloadText(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadText(Encoding, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginDownloadText(System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDownloadText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2464
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to download the blob's contents as a string.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginDownloadText(Encoding encoding, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginDownloadText(encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: encoding
      type: System.Text.Encoding
      description: An object that indicates the text encoding to use.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndDownloadText(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndDownloadText(System.IAsyncResult)
  id: EndDownloadText(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndDownloadText(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndDownloadText(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndDownloadText
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2510
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to download the blob's contents as a string.\r\n"
  example: []
  syntax:
    content: public virtual string EndDownloadText(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndDownloadText(asyncResult As IAsyncResult) As String
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.String
      description: The contents of the blob, as a string.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync
  id: DownloadTextAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: DownloadTextAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2522
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to download the blob's contents as a string.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> DownloadTextAsync()
    content.vb: Public Overridable Function DownloadTextAsync As Task(Of String)
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Threading.CancellationToken)
  id: DownloadTextAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: DownloadTextAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2533
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to download the blob's contents as a string.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> DownloadTextAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function DownloadTextAsync(cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadTextAsync(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: DownloadTextAsync(Encoding, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2547
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to download the blob's contents as a string.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> DownloadTextAsync(Encoding encoding, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function DownloadTextAsync(encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: encoding
      type: System.Text.Encoding
      description: An object that indicates the text encoding to use.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadTextAsync(System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: DownloadTextAsync(Encoding, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.DownloadTextAsync(System.Text.Encoding, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DownloadTextAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2562
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to download the blob's contents as a string.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> DownloadTextAsync(Encoding encoding, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function DownloadTextAsync(encoding As Encoding, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: encoding
      type: System.Text.Encoding
      description: An object that indicates the text encoding to use.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: StartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: StartCopy(CloudAppendBlob, AccessCondition, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartCopy
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2583
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an operation to start copying another append blob's contents, properties, and metadata to this append blob.\r\n"
  remarks: "\r\nThis method fetches the blob's ETag, last-modified time, and part of the copy state.\r\nThe copy ID and copy status fields are fetched, and the rest of the copy state is cleared.\r\n"
  example: []
  syntax:
    content: public virtual string StartCopy(CloudAppendBlob source, AccessCondition sourceAccessCondition = null, AccessCondition destAccessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function StartCopy(source As CloudAppendBlob, sourceAccessCondition As AccessCondition = Nothing, destAccessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As String
    parameters:
    - id: source
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: The <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> of the source blob.
    - id: sourceAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the source blob. If <code>null</code>, no condition is used.
    - id: destAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the destination blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.String
      description: The copy ID associated with the copy operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,System.AsyncCallback,System.Object)
  id: BeginStartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginStartCopy(CloudAppendBlob, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginStartCopy
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2597
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginStartCopy(CloudAppendBlob source, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginStartCopy(source As CloudAppendBlob, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginStartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginStartCopy(CloudAppendBlob, AccessCondition, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginStartCopy(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginStartCopy
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2614
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginStartCopy(CloudAppendBlob source, AccessCondition sourceAccessCondition, AccessCondition destAccessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginStartCopy(source As CloudAppendBlob, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
    - id: sourceAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the source blob. If <code>null</code>, no condition is used.
    - id: destAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the destination blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob)
  id: StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: StartCopyAsync(CloudAppendBlob)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartCopyAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2626
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> StartCopyAsync(CloudAppendBlob source)
    content.vb: Public Overridable Function StartCopyAsync(source As CloudAppendBlob) As Task(Of String)
    parameters:
    - id: source
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,System.Threading.CancellationToken)
  id: StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: StartCopyAsync(CloudAppendBlob, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartCopyAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2638
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> StartCopyAsync(CloudAppendBlob source, CancellationToken cancellationToken)
    content.vb: Public Overridable Function StartCopyAsync(source As CloudAppendBlob, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: source
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: StartCopyAsync(CloudAppendBlob, AccessCondition, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartCopyAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2653
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> StartCopyAsync(CloudAppendBlob source, AccessCondition sourceAccessCondition, AccessCondition destAccessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function StartCopyAsync(source As CloudAppendBlob, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: source
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
    - id: sourceAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the source blob. If <code>null</code>, no condition is used.
    - id: destAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the destination blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: StartCopyAsync(CloudAppendBlob, AccessCondition, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StartCopyAsync(Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartCopyAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2669
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to start copying another append blob's contents, properties, and metadata to this append blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<string> StartCopyAsync(CloudAppendBlob source, AccessCondition sourceAccessCondition, AccessCondition destAccessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function StartCopyAsync(source As CloudAppendBlob, sourceAccessCondition As AccessCondition, destAccessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: source
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object.
    - id: sourceAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the source blob. If <code>null</code>, no condition is used.
    - id: destAccessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the access conditions for the destination blob. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CreateSnapshot(IDictionary<String, String>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshot(System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateSnapshot
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2685
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nCreates a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual CloudAppendBlob CreateSnapshot(IDictionary<string, string> metadata = null, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Public Overridable Function CreateSnapshot(metadata As IDictionary(Of String, String) = Nothing, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As CloudAppendBlob
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A collection of name-value pairs defining the metadata of the snapshot.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request, or <code>null</code>. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object that is a blob snapshot.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshot(System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: CreateSnapshot(IDictionary(Of String, String), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.AsyncCallback,System.Object)
  id: BeginCreateSnapshot(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginCreateSnapshot(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateSnapshot
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2703
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to create a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateSnapshot(AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateSnapshot(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginCreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: BeginCreateSnapshot(IDictionary<String, String>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreateSnapshot
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2719
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nBegins an asynchronous operation to create a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual ICancellableAsyncResult BeginCreateSnapshot(IDictionary<string, string> metadata, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Public Overridable Function BeginCreateSnapshot(metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A collection of name-value pairs defining the metadata of the snapshot.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request, or <code>null</code>.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateSnapshot(System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginCreateSnapshot(IDictionary(Of String, String), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndCreateSnapshot(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndCreateSnapshot(System.IAsyncResult)
  id: EndCreateSnapshot(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: EndCreateSnapshot(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.EndCreateSnapshot(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EndCreateSnapshot
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2737
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nEnds an asynchronous operation to create a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual CloudAppendBlob EndCreateSnapshot(IAsyncResult asyncResult)
    content.vb: Public Overridable Function EndCreateSnapshot(asyncResult As IAsyncResult) As CloudAppendBlob
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> object that is a blob snapshot.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync
  id: CreateSnapshotAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CreateSnapshotAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateSnapshotAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2747
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to create a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudAppendBlob> CreateSnapshotAsync()
    content.vb: Public Overridable Function CreateSnapshotAsync As Task(Of CloudAppendBlob)
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Threading.CancellationToken)
  id: CreateSnapshotAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CreateSnapshotAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateSnapshotAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2758
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to create a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudAppendBlob> CreateSnapshotAsync(CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateSnapshotAsync(cancellationToken As CancellationToken) As Task(Of CloudAppendBlob)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CreateSnapshotAsync(IDictionary<String, String>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateSnapshotAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2772
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to create a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudAppendBlob> CreateSnapshotAsync(IDictionary<string, string> metadata, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Public Overridable Function CreateSnapshotAsync(metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of CloudAppendBlob)
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A collection of name-value pairs defining the metadata of the snapshot.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: CreateSnapshotAsync(IDictionary(Of String, String), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CreateSnapshotAsync(IDictionary<String, String>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateSnapshotAsync
    path: src/Storage/Lib/ClassLibraryCommon/Blob/CloudAppendBlob.cs
    startLine: 2787
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitiates an asynchronous operation to create a snapshot of the blob.\r\n"
  example: []
  syntax:
    content: public virtual Task<CloudAppendBlob> CreateSnapshotAsync(IDictionary<string, string> metadata, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Public Overridable Function CreateSnapshotAsync(metadata As IDictionary(Of String, String), accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of CloudAppendBlob)
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A collection of name-value pairs defining the metadata of the snapshot.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob}
      description: A <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref> object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateSnapshotAsync(System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: CreateSnapshotAsync(IDictionary(Of String, String), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CloudAppendBlob(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CloudAppendBlob(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the blob.\r\n"
  example: []
  syntax:
    content: public CloudAppendBlob(Uri blobAbsoluteUri)
    content.vb: Public Sub New(blobAbsoluteUri As Uri)
    parameters:
    - id: blobAbsoluteUri
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the blob.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(System.Uri,Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CloudAppendBlob(Uri, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CloudAppendBlob(System.Uri, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the blob.\r\n"
  example: []
  syntax:
    content: public CloudAppendBlob(Uri blobAbsoluteUri, StorageCredentials credentials)
    content.vb: Public Sub New(blobAbsoluteUri As Uri, credentials As StorageCredentials)
    parameters:
    - id: blobAbsoluteUri
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the blob.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(System.Uri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CloudAppendBlob(Uri, Nullable<DateTimeOffset>, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CloudAppendBlob(System.Uri, System.Nullable<System.DateTimeOffset>, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the blob.\r\n"
  example: []
  syntax:
    content: public CloudAppendBlob(Uri blobAbsoluteUri, DateTimeOffset? snapshotTime, StorageCredentials credentials)
    content.vb: Public Sub New(blobAbsoluteUri As Uri, snapshotTime As DateTimeOffset?, credentials As StorageCredentials)
    parameters:
    - id: blobAbsoluteUri
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the blob.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CloudAppendBlob(System.Uri, System.Nullable(Of System.DateTimeOffset), Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  name.vb: CloudAppendBlob(Uri, Nullable(Of DateTimeOffset), StorageCredentials)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.#ctor(Microsoft.WindowsAzure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  id: '#ctor(Microsoft.WindowsAzure.Storage.StorageUri,System.Nullable{System.DateTimeOffset},Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)'
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: CloudAppendBlob(StorageUri, Nullable<DateTimeOffset>, StorageCredentials)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CloudAppendBlob(Microsoft.WindowsAzure.Storage.StorageUri, System.Nullable<System.DateTimeOffset>, Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob\" data-throw-if-not-resolved=\"false\"></xref> class using an absolute URI to the blob.\r\n"
  example: []
  syntax:
    content: public CloudAppendBlob(StorageUri blobAbsoluteUri, DateTimeOffset? snapshotTime, StorageCredentials credentials)
    content.vb: Public Sub New(blobAbsoluteUri As StorageUri, snapshotTime As DateTimeOffset?, credentials As StorageCredentials)
    parameters:
    - id: blobAbsoluteUri
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> containing the absolute URI to the blob at both the primary and secondary locations.
    - id: snapshotTime
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> specifying the snapshot timestamp, if the blob is a snapshot.
    - id: credentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CloudAppendBlob(Microsoft.WindowsAzure.Storage.StorageUri, System.Nullable(Of System.DateTimeOffset), Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)
  name.vb: CloudAppendBlob(StorageUri, Nullable(Of DateTimeOffset), StorageCredentials)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes
  id: StreamWriteSizeInBytes
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  langs:
  - csharp
  - vb
  name: StreamWriteSizeInBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StreamWriteSizeInBytes
    path: src/Storage/Lib/Common/Blob/CloudAppendBlob.Common.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the number of bytes to buffer when writing to an append blob stream.\r\n"
  example: []
  syntax:
    content: >-
      public int StreamWriteSizeInBytes

      {

          get;

          set;

      }
    content.vb: Public Property StreamWriteSizeInBytes As Integer
    parameters: []
    return:
      type: System.Int32
      description: The size of a block, in bytes, ranging from between 16 KB and 4 MB inclusive.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: ICloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: IListBlobItem
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: OpenRead(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenRead(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: OpenRead
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenRead
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: OpenRead
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenRead
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginOpenRead(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)
    name: BeginOpenRead
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)
    name: BeginOpenRead
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginOpenRead(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginOpenRead
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginOpenRead
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginOpenRead
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndOpenRead(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndOpenRead(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndOpenRead(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndOpenRead(System.IAsyncResult)
    name: EndOpenRead
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndOpenRead
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndOpenRead(System.IAsyncResult)
    name: EndOpenRead
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndOpenRead
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: OpenReadAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
    name: OpenReadAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
    name: OpenReadAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: OpenReadAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(System.Threading.CancellationToken)
    name: OpenReadAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(System.Threading.CancellationToken)
    name: OpenReadAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: OpenReadAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: OpenReadAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: OpenReadAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: OpenReadAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: OpenReadAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: OpenReadAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.OpenReadAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToStream(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStream(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDownloadToStream(Stream, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)
    name: BeginDownloadToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)
    name: BeginDownloadToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDownloadToStream(Stream, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDownloadToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDownloadToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToStream(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndDownloadToStream(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToStream(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToStream(System.IAsyncResult)
    name: EndDownloadToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToStream
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToStream(System.IAsyncResult)
    name: EndDownloadToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToStream
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToStreamAsync(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)
    name: DownloadToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream)
    name: DownloadToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToStreamAsync(Stream, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: DownloadToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: DownloadToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DownloadToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DownloadToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToFile(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFile(System.String, System.IO.FileMode, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToFile
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFile
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToFile
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFile
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDownloadToFile(String, FileMode, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String, System.IO.FileMode, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)
    name: BeginDownloadToFile
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)
    name: BeginDownloadToFile
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDownloadToFile(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String, System.IO.FileMode, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDownloadToFile
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDownloadToFile
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToFile
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToFile(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndDownloadToFile(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToFile(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToFile(System.IAsyncResult)
    name: EndDownloadToFile
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToFile
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToFile(System.IAsyncResult)
    name: EndDownloadToFile
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToFile
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToFileAsync(String, FileMode)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String, System.IO.FileMode)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)
    name: DownloadToFileAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)
    name: DownloadToFileAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToFileAsync(String, FileMode, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String, System.IO.FileMode, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)
    name: DownloadToFileAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)
    name: DownloadToFileAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToFileAsync(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String, System.IO.FileMode, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToFileAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToFileAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToFileAsync(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String, System.IO.FileMode, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DownloadToFileAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DownloadToFileAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToFileAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileMode
    name: FileMode
    fullName: System.IO.FileMode
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToByteArray(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArray(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArray(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadToByteArray(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDownloadToByteArray(Byte[], Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[], System.Int32, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte(), System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginDownloadToByteArray(Byte(), Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)
    name: BeginDownloadToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)
    name: BeginDownloadToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDownloadToByteArray(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginDownloadToByteArray(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDownloadToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDownloadToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToByteArray(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndDownloadToByteArray(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToByteArray(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToByteArray(System.IAsyncResult)
    name: EndDownloadToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToByteArray
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToByteArray(System.IAsyncResult)
    name: EndDownloadToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadToByteArray
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToByteArrayAsync(Byte[], Int32)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
    name: DownloadToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
    name: DownloadToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToByteArrayAsync(Byte[], Int32, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32, System.Threading.CancellationToken)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32, CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)
    name: DownloadToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)
    name: DownloadToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToByteArrayAsync(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadToByteArrayAsync(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DownloadToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DownloadToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadRangeToStream(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStream(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStream(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToStream(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadRangeToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadRangeToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDownloadRangeToStream(Stream, Nullable<Int64>, Nullable<Int64>, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.AsyncCallback, System.Object)
  name.vb: BeginDownloadRangeToStream(Stream, Nullable(Of Int64), Nullable(Of Int64), AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
    name: BeginDownloadRangeToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
    name: BeginDownloadRangeToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDownloadRangeToStream(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginDownloadRangeToStream(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDownloadRangeToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDownloadRangeToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToStream(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndDownloadRangeToStream(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToStream(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToStream(System.IAsyncResult)
    name: EndDownloadRangeToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToStream
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToStream(System.IAsyncResult)
    name: EndDownloadRangeToStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToStream
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
    name: DownloadRangeToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
    name: DownloadRangeToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DownloadRangeToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DownloadRangeToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadRangeToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadRangeToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DownloadRangeToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DownloadRangeToStreamAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadRangeToByteArray(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArray(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArray(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToByteArray(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadRangeToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadRangeToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDownloadRangeToByteArray(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.AsyncCallback, System.Object)
  name.vb: BeginDownloadRangeToByteArray(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
    name: BeginDownloadRangeToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
    name: BeginDownloadRangeToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDownloadRangeToByteArray(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginDownloadRangeToByteArray(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDownloadRangeToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDownloadRangeToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDownloadRangeToByteArray
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndDownloadRangeToByteArray(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)
    name: EndDownloadRangeToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToByteArray
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)
    name: EndDownloadRangeToByteArray
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDownloadRangeToByteArray
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
    name: DownloadRangeToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
    name: DownloadRangeToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DownloadRangeToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
    name: DownloadRangeToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadRangeToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DownloadRangeToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DownloadRangeToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DownloadRangeToByteArrayAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DownloadRangeToByteArrayAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: Exists(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: Exists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Exists
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: Exists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Exists
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists(System.AsyncCallback,System.Object)
    name: BeginExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists(System.AsyncCallback,System.Object)
    name: BeginExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginExists(BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginExists
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndExists(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndExists(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndExists(System.IAsyncResult)
    name: EndExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndExists
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndExists(System.IAsyncResult)
    name: EndExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndExists
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
    name: ExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
    name: ExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: ExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(System.Threading.CancellationToken)
    name: ExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(System.Threading.CancellationToken)
    name: ExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: ExistsAsync(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: ExistsAsync(BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: ExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: ExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ExistsAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: FetchAttributes(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: FetchAttributes
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributes
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: FetchAttributes
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributes
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginFetchAttributes(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)
    name: BeginFetchAttributes
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)
    name: BeginFetchAttributes
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginFetchAttributes(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginFetchAttributes
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginFetchAttributes
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginFetchAttributes
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndFetchAttributes(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndFetchAttributes(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndFetchAttributes(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndFetchAttributes(System.IAsyncResult)
    name: EndFetchAttributes
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndFetchAttributes
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndFetchAttributes(System.IAsyncResult)
    name: EndFetchAttributes
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndFetchAttributes
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: FetchAttributesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
    name: FetchAttributesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
    name: FetchAttributesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: FetchAttributesAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)
    name: FetchAttributesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)
    name: FetchAttributesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: FetchAttributesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: FetchAttributesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: FetchAttributesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: FetchAttributesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.FetchAttributesAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: SetMetadata(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: SetMetadata
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadata
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: SetMetadata
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadata
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginSetMetadata(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)
    name: BeginSetMetadata
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)
    name: BeginSetMetadata
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginSetMetadata(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginSetMetadata
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginSetMetadata
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetMetadata
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetMetadata(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndSetMetadata(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetMetadata(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetMetadata(System.IAsyncResult)
    name: EndSetMetadata
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetMetadata
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetMetadata(System.IAsyncResult)
    name: EndSetMetadata
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetMetadata
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: SetMetadataAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
    name: SetMetadataAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
    name: SetMetadataAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: SetMetadataAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(System.Threading.CancellationToken)
    name: SetMetadataAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(System.Threading.CancellationToken)
    name: SetMetadataAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: SetMetadataAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: SetMetadataAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: SetMetadataAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: SetMetadataAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetMetadataAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: SetProperties(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetProperties(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: SetProperties
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetProperties
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: SetProperties
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetProperties
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginSetProperties(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)
    name: BeginSetProperties
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)
    name: BeginSetProperties
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginSetProperties(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginSetProperties
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginSetProperties
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSetProperties
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetProperties(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndSetProperties(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetProperties(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetProperties(System.IAsyncResult)
    name: EndSetProperties
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetProperties
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetProperties(System.IAsyncResult)
    name: EndSetProperties
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSetProperties
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: SetPropertiesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
    name: SetPropertiesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
    name: SetPropertiesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: SetPropertiesAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)
    name: SetPropertiesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)
    name: SetPropertiesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: SetPropertiesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: SetPropertiesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: SetPropertiesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: SetPropertiesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: SetPropertiesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: SetPropertiesAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SetPropertiesAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Delete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: Delete(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Delete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Delete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: Delete
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Delete
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Delete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: Delete
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Delete
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDelete(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete(System.AsyncCallback,System.Object)
    name: BeginDelete
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete(System.AsyncCallback,System.Object)
    name: BeginDelete
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDelete(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDelete
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDelete
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDelete
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDelete(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndDelete(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDelete(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDelete(System.IAsyncResult)
    name: EndDelete
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDelete
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDelete(System.IAsyncResult)
    name: EndDelete
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDelete
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
    name: DeleteAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
    name: DeleteAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DeleteAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(System.Threading.CancellationToken)
    name: DeleteAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(System.Threading.CancellationToken)
    name: DeleteAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: DeleteAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DeleteAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DeleteAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DeleteAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DeleteAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DeleteAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: DeleteIfExists(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DeleteIfExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExists
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DeleteIfExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExists
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDeleteIfExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)
    name: BeginDeleteIfExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)
    name: BeginDeleteIfExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginDeleteIfExists(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDeleteIfExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginDeleteIfExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginDeleteIfExists
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDeleteIfExists(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndDeleteIfExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDeleteIfExists(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDeleteIfExists(System.IAsyncResult)
    name: EndDeleteIfExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDeleteIfExists
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDeleteIfExists(System.IAsyncResult)
    name: EndDeleteIfExists
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndDeleteIfExists
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
    name: DeleteIfExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
    name: DeleteIfExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DeleteIfExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)
    name: DeleteIfExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)
    name: DeleteIfExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: DeleteIfExistsAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DeleteIfExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: DeleteIfExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: DeleteIfExistsAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DeleteIfExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: DeleteIfExistsAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.DeleteIfExistsAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
    name: DeleteSnapshotsOption
    fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: AcquireLease(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLease(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLease(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AcquireLease(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: AcquireLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: AcquireLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginAcquireLease(Nullable<TimeSpan>, String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable<System.TimeSpan>, System.String, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable(Of System.TimeSpan), System.String, System.AsyncCallback, System.Object)
  name.vb: BeginAcquireLease(Nullable(Of TimeSpan), String, AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
    name: BeginAcquireLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
    name: BeginAcquireLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginAcquireLease(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginAcquireLease(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginAcquireLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginAcquireLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAcquireLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAcquireLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndAcquireLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAcquireLease(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAcquireLease(System.IAsyncResult)
    name: EndAcquireLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAcquireLease
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAcquireLease(System.IAsyncResult)
    name: EndAcquireLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAcquireLease
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
    name: AcquireLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
    name: AcquireLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, System.Threading.CancellationToken)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
    name: AcquireLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
    name: AcquireLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: AcquireLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: AcquireLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: AcquireLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: AcquireLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AcquireLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: RenewLease(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: RenewLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: RenewLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginRenewLease(AccessCondition, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
    name: BeginRenewLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
    name: BeginRenewLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginRenewLease(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginRenewLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginRenewLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginRenewLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndRenewLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndRenewLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndRenewLease(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndRenewLease(System.IAsyncResult)
    name: EndRenewLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndRenewLease
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndRenewLease(System.IAsyncResult)
    name: EndRenewLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndRenewLease
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: RenewLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
    name: RenewLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
    name: RenewLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: RenewLeaseAsync(AccessCondition, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
    name: RenewLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
    name: RenewLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: RenewLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: RenewLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: RenewLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: RenewLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.RenewLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: ChangeLease(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLease(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ChangeLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLease
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ChangeLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLease
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginChangeLease(String, AccessCondition, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
    name: BeginChangeLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
    name: BeginChangeLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginChangeLease(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginChangeLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginChangeLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginChangeLease
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndChangeLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndChangeLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndChangeLease(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndChangeLease(System.IAsyncResult)
    name: EndChangeLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndChangeLease
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndChangeLease(System.IAsyncResult)
    name: EndChangeLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndChangeLease
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: ChangeLeaseAsync(String, AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
    name: ChangeLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
    name: ChangeLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: ChangeLeaseAsync(String, AccessCondition, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
    name: ChangeLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
    name: ChangeLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ChangeLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ChangeLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: ChangeLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: ChangeLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ChangeLeaseAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: ReleaseLease(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReleaseLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReleaseLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginReleaseLease(AccessCondition, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
    name: BeginReleaseLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
    name: BeginReleaseLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginReleaseLease(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginReleaseLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginReleaseLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginReleaseLease
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndReleaseLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndReleaseLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndReleaseLease(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndReleaseLease(System.IAsyncResult)
    name: EndReleaseLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndReleaseLease
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndReleaseLease(System.IAsyncResult)
    name: EndReleaseLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndReleaseLease
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: ReleaseLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
    name: ReleaseLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
    name: ReleaseLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: ReleaseLeaseAsync(AccessCondition, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
    name: ReleaseLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
    name: ReleaseLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReleaseLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReleaseLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: ReleaseLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: ReleaseLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ReleaseLeaseAsync
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BreakLease(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLease(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLease(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: BreakLease(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: BreakLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: BreakLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginBreakLease(Nullable<TimeSpan>, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable<System.TimeSpan>, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable(Of System.TimeSpan), System.AsyncCallback, System.Object)
  name.vb: BeginBreakLease(Nullable(Of TimeSpan), AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
    name: BeginBreakLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
    name: BeginBreakLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginBreakLease(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginBreakLease(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginBreakLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginBreakLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginBreakLease
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndBreakLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndBreakLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndBreakLease(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndBreakLease(System.IAsyncResult)
    name: EndBreakLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndBreakLease
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndBreakLease(System.IAsyncResult)
    name: EndBreakLease
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndBreakLease
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BreakLeaseAsync(Nullable<TimeSpan>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan))
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
    name: BreakLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
    name: BreakLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BreakLeaseAsync(Nullable<TimeSpan>, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), System.Threading.CancellationToken)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
    name: BreakLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
    name: BreakLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: BreakLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: BreakLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: BreakLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: BreakLeaseAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BreakLeaseAsync
  - name: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopy(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: StartCopy(Uri, AccessCondition, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopy(System.Uri, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopy(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: StartCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopy
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopy(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: StartCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopy
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginStartCopy(Uri, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,System.AsyncCallback,System.Object)
    name: BeginStartCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,System.AsyncCallback,System.Object)
    name: BeginStartCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginStartCopy(Uri, AccessCondition, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginStartCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginStartCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginStartCopy
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndStartCopy(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndStartCopy(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndStartCopy(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndStartCopy(System.IAsyncResult)
    name: EndStartCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndStartCopy
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndStartCopy(System.IAsyncResult)
    name: EndStartCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndStartCopy
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: StartCopyAsync(Uri)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)
    name: StartCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri)
    name: StartCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: StartCopyAsync(Uri, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,System.Threading.CancellationToken)
    name: StartCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,System.Threading.CancellationToken)
    name: StartCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: StartCopyAsync(Uri, AccessCondition, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: StartCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: StartCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: StartCopyAsync(Uri, AccessCondition, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: StartCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync(System.Uri,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: StartCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StartCopyAsync
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: AbortCopy(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopy(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: AbortCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopy
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: AbortCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopy
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginAbortCopy(String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)
    name: BeginAbortCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)
    name: BeginAbortCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginAbortCopy(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginAbortCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginAbortCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginAbortCopy
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAbortCopy(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndAbortCopy(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAbortCopy(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAbortCopy(System.IAsyncResult)
    name: EndAbortCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAbortCopy
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAbortCopy(System.IAsyncResult)
    name: EndAbortCopy
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndAbortCopy
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: AbortCopyAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)
    name: AbortCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String)
    name: AbortCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: AbortCopyAsync(String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)
    name: AbortCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)
    name: AbortCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: AbortCopyAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: AbortCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: AbortCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: AbortCopyAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: AbortCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: AbortCopyAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.AbortCopyAsync
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Snapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: Snapshot(IDictionary<String, String>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Snapshot(System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Snapshot(System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: Snapshot(IDictionary(Of String, String), AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Snapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: Snapshot
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Snapshot
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Snapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: Snapshot
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Snapshot
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginSnapshot(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.AsyncCallback,System.Object)
    name: BeginSnapshot
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.AsyncCallback,System.Object)
    name: BeginSnapshot
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: BeginSnapshot(IDictionary<String, String>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginSnapshot(IDictionary(Of String, String), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginSnapshot
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
    name: BeginSnapshot
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BeginSnapshot
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSnapshot(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: EndSnapshot(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSnapshot(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSnapshot(System.IAsyncResult)
    name: EndSnapshot
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSnapshot
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSnapshot(System.IAsyncResult)
    name: EndSnapshot
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.EndSnapshot
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: SnapshotAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
    name: SnapshotAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
    name: SnapshotAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: SnapshotAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Threading.CancellationToken)
    name: SnapshotAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Threading.CancellationToken)
    name: SnapshotAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: SnapshotAsync(IDictionary<String, String>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: SnapshotAsync(IDictionary(Of String, String), AccessCondition, BlobRequestOptions, OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: SnapshotAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
    name: SnapshotAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: SnapshotAsync(IDictionary<String, String>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary<System.String, System.String>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary(Of System.String, System.String), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: SnapshotAsync(IDictionary(Of String, String), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: SnapshotAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
    name: SnapshotAsync
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotAsync
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.AccessCondition
    name: AccessCondition
    fullName: Microsoft.WindowsAzure.Storage.AccessCondition
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
    name: BlobRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ServiceClient
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.ServiceClient
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: StreamMinimumReadSizeInBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StreamMinimumReadSizeInBytes
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Properties
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Properties
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Metadata
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Metadata
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Uri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Uri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotTime
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: SnapshotTime
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotTime
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.IsSnapshot
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: IsSnapshot
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.IsSnapshot
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedUri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: SnapshotQualifiedUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedUri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedStorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: SnapshotQualifiedStorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.SnapshotQualifiedStorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.CopyState
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Name
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Name
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Container
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: Container
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Container
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Parent
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: Parent
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.Parent
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: GetSharedAccessSignature(SharedAccessBlobPolicy)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
    name: GetSharedAccessSignature
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
    name: SharedAccessBlobPolicy
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
    name: GetSharedAccessSignature
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
    name: SharedAccessBlobPolicy
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
    name: GetSharedAccessSignature
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
    name: SharedAccessBlobPolicy
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
    name: GetSharedAccessSignature
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
    name: SharedAccessBlobPolicy
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: false
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
    name: GetSharedAccessSignature
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
    name: SharedAccessBlobPolicy
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
    name: SharedAccessBlobHeaders
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
    name: GetSharedAccessSignature
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
    name: SharedAccessBlobPolicy
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
    name: SharedAccessBlobHeaders
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
    name: GetSharedAccessSignature
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
    name: SharedAccessBlobPolicy
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
    name: SharedAccessBlobHeaders
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
    name: GetSharedAccessSignature
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
    name: SharedAccessBlobPolicy
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
    name: SharedAccessBlobHeaders
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  parent: Microsoft.WindowsAzure.Storage.Blob.CloudBlob
  isExternal: true
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String, System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>, Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  fullname.vb: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String, System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol), Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  name.vb: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
    name: GetSharedAccessSignature
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
    name: SharedAccessBlobPolicy
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
    name: SharedAccessBlobHeaders
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.IPAddressOrRange
    name: IPAddressOrRange
    fullName: Microsoft.WindowsAzure.Storage.IPAddressOrRange
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
    name: GetSharedAccessSignature
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlob.GetSharedAccessSignature
  - name: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
    name: SharedAccessBlobPolicy
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
    name: SharedAccessBlobHeaders
    fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.IPAddressOrRange
    name: IPAddressOrRange
    fullName: Microsoft.WindowsAzure.Storage.IPAddressOrRange
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.AccessCondition
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: AccessCondition
  fullName: Microsoft.WindowsAzure.Storage.AccessCondition
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobStream
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.StreamWriteSizeInBytes
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  fullName: System.AsyncCallback
- uid: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: ICancellableAsyncResult
  fullName: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CloudBlobStream>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream)
  name.vb: Task(Of CloudBlobStream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream
    name: CloudBlobStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream
    name: CloudBlobStream
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobStream
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  fullName: System.IO.Stream
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginAppendText(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.AppendTextAsync(System.String,System.Text.Encoding,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.AccessCondition.GenerateIfNotExistsCondition
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.BeginCreateOrReplace(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob.CreateOrReplaceAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
- uid: BlobRequestOptions.UseTransactionalMd5
- uid: System.Threading.Tasks.Task{System.Int64}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int64>
  fullName: System.Threading.Tasks.Task<System.Int64>
  fullname.vb: System.Threading.Tasks.Task(Of System.Int64)
  name.vb: Task(Of Int64)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudAppendBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CloudAppendBlob>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob)
  name.vb: Task(Of CloudAppendBlob)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
    name: CloudAppendBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
    name: CloudAppendBlob
    fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
- uid: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth
  fullName: Microsoft.WindowsAzure.Storage.Auth
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
