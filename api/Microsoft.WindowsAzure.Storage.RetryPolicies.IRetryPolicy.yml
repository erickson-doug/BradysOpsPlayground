items:
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  id: IRetryPolicy
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  children:
  - Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance
  - Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  langs:
  - csharp
  - vb
  name: IRetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  type: Interface
  source:
    remote:
      path: src/Storage/Common/RetryPolicies/IRetryPolicy.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IRetryPolicy
    path: src/Storage/Common/RetryPolicies/IRetryPolicy.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\r\nRepresents a retry policy.\r\n"
  example: []
  syntax:
    content: public interface IRetryPolicy
    content.vb: Public Interface IRetryPolicy
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance
  id: CreateInstance
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  langs:
  - csharp
  - vb
  name: CreateInstance()
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance()
  type: Method
  source:
    remote:
      path: src/Storage/Common/RetryPolicies/IRetryPolicy.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateInstance
    path: src/Storage/Common/RetryPolicies/IRetryPolicy.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\r\nGenerates a new retry policy for the current request attempt.\r\n"
  example: []
  syntax:
    content: IRetryPolicy CreateInstance()
    content.vb: Function CreateInstance As IRetryPolicy
    return:
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: An <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy" data-throw-if-not-resolved="false"></xref> object that represents the retry policy for the current request attempt.
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  langs:
  - csharp
  - vb
  name: ShouldRetry(Int32, Int32, Exception, out TimeSpan, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32, System.Int32, System.Exception, out System.TimeSpan, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: src/Storage/Common/RetryPolicies/IRetryPolicy.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ShouldRetry
    path: src/Storage/Common/RetryPolicies/IRetryPolicy.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\r\nDetermines whether the operation should be retried and the interval until the next retry.\r\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1021:AvoidOutParameters", MessageId = "3#", Justification = "Back compatibility")]

      bool ShouldRetry(int currentRetryCount, int statusCode, Exception lastException, out TimeSpan retryInterval, OperationContext operationContext)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1021:AvoidOutParameters", MessageId:="3#", Justification:="Back compatibility")>

      Function ShouldRetry(currentRetryCount As Integer, statusCode As Integer, lastException As Exception, ByRef retryInterval As TimeSpan, operationContext As OperationContext) As Boolean
    parameters:
    - id: currentRetryCount
      type: System.Int32
      description: An integer specifying the number of retries for the given operation. A value of zero signifies this is the first error encountered.
    - id: statusCode
      type: System.Int32
      description: An integer containing the status code for the last operation.
    - id: lastException
      type: System.Exception
      description: An <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> object that represents the last exception encountered.
    - id: retryInterval
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> indicating the interval to wait until the next retry.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the operation should be retried; otherwise, <code>false</code>.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1021:AvoidOutParameters
    namedArguments:
    - name: MessageId
      type: System.String
      value: 3#
    - name: Justification
      type: System.String
      value: Back compatibility
  fullName.vb: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32, System.Int32, System.Exception, ByRef System.TimeSpan, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ShouldRetry(Int32, Int32, Exception, ByRef TimeSpan, OperationContext)
references:
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.RetryPolicies
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: IRetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  fullName: System.Exception
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
