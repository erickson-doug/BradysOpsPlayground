items:
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  commentId: T:Microsoft.WindowsAzure.Storage.StorageUri
  id: StorageUri
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.StorageUri.#ctor(System.Uri)
  - Microsoft.WindowsAzure.Storage.StorageUri.#ctor(System.Uri,System.Uri)
  - Microsoft.WindowsAzure.Storage.StorageUri.Equals(Microsoft.WindowsAzure.Storage.StorageUri)
  - Microsoft.WindowsAzure.Storage.StorageUri.Equals(System.Object)
  - Microsoft.WindowsAzure.Storage.StorageUri.GetHashCode
  - Microsoft.WindowsAzure.Storage.StorageUri.GetUri(Microsoft.WindowsAzure.Storage.StorageLocation)
  - Microsoft.WindowsAzure.Storage.StorageUri.op_Equality(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  - Microsoft.WindowsAzure.Storage.StorageUri.op_Inequality(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  - Microsoft.WindowsAzure.Storage.StorageUri.PrimaryUri
  - Microsoft.WindowsAzure.Storage.StorageUri.SecondaryUri
  - Microsoft.WindowsAzure.Storage.StorageUri.ToString
  langs:
  - csharp
  - vb
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StorageUri
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nContains the URIs for both the primary and secondary locations of a Microsoft Azure Storage resource.\r\n"
  example: []
  syntax:
    content: 'public sealed class StorageUri : IEquatable<StorageUri>'
    content.vb: >-
      Public NotInheritable Class StorageUri

          Implements IEquatable(Of StorageUri)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Microsoft.WindowsAzure.Storage.StorageUri}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.StorageUri.PrimaryUri
  commentId: P:Microsoft.WindowsAzure.Storage.StorageUri.PrimaryUri
  id: PrimaryUri
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: PrimaryUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.PrimaryUri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PrimaryUri
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nThe endpoint for the primary location for the storage account.\r\n"
  example: []
  syntax:
    content: >-
      public Uri PrimaryUri

      {

          get;

      }
    content.vb: Public ReadOnly Property PrimaryUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: The <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> for the primary endpoint.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.StorageUri.SecondaryUri
  commentId: P:Microsoft.WindowsAzure.Storage.StorageUri.SecondaryUri
  id: SecondaryUri
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: SecondaryUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.SecondaryUri
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SecondaryUri
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nThe endpoint for the secondary location for the storage account.\r\n"
  example: []
  syntax:
    content: >-
      public Uri SecondaryUri

      {

          get;

      }
    content.vb: Public ReadOnly Property SecondaryUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: The <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> for the secondary endpoint.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.StorageUri.#ctor(System.Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageUri.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: StorageUri(Uri)
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.StorageUri(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageUri\" data-throw-if-not-resolved=\"false\"></xref> class using the primary endpoint for the storage account.\r\n"
  example: []
  syntax:
    content: public StorageUri(Uri primaryUri)
    content.vb: Public Sub New(primaryUri As Uri)
    parameters:
    - id: primaryUri
      type: System.Uri
      description: The <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> for the primary endpoint.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageUri.#ctor(System.Uri,System.Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageUri.#ctor(System.Uri,System.Uri)
  id: '#ctor(System.Uri,System.Uri)'
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: StorageUri(Uri, Uri)
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.StorageUri(System.Uri, System.Uri)
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageUri\" data-throw-if-not-resolved=\"false\"></xref> class using the primary and secondary endpoints for the storage account.\r\n"
  example: []
  syntax:
    content: public StorageUri(Uri primaryUri, Uri secondaryUri)
    content.vb: Public Sub New(primaryUri As Uri, secondaryUri As Uri)
    parameters:
    - id: primaryUri
      type: System.Uri
      description: The <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> for the primary endpoint.
    - id: secondaryUri
      type: System.Uri
      description: The <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> for the secondary endpoint.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageUri.GetUri(Microsoft.WindowsAzure.Storage.StorageLocation)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageUri.GetUri(Microsoft.WindowsAzure.Storage.StorageLocation)
  id: GetUri(Microsoft.WindowsAzure.Storage.StorageLocation)
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: GetUri(StorageLocation)
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.GetUri(Microsoft.WindowsAzure.Storage.StorageLocation)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetUri
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 127
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nReturns the URI for the storage account endpoint at the specified location.\r\n"
  example: []
  syntax:
    content: public Uri GetUri(StorageLocation location)
    content.vb: Public Function GetUri(location As StorageLocation) As Uri
    parameters:
    - id: location
      type: Microsoft.WindowsAzure.Storage.StorageLocation
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageLocation" data-throw-if-not-resolved="false"></xref> enumeration value.
    return:
      type: System.Uri
      description: The <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> for the endpoint at the the specified location.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageUri.ToString
  commentId: M:Microsoft.WindowsAzure.Storage.StorageUri.ToString
  id: ToString
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.ToString()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ToString
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 164
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\r\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\r\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\r\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.StorageUri.GetHashCode
  commentId: M:Microsoft.WindowsAzure.Storage.StorageUri.GetHashCode
  id: GetHashCode
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetHashCode
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 179
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nReturns a hash code for this instance.\r\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\r\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. \r\n"
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.StorageUri.Equals(System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageUri.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Equals
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 194
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance.\r\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: <code>true</code> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to this instance; otherwise, <code>false</code>.
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.StorageUri.Equals(Microsoft.WindowsAzure.Storage.StorageUri)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageUri.Equals(Microsoft.WindowsAzure.Storage.StorageUri)
  id: Equals(Microsoft.WindowsAzure.Storage.StorageUri)
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: Equals(StorageUri)
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.Equals(Microsoft.WindowsAzure.Storage.StorageUri)
  type: Method
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Equals
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 204
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nIndicates whether the current object is equal to another object of the same type.\r\n"
  example: []
  syntax:
    content: public bool Equals(StorageUri other)
    content.vb: Public Function Equals(other As StorageUri) As Boolean
    parameters:
    - id: other
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <code>true</code> if the current object is equal to the <em>other</em> parameter; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageUri.op_Equality(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageUri.op_Equality(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  id: op_Equality(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: Equality(StorageUri, StorageUri)
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.Equality(Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.StorageUri)
  type: Operator
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: op_Equality
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 217
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nCompares two <xref href=\"Microsoft.WindowsAzure.Storage.StorageUri\" data-throw-if-not-resolved=\"false\"></xref> objects for equivalency.\r\n"
  example: []
  syntax:
    content: public static bool operator ==(StorageUri uri1, StorageUri uri2)
    content.vb: Public Shared Operator =(uri1 As StorageUri, uri2 As StorageUri) As Boolean
    parameters:
    - id: uri1
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: The first <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> object to compare.
    - id: uri2
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: The second <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> object to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> objects have equivalent values; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.StorageUri.op_Inequality(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageUri.op_Inequality(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  id: op_Inequality(Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  parent: Microsoft.WindowsAzure.Storage.StorageUri
  langs:
  - csharp
  - vb
  name: Inequality(StorageUri, StorageUri)
  fullName: Microsoft.WindowsAzure.Storage.StorageUri.Inequality(Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.StorageUri)
  type: Operator
  source:
    remote:
      path: src/Storage/Lib/Common/StorageUri.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: op_Inequality
    path: src/Storage/Lib/Common/StorageUri.cs
    startLine: 238
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\r\nCompares two <xref href=\"Microsoft.WindowsAzure.Storage.StorageUri\" data-throw-if-not-resolved=\"false\"></xref> objects for non-equivalency.\r\n"
  example: []
  syntax:
    content: public static bool operator !=(StorageUri uri1, StorageUri uri2)
    content.vb: Public Shared Operator <>(uri1 As StorageUri, uri2 As StorageUri) As Boolean
    parameters:
    - id: uri1
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: The first <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> object to compare.
    - id: uri2
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: The second <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> object to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> objects have non-equivalent values; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.IEquatable{Microsoft.WindowsAzure.Storage.StorageUri}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<StorageUri>
  fullName: System.IEquatable<Microsoft.WindowsAzure.Storage.StorageUri>
  fullname.vb: System.IEquatable(Of Microsoft.WindowsAzure.Storage.StorageUri)
  name.vb: IEquatable(Of StorageUri)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.StorageUri
    name: StorageUri
    fullName: Microsoft.WindowsAzure.Storage.StorageUri
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.StorageUri
    name: StorageUri
    fullName: Microsoft.WindowsAzure.Storage.StorageUri
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IEquatable`1
  parent: System
  isExternal: true
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage.StorageLocation
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageLocation
  fullName: Microsoft.WindowsAzure.Storage.StorageLocation
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
