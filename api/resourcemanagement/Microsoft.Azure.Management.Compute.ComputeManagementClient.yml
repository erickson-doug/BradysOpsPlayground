items:
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient
  commentId: T:Microsoft.Azure.Management.Compute.ComputeManagementClient
  id: ComputeManagementClient
  parent: Microsoft.Azure.Management.Compute
  children:
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials)
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri)
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(System.Net.Http.HttpClient)
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.ApiVersion
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.AvailabilitySets
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.BaseUri
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.Clone(ServiceClient{Microsoft.Azure.Management.Compute.ComputeManagementClient})
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.Credentials
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.GetDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.LongRunningOperationInitialTimeout
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.Usage
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineExtensionImages
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineExtensions
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineImages
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachines
  - Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineSizes
  langs:
  - csharp
  - vb
  name: ComputeManagementClient
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ComputeManagementClient
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nThe Compute Management Client.\r\n"
  example: []
  syntax:
    content: 'public class ComputeManagementClient : ServiceClient<ComputeManagementClient>, IComputeManagementClient, IDisposable'
    content.vb: >-
      Public Class ComputeManagementClient

          Inherits ServiceClient(Of ComputeManagementClient)

          Implements IComputeManagementClient, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Management.Compute.IComputeManagementClient
  - System.IDisposable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ApiVersion
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nGets the API version.\r\n"
  example: []
  syntax:
    content: >-
      public string ApiVersion

      {

          get;

      }
    content.vb: Public ReadOnly Property ApiVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BaseUri
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nGets the URI used as the base for all cloud service requests.\r\n"
  example: []
  syntax:
    content: >-
      public Uri BaseUri

      {

          get;

      }
    content.vb: Public ReadOnly Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Credentials
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nGets subscription credentials which uniquely identify Microsoft\r\nAzure subscription. The subscription ID forms part of the URI for\r\nevery service call.\r\n"
  example: []
  syntax:
    content: >-
      public SubscriptionCloudCredentials Credentials

      {

          get;

      }
    content.vb: Public ReadOnly Property Credentials As SubscriptionCloudCredentials
    parameters: []
    return:
      type: SubscriptionCloudCredentials
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.LongRunningOperationInitialTimeout
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.LongRunningOperationInitialTimeout
  id: LongRunningOperationInitialTimeout
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationInitialTimeout
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.LongRunningOperationInitialTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationInitialTimeout
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nGets or sets the initial timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      public int LongRunningOperationInitialTimeout

      {

          get;

          set;

      }
    content.vb: Public Property LongRunningOperationInitialTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LongRunningOperationRetryTimeout
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nGets or sets the retry timeout for Long Running Operations.\r\n"
  example: []
  syntax:
    content: >-
      public int LongRunningOperationRetryTimeout

      {

          get;

          set;

      }
    content.vb: Public Property LongRunningOperationRetryTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.AvailabilitySets
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.AvailabilitySets
  id: AvailabilitySets
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: AvailabilitySets
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.AvailabilitySets
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AvailabilitySets
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nOperations for managing the availability sets in compute management.\r\n"
  example: []
  syntax:
    content: >-
      public virtual IAvailabilitySetOperations AvailabilitySets

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property AvailabilitySets As IAvailabilitySetOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.IAvailabilitySetOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.Usage
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.Usage
  id: Usage
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: Usage
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.Usage
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Usage
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nOperations for listing usage.\r\n"
  example: []
  syntax:
    content: >-
      public virtual IUsageOperations Usage

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property Usage As IUsageOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.IUsageOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineExtensionImages
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineExtensionImages
  id: VirtualMachineExtensionImages
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionImages
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineExtensionImages
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineExtensionImages
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nOperations for managing the virtual machine extension images in\r\ncompute management.\r\n"
  example: []
  syntax:
    content: >-
      public virtual IVirtualMachineExtensionImageOperations VirtualMachineExtensionImages

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property VirtualMachineExtensionImages As IVirtualMachineExtensionImageOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.IVirtualMachineExtensionImageOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineExtensions
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineExtensions
  id: VirtualMachineExtensions
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensions
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineExtensions
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineExtensions
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nOperations for managing the virtual machine extensions in compute\r\nmanagement.\r\n"
  example: []
  syntax:
    content: >-
      public virtual IVirtualMachineExtensionOperations VirtualMachineExtensions

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property VirtualMachineExtensions As IVirtualMachineExtensionOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineImages
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineImages
  id: VirtualMachineImages
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: VirtualMachineImages
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineImages
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineImages
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 143
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nOperations for managing the virtual machine images in compute\r\nmanagement.\r\n"
  example: []
  syntax:
    content: >-
      public virtual IVirtualMachineImageOperations VirtualMachineImages

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property VirtualMachineImages As IVirtualMachineImageOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.IVirtualMachineImageOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachines
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachines
  id: VirtualMachines
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: VirtualMachines
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachines
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachines
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nOperations for managing the virtual machines in compute management.\r\n"
  example: []
  syntax:
    content: >-
      public virtual IVirtualMachineOperations VirtualMachines

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property VirtualMachines As IVirtualMachineOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.IVirtualMachineOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineSizes
  commentId: P:Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineSizes
  id: VirtualMachineSizes
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: VirtualMachineSizes
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.VirtualMachineSizes
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineSizes
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 163
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nOperations for listing virtual machine sizes available in a region.\r\n"
  example: []
  syntax:
    content: >-
      public virtual IVirtualMachineSizeOperations VirtualMachineSizes

      {

          get;

      }
    content.vb: Public Overridable ReadOnly Property VirtualMachineSizes As IVirtualMachineSizeOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.IVirtualMachineSizeOperations
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: ComputeManagementClient()
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.ComputeManagementClient()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 171
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nInitializes a new instance of the ComputeManagementClient class.\r\n"
  example: []
  syntax:
    content: public ComputeManagementClient()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri)
  commentId: M:Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri)
  id: '#ctor(SubscriptionCloudCredentials,System.Uri)'
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: ComputeManagementClient(SubscriptionCloudCredentials, Uri)
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.ComputeManagementClient(SubscriptionCloudCredentials, System.Uri)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 199
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nInitializes a new instance of the ComputeManagementClient class.\r\n"
  example: []
  syntax:
    content: public ComputeManagementClient(SubscriptionCloudCredentials credentials, Uri baseUri)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, baseUri As Uri)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
    - id: baseUri
      type: System.Uri
      description: "\r\nOptional. Gets the URI used as the base for all cloud service\r\nrequests.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials)
  commentId: M:Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials)
  id: '#ctor(SubscriptionCloudCredentials)'
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: ComputeManagementClient(SubscriptionCloudCredentials)
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.ComputeManagementClient(SubscriptionCloudCredentials)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 224
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nInitializes a new instance of the ComputeManagementClient class.\r\n"
  example: []
  syntax:
    content: public ComputeManagementClient(SubscriptionCloudCredentials credentials)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(System.Net.Http.HttpClient)
  id: '#ctor(System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: ComputeManagementClient(HttpClient)
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.ComputeManagementClient(System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 243
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nInitializes a new instance of the ComputeManagementClient class.\r\n"
  example: []
  syntax:
    content: public ComputeManagementClient(HttpClient httpClient)
    content.vb: Public Sub New(httpClient As HttpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\r\nThe Http client\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)
  id: '#ctor(SubscriptionCloudCredentials,System.Uri,System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: ComputeManagementClient(SubscriptionCloudCredentials, Uri, HttpClient)
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.ComputeManagementClient(SubscriptionCloudCredentials, System.Uri, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 274
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nInitializes a new instance of the ComputeManagementClient class.\r\n"
  example: []
  syntax:
    content: public ComputeManagementClient(SubscriptionCloudCredentials credentials, Uri baseUri, HttpClient httpClient)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, baseUri As Uri, httpClient As HttpClient)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
    - id: baseUri
      type: System.Uri
      description: "\r\nOptional. Gets the URI used as the base for all cloud service\r\nrequests.\r\n"
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\r\nThe Http client\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  commentId: M:Microsoft.Azure.Management.Compute.ComputeManagementClient.#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)
  id: '#ctor(SubscriptionCloudCredentials,System.Net.Http.HttpClient)'
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: ComputeManagementClient(SubscriptionCloudCredentials, HttpClient)
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.ComputeManagementClient(SubscriptionCloudCredentials, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 302
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nInitializes a new instance of the ComputeManagementClient class.\r\n"
  example: []
  syntax:
    content: public ComputeManagementClient(SubscriptionCloudCredentials credentials, HttpClient httpClient)
    content.vb: Public Sub New(credentials As SubscriptionCloudCredentials, httpClient As HttpClient)
    parameters:
    - id: credentials
      type: SubscriptionCloudCredentials
      description: "\r\nRequired. Gets subscription credentials which uniquely identify\r\nMicrosoft Azure subscription. The subscription ID forms part of\r\nthe URI for every service call.\r\n"
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: "\r\nThe Http client\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.Clone(ServiceClient{Microsoft.Azure.Management.Compute.ComputeManagementClient})
  commentId: M:Microsoft.Azure.Management.Compute.ComputeManagementClient.Clone(ServiceClient{Microsoft.Azure.Management.Compute.ComputeManagementClient})
  id: Clone(ServiceClient{Microsoft.Azure.Management.Compute.ComputeManagementClient})
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: Clone(ServiceClient<ComputeManagementClient>)
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.Clone(ServiceClient<Microsoft.Azure.Management.Compute.ComputeManagementClient>)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Clone
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 322
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nClones properties from current instance to another\r\nComputeManagementClient instance\r\n"
  example: []
  syntax:
    content: protected override void Clone(ServiceClient<ComputeManagementClient> client)
    content.vb: Protected Overrides Sub Clone(client As ServiceClient(Of ComputeManagementClient))
    parameters:
    - id: client
      type: ServiceClient{Microsoft.Azure.Management.Compute.ComputeManagementClient}
      description: "\r\nInstance of ComputeManagementClient to clone to\r\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Azure.Management.Compute.ComputeManagementClient.Clone(ServiceClient(Of Microsoft.Azure.Management.Compute.ComputeManagementClient))
  name.vb: Clone(ServiceClient(Of ComputeManagementClient))
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.GetDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Compute.ComputeManagementClient.GetDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetDeleteOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: GetDeleteOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.GetDeleteOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetDeleteOperationStatusAsync
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 355
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nThe Get Delete Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call GetDeleteOperationStatus to determine whether the\r\noperation has succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public Task<DeleteOperationResponse> GetDeleteOperationStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Public Function GetDeleteOperationStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of DeleteOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Compute.Models.DeleteOperationResponse}
      description: "\r\nThe compute long running operation response.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.ComputeManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Compute.ComputeManagementClient.GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  id: GetLongRunningOperationStatusAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.Management.Compute.ComputeManagementClient
  langs:
  - csharp
  - vb
  name: GetLongRunningOperationStatusAsync(String, CancellationToken)
  fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient.GetLongRunningOperationStatusAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetLongRunningOperationStatusAsync
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/ComputeManagementClient.cs
    startLine: 589
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute
  summary: "\r\nThe Get Operation Status operation returns the status of the\r\nspecified operation. After calling an asynchronous operation, you\r\ncan call GetLongRunningOperationStatus to determine whether the\r\noperation has succeeded, failed, or is still in progress.\r\n"
  example: []
  syntax:
    content: public Task<ComputeLongRunningOperationResponse> GetLongRunningOperationStatusAsync(string operationStatusLink, CancellationToken cancellationToken)
    content.vb: Public Function GetLongRunningOperationStatusAsync(operationStatusLink As String, cancellationToken As CancellationToken) As Task(Of ComputeLongRunningOperationResponse)
    parameters:
    - id: operationStatusLink
      type: System.String
      description: "\r\nRequired. Location value returned by the Begin operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Compute.Models.ComputeLongRunningOperationResponse}
      description: "\r\nThe Compute service response for long-running operations.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute
  isExternal: false
  name: Microsoft.Azure.Management.Compute
  fullName: Microsoft.Azure.Management.Compute
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Compute.IComputeManagementClient
  parent: Microsoft.Azure.Management.Compute
  isExternal: false
  name: IComputeManagementClient
  fullName: Microsoft.Azure.Management.Compute.IComputeManagementClient
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: SubscriptionCloudCredentials
  isExternal: true
  name: SubscriptionCloudCredentials
  fullName: SubscriptionCloudCredentials
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.Compute.IAvailabilitySetOperations
  parent: Microsoft.Azure.Management.Compute
  isExternal: false
  name: IAvailabilitySetOperations
  fullName: Microsoft.Azure.Management.Compute.IAvailabilitySetOperations
- uid: Microsoft.Azure.Management.Compute.IUsageOperations
  parent: Microsoft.Azure.Management.Compute
  isExternal: false
  name: IUsageOperations
  fullName: Microsoft.Azure.Management.Compute.IUsageOperations
- uid: Microsoft.Azure.Management.Compute.IVirtualMachineExtensionImageOperations
  parent: Microsoft.Azure.Management.Compute
  isExternal: false
  name: IVirtualMachineExtensionImageOperations
  fullName: Microsoft.Azure.Management.Compute.IVirtualMachineExtensionImageOperations
- uid: Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations
  parent: Microsoft.Azure.Management.Compute
  isExternal: false
  name: IVirtualMachineExtensionOperations
  fullName: Microsoft.Azure.Management.Compute.IVirtualMachineExtensionOperations
- uid: Microsoft.Azure.Management.Compute.IVirtualMachineImageOperations
  parent: Microsoft.Azure.Management.Compute
  isExternal: false
  name: IVirtualMachineImageOperations
  fullName: Microsoft.Azure.Management.Compute.IVirtualMachineImageOperations
- uid: Microsoft.Azure.Management.Compute.IVirtualMachineOperations
  parent: Microsoft.Azure.Management.Compute
  isExternal: false
  name: IVirtualMachineOperations
  fullName: Microsoft.Azure.Management.Compute.IVirtualMachineOperations
- uid: Microsoft.Azure.Management.Compute.IVirtualMachineSizeOperations
  parent: Microsoft.Azure.Management.Compute
  isExternal: false
  name: IVirtualMachineSizeOperations
  fullName: Microsoft.Azure.Management.Compute.IVirtualMachineSizeOperations
- uid: System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: ServiceClient{Microsoft.Azure.Management.Compute.ComputeManagementClient}
  definition: ServiceClient`1
  name: ServiceClient<ComputeManagementClient>
  fullName: ServiceClient<Microsoft.Azure.Management.Compute.ComputeManagementClient>
  fullname.vb: ServiceClient(Of Microsoft.Azure.Management.Compute.ComputeManagementClient)
  name.vb: ServiceClient(Of ComputeManagementClient)
  spec.csharp:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.ComputeManagementClient
    name: ComputeManagementClient
    fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.ComputeManagementClient
    name: ComputeManagementClient
    fullName: Microsoft.Azure.Management.Compute.ComputeManagementClient
  - name: )
    fullName: )
- uid: ServiceClient`1
  isExternal: true
  name: ServiceClient<>
  fullName: ServiceClient<>
  fullname.vb: ServiceClient(Of )
  name.vb: ServiceClient(Of )
  spec.csharp:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Compute.Models.DeleteOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DeleteOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Compute.Models.DeleteOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Compute.Models.DeleteOperationResponse)
  name.vb: Task(Of DeleteOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.DeleteOperationResponse
    name: DeleteOperationResponse
    fullName: Microsoft.Azure.Management.Compute.Models.DeleteOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.DeleteOperationResponse
    name: DeleteOperationResponse
    fullName: Microsoft.Azure.Management.Compute.Models.DeleteOperationResponse
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Compute.Models.ComputeLongRunningOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ComputeLongRunningOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Compute.Models.ComputeLongRunningOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Compute.Models.ComputeLongRunningOperationResponse)
  name.vb: Task(Of ComputeLongRunningOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.Compute.Models.ComputeLongRunningOperationResponse
    name: ComputeLongRunningOperationResponse
    fullName: Microsoft.Azure.Management.Compute.Models.ComputeLongRunningOperationResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Compute.Models.ComputeLongRunningOperationResponse
    name: ComputeLongRunningOperationResponse
    fullName: Microsoft.Azure.Management.Compute.Models.ComputeLongRunningOperationResponse
  - name: )
    fullName: )
