items:
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  commentId: T:Microsoft.Azure.Management.Compute.Models.VaultCertificate
  id: VaultCertificate
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor
  - Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore
  - Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl
  langs:
  - csharp
  - vb
  name: VaultCertificate
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VaultCertificate.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VaultCertificate
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VaultCertificate.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nDescribes a single certificate reference in a Key Vault, and where the\r\ncertificate should reside on the VM.\r\n"
  example: []
  syntax:
    content: public class VaultCertificate
    content.vb: Public Class VaultCertificate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore
  commentId: P:Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore
  id: CertificateStore
  parent: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  langs:
  - csharp
  - vb
  name: CertificateStore
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateStore
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VaultCertificate.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CertificateStore
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VaultCertificate.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the Certificate store in LocalMachine to add\r\nthe certificate to on Windows, leave empty on Linux.\r\n"
  example: []
  syntax:
    content: >-
      public string CertificateStore

      {

          get;

          set;

      }
    content.vb: Public Property CertificateStore As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl
  commentId: P:Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl
  id: CertificateUrl
  parent: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  langs:
  - csharp
  - vb
  name: CertificateUrl
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate.CertificateUrl
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VaultCertificate.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CertificateUrl
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VaultCertificate.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the URL referencing a secret in a Key Vault\r\nwhich contains a properly formatted certificate.\r\n"
  example: []
  syntax:
    content: >-
      public string CertificateUrl

      {

          get;

          set;

      }
    content.vb: Public Property CertificateUrl As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VaultCertificate.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VaultCertificate
  langs:
  - csharp
  - vb
  name: VaultCertificate()
  fullName: Microsoft.Azure.Management.Compute.Models.VaultCertificate.VaultCertificate()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VaultCertificate.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VaultCertificate.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the VaultCertificate class.\r\n"
  example: []
  syntax:
    content: public VaultCertificate()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
