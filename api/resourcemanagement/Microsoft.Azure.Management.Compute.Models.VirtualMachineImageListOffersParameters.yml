items:
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters
  commentId: T:Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters
  id: VirtualMachineImageListOffersParameters
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.#ctor
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.#ctor(System.String,System.String)
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.PublisherName
  langs:
  - csharp
  - vb
  name: VirtualMachineImageListOffersParameters
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters
  type: Class
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineImageListOffersParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineImageListOffersParameters
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineImageListOffersParameters.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nContains the parameters required to list offers.\r\n"
  example: []
  syntax:
    content: 'public class VirtualMachineImageListOffersParameters : VirtualMachineImageListPublishersParameters'
    content.vb: >-
      Public Class VirtualMachineImageListOffersParameters

          Inherits VirtualMachineImageListPublishersParameters
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListPublishersParameters
  inheritedMembers:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListPublishersParameters.Location
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.PublisherName
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.PublisherName
  id: PublisherName
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters
  langs:
  - csharp
  - vb
  name: PublisherName
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.PublisherName
  type: Property
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineImageListOffersParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PublisherName
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineImageListOffersParameters.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Publisher identifier. For example: Microsoft.Windows or\r\nCanonical.\r\n"
  example: []
  syntax:
    content: >-
      public string PublisherName

      {

          get;

          set;

      }
    content.vb: Public Property PublisherName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters
  langs:
  - csharp
  - vb
  name: VirtualMachineImageListOffersParameters()
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.VirtualMachineImageListOffersParameters()
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineImageListOffersParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineImageListOffersParameters.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the\r\nVirtualMachineImageListOffersParameters class.\r\n"
  example: []
  syntax:
    content: public VirtualMachineImageListOffersParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters
  langs:
  - csharp
  - vb
  name: VirtualMachineImageListOffersParameters(String, String)
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListOffersParameters.VirtualMachineImageListOffersParameters(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineImageListOffersParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineImageListOffersParameters.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the\r\nVirtualMachineImageListOffersParameters class with required\r\narguments.\r\n"
  example: []
  syntax:
    content: public VirtualMachineImageListOffersParameters(string publisherName, string location)
    content.vb: Public Sub New(publisherName As String, location As String)
    parameters:
    - id: publisherName
      type: System.String
    - id: location
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListPublishersParameters
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: VirtualMachineImageListPublishersParameters
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListPublishersParameters
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListPublishersParameters.Location
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListPublishersParameters
  isExternal: false
  name: Location
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageListPublishersParameters.Location
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
