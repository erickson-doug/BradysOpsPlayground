items:
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  id: BlobRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.#ctor
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.DisableContentMD5Validation
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.EncryptionPolicy
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.LocationMode
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.MaximumExecutionTime
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ParallelOperationThreadCount
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RequireEncryption
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RetryPolicy
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ServerTimeout
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.SingleBlobUploadThresholdInBytes
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.StoreBlobContentMD5
  - Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.UseTransactionalMD5
  langs:
  - csharp
  - vb
  name: BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  type: Class
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BlobRequestOptions
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nRepresents a set of timeout and retry policy options that may be specified for a request against the Blob service.\r\n"
  example: []
  syntax:
    content: 'public sealed class BlobRequestOptions : IRequestOptions'
    content.vb: >-
      Public NotInheritable Class BlobRequestOptions

          Implements IRequestOptions
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.IRequestOptions
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: BlobRequestOptions()
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.BlobRequestOptions()
  type: Constructor
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> class.\r\n"
  example: []
  syntax:
    content: public BlobRequestOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RetryPolicy
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RetryPolicy
  id: RetryPolicy
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: RetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RetryPolicy
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RetryPolicy
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 245
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the retry policy for the request.\r\n"
  example: []
  syntax:
    content: >-
      public IRetryPolicy RetryPolicy

      {

          get;

          set;

      }
    content.vb: Public Property RetryPolicy As IRetryPolicy
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.EncryptionPolicy
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.EncryptionPolicy
  id: EncryptionPolicy
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: EncryptionPolicy
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.EncryptionPolicy
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EncryptionPolicy
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 252
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the encryption policy for the request.\r\n"
  example: []
  syntax:
    content: >-
      public BlobEncryptionPolicy EncryptionPolicy

      {

          get;

          set;

      }
    content.vb: Public Property EncryptionPolicy As BlobEncryptionPolicy
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobEncryptionPolicy
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.EncryptionPolicy" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RequireEncryption
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RequireEncryption
  id: RequireEncryption
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: RequireEncryption
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RequireEncryption
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RequireEncryption
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 258
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets a value to indicate whether data written and read by the client library should be encrypted.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? RequireEncryption

      {

          get;

          set;

      }
    content.vb: Public Property RequireEncryption As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: Use <code>true</code> to specify that data should be encrypted/decrypted for all transactions; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry
  id: AbsorbConditionalErrorsOnRetry
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: AbsorbConditionalErrorsOnRetry
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AbsorbConditionalErrorsOnRetry
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 276
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets a value that indicates whether a conditional failure should be absorbed on a retry attempt\r\nfor the request. \r\n"
  remarks: "\r\nThis option is used only by the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob\" data-throw-if-not-resolved=\"false\"></xref> object in the <strong>UploadFrom*</strong> methods and\r\nthe <strong>BlobWriteStream</strong> methods. By default, it is set to <code>false</code>. Set this option to <code>true</code> only for single writer scenarios.\r\nSetting this option to <code>true</code> in a multi-writer scenario may lead to corrupted blob data.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? AbsorbConditionalErrorsOnRetry

      {

          get;

          set;

      }
    content.vb: Public Property AbsorbConditionalErrorsOnRetry As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.LocationMode
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.LocationMode
  id: LocationMode
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: LocationMode
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.LocationMode
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LocationMode
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 282
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the location mode of the request.\r\n"
  example: []
  syntax:
    content: >-
      public LocationMode? LocationMode

      {

          get;

          set;

      }
    content.vb: Public Property LocationMode As LocationMode?
    parameters: []
    return:
      type: System.Nullable{Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode}
      description: A <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode" data-throw-if-not-resolved="false"></xref> enumeration value indicating the location mode of the request.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ServerTimeout
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ServerTimeout
  id: ServerTimeout
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: ServerTimeout
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ServerTimeout
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServerTimeout
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 288
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the server timeout interval for the request.\r\n"
  example: []
  syntax:
    content: >-
      public TimeSpan? ServerTimeout

      {

          get;

          set;

      }
    content.vb: Public Property ServerTimeout As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> containing the server timeout interval for the request.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.MaximumExecutionTime
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.MaximumExecutionTime
  id: MaximumExecutionTime
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: MaximumExecutionTime
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.MaximumExecutionTime
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MaximumExecutionTime
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 294
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the maximum execution time across all potential retries for the request. \r\n"
  example: []
  syntax:
    content: >-
      public TimeSpan? MaximumExecutionTime

      {

          get;

          set;

      }
    content.vb: Public Property MaximumExecutionTime As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the maximum execution time for retries for the request.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ParallelOperationThreadCount
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ParallelOperationThreadCount
  id: ParallelOperationThreadCount
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: ParallelOperationThreadCount
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ParallelOperationThreadCount
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ParallelOperationThreadCount
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 317
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the number of blocks that may be simultaneously uploaded when uploading a blob that is greater than \r\nthe value specified by the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.SingleBlobUploadThresholdInBytes\" data-throw-if-not-resolved=\"false\"></xref> property in size.\r\n"
  example: []
  syntax:
    content: >-
      public int ? ParallelOperationThreadCount

      {

          get;

          set;

      }
    content.vb: Public Property ParallelOperationThreadCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: An integer value indicating the number of parallel blob upload operations that may proceed.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.SingleBlobUploadThresholdInBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.SingleBlobUploadThresholdInBytes
  id: SingleBlobUploadThresholdInBytes
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: SingleBlobUploadThresholdInBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.SingleBlobUploadThresholdInBytes
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SingleBlobUploadThresholdInBytes
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 340
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets the maximum size of a blob in bytes that may be uploaded as a single blob. \r\n"
  example: []
  syntax:
    content: >-
      public long ? SingleBlobUploadThresholdInBytes

      {

          get;

          set;

      }
    content.vb: Public Property SingleBlobUploadThresholdInBytes As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: >-
        A long indicating the maximum size of a blob, in bytes, that may be uploaded as a single blob,

        ranging from between 1 and 64 MB inclusive.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.UseTransactionalMD5
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.UseTransactionalMD5
  id: UseTransactionalMD5
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: UseTransactionalMD5
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.UseTransactionalMD5
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UseTransactionalMD5
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 365
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets a value to calculate and send/validate content MD5 for transactions.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? UseTransactionalMD5

      {

          get;

          set;

      }
    content.vb: Public Property UseTransactionalMD5 As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: Use <code>true</code> to calculate and send/validate content MD5 for transactions; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.StoreBlobContentMD5
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.StoreBlobContentMD5
  id: StoreBlobContentMD5
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: StoreBlobContentMD5
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.StoreBlobContentMD5
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StoreBlobContentMD5
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 394
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets a value to indicate that an MD5 hash will be calculated and stored when uploading a blob.\r\n"
  remarks: This property is not supported for the <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" data-throw-if-not-resolved="false"></xref> Append* APIs.
  example: []
  syntax:
    content: >-
      public bool ? StoreBlobContentMD5

      {

          get;

          set;

      }
    content.vb: Public Property StoreBlobContentMD5 As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: Use <code>true</code> to calculate and store an MD5 hash when uploading a blob; otherwise, <code>false</code>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.DisableContentMD5Validation
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.DisableContentMD5Validation
  id: DisableContentMD5Validation
  parent: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  langs:
  - csharp
  - vb
  name: DisableContentMD5Validation
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.DisableContentMD5Validation
  type: Property
  source:
    remote:
      path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DisableContentMD5Validation
    path: src/Storage/Lib/Common/Blob/BlobRequestOptions.cs
    startLine: 422
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\r\nGets or sets a value to indicate that MD5 validation will be disabled when downloading blobs.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? DisableContentMD5Validation

      {

          get;

          set;

      }
    content.vb: Public Property DisableContentMD5Validation As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: Use <code>true</code> to disable MD5 validation; <code>false</code> to enable MD5 validation.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.IRequestOptions
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.IRequestOptions
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: IRetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.RetryPolicies
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.EncryptionPolicy
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobEncryptionPolicy
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobEncryptionPolicy
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobEncryptionPolicy
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudAppendBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: LocationMode
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<LocationMode>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode>
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode)
  name.vb: Nullable(Of LocationMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
    name: LocationMode
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
    name: LocationMode
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
  - name: )
    fullName: )
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.SingleBlobUploadThresholdInBytes
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
