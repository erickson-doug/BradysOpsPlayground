items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe
  id: LoadBalancerProbe
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.IntervalInSeconds
  - Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Path
  - Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Port
  - Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Protocol
  - Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.TimeoutInSeconds
  langs:
  - csharp
  - vb
  name: LoadBalancerProbe
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LoadBalancerProbe
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nContains properties that specify the endpoint settings which the Azure\r\nload balancer uses to monitor the availability of this virtual machine\r\nbefore forwarding traffic to the endpoint.\r\n"
  example: []
  syntax:
    content: public class LoadBalancerProbe
    content.vb: Public Class LoadBalancerProbe
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.IntervalInSeconds
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.IntervalInSeconds
  id: IntervalInSeconds
  parent: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe
  langs:
  - csharp
  - vb
  name: IntervalInSeconds
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.IntervalInSeconds
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IntervalInSeconds
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the interval for the load balancer probe in\r\nseconds. The minimum value is 5 seconds. If not specified, the\r\ndefault is 15 seconds.\r\n"
  example: []
  syntax:
    content: >-
      public int ? IntervalInSeconds

      {

          get;

          set;

      }
    content.vb: Public Property IntervalInSeconds As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Path
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Path
  id: Path
  parent: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe
  langs:
  - csharp
  - vb
  name: Path
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Path
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Path
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the relative path name to inspect to determine\r\nthe virtual machine availability status. If Protocol is set to\r\nTCP, this value must be NULL.\r\n"
  example: []
  syntax:
    content: >-
      public string Path

      {

          get;

          set;

      }
    content.vb: Public Property Path As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Port
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Port
  id: Port
  parent: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe
  langs:
  - csharp
  - vb
  name: Port
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Port
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Port
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the port to use to inspect the virtual machine\r\navailability status.\r\n"
  example: []
  syntax:
    content: >-
      public int Port

      {

          get;

          set;

      }
    content.vb: Public Property Port As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Protocol
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Protocol
  id: Protocol
  parent: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe
  langs:
  - csharp
  - vb
  name: Protocol
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.Protocol
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Protocol
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the protocol to use to inspect the virtual\r\nmachine availability status.\r\n"
  example: []
  syntax:
    content: >-
      public LoadBalancerProbeTransportProtocol Protocol

      {

          get;

          set;

      }
    content.vb: Public Property Protocol As LoadBalancerProbeTransportProtocol
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbeTransportProtocol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.TimeoutInSeconds
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.TimeoutInSeconds
  id: TimeoutInSeconds
  parent: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe
  langs:
  - csharp
  - vb
  name: TimeoutInSeconds
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.TimeoutInSeconds
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TimeoutInSeconds
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the timeout for the load balancer probe in\r\nseconds. The minimum value is 11 seconds. If not specified, the\r\ndefault is 31 seconds.\r\n"
  example: []
  syntax:
    content: >-
      public int ? TimeoutInSeconds

      {

          get;

          set;

      }
    content.vb: Public Property TimeoutInSeconds As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe
  langs:
  - csharp
  - vb
  name: LoadBalancerProbe()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbe.LoadBalancerProbe()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/LoadBalancerProbe.cs
    startLine: 100
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the LoadBalancerProbe class.\r\n"
  example: []
  syntax:
    content: public LoadBalancerProbe()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbeTransportProtocol
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: LoadBalancerProbeTransportProtocol
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerProbeTransportProtocol
