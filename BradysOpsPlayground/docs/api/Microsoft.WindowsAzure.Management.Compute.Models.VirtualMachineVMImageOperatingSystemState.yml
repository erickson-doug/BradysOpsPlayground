items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState
  id: VirtualMachineVMImageOperatingSystemState
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState.Generalized
  - Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState.Specialized
  langs:
  - csharp
  - vb
  name: VirtualMachineVMImageOperatingSystemState
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineVMImageOperatingSystemState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineVMImageOperatingSystemState
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineVMImageOperatingSystemState.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nKnown values for the operating system state of the OS in a virtual\r\nmachine VM image. A Virtual Machine that is fully configured and\r\nrunning contains a Specialized operating system. A Virtual Machine on\r\nwhich the Sysprep command has been run with the generalize option\r\ncontains a Generalized operating system.\r\n"
  example: []
  syntax:
    content: public class VirtualMachineVMImageOperatingSystemState
    content.vb: Public Class VirtualMachineVMImageOperatingSystemState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState.Generalized
  commentId: F:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState.Generalized
  id: Generalized
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState
  langs:
  - csharp
  - vb
  name: Generalized
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState.Generalized
  type: Field
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineVMImageOperatingSystemState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Generalized
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineVMImageOperatingSystemState.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  syntax:
    content: public const string Generalized = "Generalized"
    content.vb: Public Const Generalized As String = "Generalized"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState.Specialized
  commentId: F:Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState.Specialized
  id: Specialized
  parent: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState
  langs:
  - csharp
  - vb
  name: Specialized
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.VirtualMachineVMImageOperatingSystemState.Specialized
  type: Field
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineVMImageOperatingSystemState.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Specialized
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineVMImageOperatingSystemState.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  syntax:
    content: public const string Specialized = "Specialized"
    content.vb: Public Const Specialized As String = "Specialized"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
