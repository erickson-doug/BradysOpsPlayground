items:
- uid: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions
  commentId: T:Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions
  id: DictionaryExtensions
  parent: Microsoft.Azure.Common.Authentication.Utilities
  children:
  - Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.GetProperty``2(System.Collections.Generic.Dictionary{``0,``1},``0)
  - Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.GetPropertyAsArray``1(System.Collections.Generic.Dictionary{``0,System.String},``0)
  - Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.IsPropertySet``1(System.Collections.Generic.Dictionary{``0,System.String},``0)
  - Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.SetOrAppendProperty``1(System.Collections.Generic.Dictionary{``0,System.String},``0,System.String[])
  - Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.SetProperty``1(System.Collections.Generic.Dictionary{``0,System.String},``0,System.String[])
  langs:
  - csharp
  - vb
  name: DictionaryExtensions
  fullName: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DictionaryExtensions
    path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Utilities
  syntax:
    content: public class DictionaryExtensions
    content.vb: Public Class DictionaryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.GetProperty``2(System.Collections.Generic.Dictionary{``0,``1},``0)
  commentId: M:Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.GetProperty``2(System.Collections.Generic.Dictionary{``0,``1},``0)
  id: GetProperty``2(System.Collections.Generic.Dictionary{``0,``1},``0)
  parent: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: GetProperty<TKey, TValue>(Dictionary<TKey, TValue>, TKey)
  fullName: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.GetProperty<TKey, TValue>(System.Collections.Generic.Dictionary<TKey, TValue>, TKey)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetProperty
    path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Utilities
  syntax:
    content: public static TValue GetProperty<TKey, TValue>(Dictionary<TKey, TValue> dictionary, TKey property)
    content.vb: Public Shared Function GetProperty(Of TKey, TValue)(dictionary As Dictionary(Of TKey, TValue), property As TKey) As TValue
    parameters:
    - id: dictionary
      type: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    - id: property
      type: '{TKey}'
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: '{TValue}'
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.GetProperty(Of TKey, TValue)(System.Collections.Generic.Dictionary(Of TKey, TValue), TKey)
  name.vb: GetProperty(Of TKey, TValue)(Dictionary(Of TKey, TValue), TKey)
- uid: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.GetPropertyAsArray``1(System.Collections.Generic.Dictionary{``0,System.String},``0)
  commentId: M:Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.GetPropertyAsArray``1(System.Collections.Generic.Dictionary{``0,System.String},``0)
  id: GetPropertyAsArray``1(System.Collections.Generic.Dictionary{``0,System.String},``0)
  parent: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: GetPropertyAsArray<TKey>(Dictionary<TKey, String>, TKey)
  fullName: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.GetPropertyAsArray<TKey>(System.Collections.Generic.Dictionary<TKey, System.String>, TKey)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetPropertyAsArray
    path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Utilities
  syntax:
    content: public static string[] GetPropertyAsArray<TKey>(Dictionary<TKey, string> dictionary, TKey property)
    content.vb: Public Shared Function GetPropertyAsArray(Of TKey)(dictionary As Dictionary(Of TKey, String), property As TKey) As String()
    parameters:
    - id: dictionary
      type: System.Collections.Generic.Dictionary{{TKey},System.String}
    - id: property
      type: '{TKey}'
    typeParameters:
    - id: TKey
    return:
      type: System.String[]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.GetPropertyAsArray(Of TKey)(System.Collections.Generic.Dictionary(Of TKey, System.String), TKey)
  name.vb: GetPropertyAsArray(Of TKey)(Dictionary(Of TKey, String), TKey)
- uid: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.SetProperty``1(System.Collections.Generic.Dictionary{``0,System.String},``0,System.String[])
  commentId: M:Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.SetProperty``1(System.Collections.Generic.Dictionary{``0,System.String},``0,System.String[])
  id: SetProperty``1(System.Collections.Generic.Dictionary{``0,System.String},``0,System.String[])
  parent: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: SetProperty<TKey>(Dictionary<TKey, String>, TKey, String[])
  fullName: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.SetProperty<TKey>(System.Collections.Generic.Dictionary<TKey, System.String>, TKey, System.String[])
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetProperty
    path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Utilities
  syntax:
    content: public static void SetProperty<TKey>(Dictionary<TKey, string> dictionary, TKey property, params string[] values)
    content.vb: Public Shared Sub SetProperty(Of TKey)(dictionary As Dictionary(Of TKey, String), property As TKey, ParamArray values As String())
    parameters:
    - id: dictionary
      type: System.Collections.Generic.Dictionary{{TKey},System.String}
    - id: property
      type: '{TKey}'
    - id: values
      type: System.String[]
    typeParameters:
    - id: TKey
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.SetProperty(Of TKey)(System.Collections.Generic.Dictionary(Of TKey, System.String), TKey, System.String())
  name.vb: SetProperty(Of TKey)(Dictionary(Of TKey, String), TKey, String())
- uid: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.SetOrAppendProperty``1(System.Collections.Generic.Dictionary{``0,System.String},``0,System.String[])
  commentId: M:Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.SetOrAppendProperty``1(System.Collections.Generic.Dictionary{``0,System.String},``0,System.String[])
  id: SetOrAppendProperty``1(System.Collections.Generic.Dictionary{``0,System.String},``0,System.String[])
  parent: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: SetOrAppendProperty<TKey>(Dictionary<TKey, String>, TKey, String[])
  fullName: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.SetOrAppendProperty<TKey>(System.Collections.Generic.Dictionary<TKey, System.String>, TKey, System.String[])
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SetOrAppendProperty
    path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Utilities
  syntax:
    content: public static void SetOrAppendProperty<TKey>(Dictionary<TKey, string> dictionary, TKey property, params string[] values)
    content.vb: Public Shared Sub SetOrAppendProperty(Of TKey)(dictionary As Dictionary(Of TKey, String), property As TKey, ParamArray values As String())
    parameters:
    - id: dictionary
      type: System.Collections.Generic.Dictionary{{TKey},System.String}
    - id: property
      type: '{TKey}'
    - id: values
      type: System.String[]
    typeParameters:
    - id: TKey
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.SetOrAppendProperty(Of TKey)(System.Collections.Generic.Dictionary(Of TKey, System.String), TKey, System.String())
  name.vb: SetOrAppendProperty(Of TKey)(Dictionary(Of TKey, String), TKey, String())
- uid: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.IsPropertySet``1(System.Collections.Generic.Dictionary{``0,System.String},``0)
  commentId: M:Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.IsPropertySet``1(System.Collections.Generic.Dictionary{``0,System.String},``0)
  id: IsPropertySet``1(System.Collections.Generic.Dictionary{``0,System.String},``0)
  parent: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions
  langs:
  - csharp
  - vb
  name: IsPropertySet<TKey>(Dictionary<TKey, String>, TKey)
  fullName: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.IsPropertySet<TKey>(System.Collections.Generic.Dictionary<TKey, System.String>, TKey)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IsPropertySet
    path: BradysOpsPlayground/src/Authentication/Common.Authentication/Utilities/DictionaryExtensions.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication.Utilities
  syntax:
    content: public static bool IsPropertySet<TKey>(Dictionary<TKey, string> dictionary, TKey property)
    content.vb: Public Shared Function IsPropertySet(Of TKey)(dictionary As Dictionary(Of TKey, String), property As TKey) As Boolean
    parameters:
    - id: dictionary
      type: System.Collections.Generic.Dictionary{{TKey},System.String}
    - id: property
      type: '{TKey}'
    typeParameters:
    - id: TKey
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Common.Authentication.Utilities.DictionaryExtensions.IsPropertySet(Of TKey)(System.Collections.Generic.Dictionary(Of TKey, System.String), TKey)
  name.vb: IsPropertySet(Of TKey)(Dictionary(Of TKey, String), TKey)
references:
- uid: Microsoft.Azure.Common.Authentication.Utilities
  isExternal: false
  name: Microsoft.Azure.Common.Authentication.Utilities
  fullName: Microsoft.Azure.Common.Authentication.Utilities
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{{TKey},{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: '{TValue}'
  isExternal: false
  name: TValue
  fullName: TValue
- uid: System.Collections.Generic.Dictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary{{TKey},System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<TKey, String>
  fullName: System.Collections.Generic.Dictionary<TKey, System.String>
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, System.String)
  name.vb: Dictionary(Of TKey, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
