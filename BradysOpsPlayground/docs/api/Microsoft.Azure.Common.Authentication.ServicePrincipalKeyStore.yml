items:
- uid: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore
  commentId: T:Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore
  id: ServicePrincipalKeyStore
  parent: Microsoft.Azure.Common.Authentication
  children:
  - Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.DeleteKey(System.String,System.String)
  - Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.GetKey(System.String,System.String)
  - Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.SaveKey(System.String,System.String,System.Security.SecureString)
  langs:
  - csharp
  - vb
  name: ServicePrincipalKeyStore
  fullName: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/Authentication/Common.Authentication/Authentication/ServicePrincipalKeyStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServicePrincipalKeyStore
    path: BradysOpsPlayground/src/Authentication/Common.Authentication/Authentication/ServicePrincipalKeyStore.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  summary: "\r\nHelper class to store service principal keys and retrieve them\r\nfrom the Windows Credential Store.\r\n"
  example: []
  syntax:
    content: public class ServicePrincipalKeyStore
    content.vb: Public Class ServicePrincipalKeyStore
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.SaveKey(System.String,System.String,System.Security.SecureString)
  commentId: M:Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.SaveKey(System.String,System.String,System.Security.SecureString)
  id: SaveKey(System.String,System.String,System.Security.SecureString)
  parent: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore
  langs:
  - csharp
  - vb
  name: SaveKey(String, String, SecureString)
  fullName: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.SaveKey(System.String, System.String, System.Security.SecureString)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Authentication/Common.Authentication/Authentication/ServicePrincipalKeyStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SaveKey
    path: BradysOpsPlayground/src/Authentication/Common.Authentication/Authentication/ServicePrincipalKeyStore.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static void SaveKey(string appId, string tenantId, SecureString serviceKey)
    content.vb: Public Shared Sub SaveKey(appId As String, tenantId As String, serviceKey As SecureString)
    parameters:
    - id: appId
      type: System.String
    - id: tenantId
      type: System.String
    - id: serviceKey
      type: System.Security.SecureString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.GetKey(System.String,System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.GetKey(System.String,System.String)
  id: GetKey(System.String,System.String)
  parent: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore
  langs:
  - csharp
  - vb
  name: GetKey(String, String)
  fullName: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.GetKey(System.String, System.String)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Authentication/Common.Authentication/Authentication/ServicePrincipalKeyStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: GetKey
    path: BradysOpsPlayground/src/Authentication/Common.Authentication/Authentication/ServicePrincipalKeyStore.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static SecureString GetKey(string appId, string tenantId)
    content.vb: Public Shared Function GetKey(appId As String, tenantId As String) As SecureString
    parameters:
    - id: appId
      type: System.String
    - id: tenantId
      type: System.String
    return:
      type: System.Security.SecureString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.DeleteKey(System.String,System.String)
  commentId: M:Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.DeleteKey(System.String,System.String)
  id: DeleteKey(System.String,System.String)
  parent: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore
  langs:
  - csharp
  - vb
  name: DeleteKey(String, String)
  fullName: Microsoft.Azure.Common.Authentication.ServicePrincipalKeyStore.DeleteKey(System.String, System.String)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Authentication/Common.Authentication/Authentication/ServicePrincipalKeyStore.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteKey
    path: BradysOpsPlayground/src/Authentication/Common.Authentication/Authentication/ServicePrincipalKeyStore.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Common.Authentication
  namespace: Microsoft.Azure.Common.Authentication
  syntax:
    content: public static void DeleteKey(string appId, string tenantId)
    content.vb: Public Shared Sub DeleteKey(appId As String, tenantId As String)
    parameters:
    - id: appId
      type: System.String
    - id: tenantId
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Common.Authentication
  isExternal: false
  name: Microsoft.Azure.Common.Authentication
  fullName: Microsoft.Azure.Common.Authentication
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: true
  name: SecureString
  fullName: System.Security.SecureString
- uid: System.Security
  isExternal: false
  name: System.Security
  fullName: System.Security
