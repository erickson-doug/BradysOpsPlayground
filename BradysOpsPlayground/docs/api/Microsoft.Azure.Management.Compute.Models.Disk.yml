items:
- uid: Microsoft.Azure.Management.Compute.Models.Disk
  commentId: T:Microsoft.Azure.Management.Compute.Models.Disk
  id: Disk
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.Disk.#ctor
  - Microsoft.Azure.Management.Compute.Models.Disk.#ctor(System.String,Microsoft.Azure.Management.Compute.Models.VirtualHardDisk,System.String)
  - Microsoft.Azure.Management.Compute.Models.Disk.Caching
  - Microsoft.Azure.Management.Compute.Models.Disk.CreateOption
  - Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB
  - Microsoft.Azure.Management.Compute.Models.Disk.Name
  - Microsoft.Azure.Management.Compute.Models.Disk.SourceImage
  - Microsoft.Azure.Management.Compute.Models.Disk.VirtualHardDisk
  langs:
  - csharp
  - vb
  name: Disk
  fullName: Microsoft.Azure.Management.Compute.Models.Disk
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Disk
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nDescribes a disk.\r\n"
  example: []
  syntax:
    content: public class Disk
    content.vb: Public Class Disk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.Disk.Caching
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.Caching
  id: Caching
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: Caching
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.Caching
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Caching
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the caching type.\r\n"
  example: []
  syntax:
    content: >-
      public string Caching

      {

          get;

          set;

      }
    content.vb: Public Property Caching As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.CreateOption
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.CreateOption
  id: CreateOption
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: CreateOption
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.CreateOption
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateOption
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the create option.\r\n"
  example: []
  syntax:
    content: >-
      public string CreateOption

      {

          get;

          set;

      }
    content.vb: Public Property CreateOption As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB
  id: DiskSizeGB
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: DiskSizeGB
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.DiskSizeGB
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DiskSizeGB
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the initial disk size in GB for blank data\r\ndisks, and the new desired size for existing OS and Data disks.\r\n"
  example: []
  syntax:
    content: >-
      public int ? DiskSizeGB

      {

          get;

          set;

      }
    content.vb: Public Property DiskSizeGB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.Name
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.Name
  id: Name
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.Name
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the disk name.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.SourceImage
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.SourceImage
  id: SourceImage
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: SourceImage
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.SourceImage
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SourceImage
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the Source User Image VirtualHardDisk. This\r\nVirtualHardDisk will be copied before using it to attach to the\r\nVirtual Machine.If SourceImage is provided, the destination\r\nVirtualHardDisk should not exist.\r\n"
  example: []
  syntax:
    content: >-
      public VirtualHardDisk SourceImage

      {

          get;

          set;

      }
    content.vb: Public Property SourceImage As VirtualHardDisk
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.VirtualHardDisk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.VirtualHardDisk
  commentId: P:Microsoft.Azure.Management.Compute.Models.Disk.VirtualHardDisk
  id: VirtualHardDisk
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: VirtualHardDisk
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.VirtualHardDisk
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualHardDisk
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the Virtual Hard Disk.\r\n"
  example: []
  syntax:
    content: >-
      public VirtualHardDisk VirtualHardDisk

      {

          get;

          set;

      }
    content.vb: Public Property VirtualHardDisk As VirtualHardDisk
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.VirtualHardDisk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.Disk.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: Disk()
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.Disk()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
    startLine: 105
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the Disk class.\r\n"
  example: []
  syntax:
    content: public Disk()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.Disk.#ctor(System.String,Microsoft.Azure.Management.Compute.Models.VirtualHardDisk,System.String)
  commentId: M:Microsoft.Azure.Management.Compute.Models.Disk.#ctor(System.String,Microsoft.Azure.Management.Compute.Models.VirtualHardDisk,System.String)
  id: '#ctor(System.String,Microsoft.Azure.Management.Compute.Models.VirtualHardDisk,System.String)'
  parent: Microsoft.Azure.Management.Compute.Models.Disk
  langs:
  - csharp
  - vb
  name: Disk(String, VirtualHardDisk, String)
  fullName: Microsoft.Azure.Management.Compute.Models.Disk.Disk(System.String, Microsoft.Azure.Management.Compute.Models.VirtualHardDisk, System.String)
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/Disk.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the Disk class with required\r\narguments.\r\n"
  example: []
  syntax:
    content: public Disk(string name, VirtualHardDisk virtualHardDisk, string createOption)
    content.vb: Public Sub New(name As String, virtualHardDisk As VirtualHardDisk, createOption As String)
    parameters:
    - id: name
      type: System.String
    - id: virtualHardDisk
      type: Microsoft.Azure.Management.Compute.Models.VirtualHardDisk
    - id: createOption
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.Management.Compute.Models.VirtualHardDisk
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: VirtualHardDisk
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualHardDisk
