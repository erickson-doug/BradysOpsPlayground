items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration
  id: ExtensionCertificateConfiguration
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.#ctor(System.String)
  - Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.StoreLocation
  - Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.StoreName
  - Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.ThumbprintAlgorithm
  - Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.ThumbprintRequired
  langs:
  - csharp
  - vb
  name: ExtensionCertificateConfiguration
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ExtensionCertificateConfiguration
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Parameters of the the certificate for encrypting the private\r\nconfiguration data. Supported on WebRole or WorkerRole, but ignored on\r\nVmRole.\r\n"
  example: []
  syntax:
    content: public class ExtensionCertificateConfiguration
    content.vb: Public Class ExtensionCertificateConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.StoreLocation
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.StoreLocation
  id: StoreLocation
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration
  langs:
  - csharp
  - vb
  name: StoreLocation
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.StoreLocation
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StoreLocation
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Required for certificate declaration. The Windows\r\ncertificate store location to install the certificate for\r\nencryption, if required. Its value has to be 'LocalMachine' if\r\npresent.\r\n"
  example: []
  syntax:
    content: >-
      public string StoreLocation

      {

          get;

          set;

      }
    content.vb: Public Property StoreLocation As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.StoreName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.StoreName
  id: StoreName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration
  langs:
  - csharp
  - vb
  name: StoreName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.StoreName
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StoreName
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Optional. The Windows certificate store name to install\r\nthe certificate for encryption, if required. Its value has to be\r\n'My' if present.\r\n"
  example: []
  syntax:
    content: >-
      public string StoreName

      {

          get;

          set;

      }
    content.vb: Public Property StoreName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.ThumbprintAlgorithm
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.ThumbprintAlgorithm
  id: ThumbprintAlgorithm
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration
  langs:
  - csharp
  - vb
  name: ThumbprintAlgorithm
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.ThumbprintAlgorithm
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ThumbprintAlgorithm
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Optional. The thumbprint algorithm of the certificate for\r\nencryption, if required. Its value has to be 'sha1' if present.\r\n"
  example: []
  syntax:
    content: >-
      public string ThumbprintAlgorithm

      {

          get;

          set;

      }
    content.vb: Public Property ThumbprintAlgorithm As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.ThumbprintRequired
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.ThumbprintRequired
  id: ThumbprintRequired
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration
  langs:
  - csharp
  - vb
  name: ThumbprintRequired
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.ThumbprintRequired
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ThumbprintRequired
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Optional. Whether thumbprint is required for the\r\ncertificate for encryption or not. Its value has to be 'true' or\r\n'false' (case-sensitive) if present.\r\n"
  example: []
  syntax:
    content: >-
      public bool ? ThumbprintRequired

      {

          get;

          set;

      }
    content.vb: Public Property ThumbprintRequired As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration
  langs:
  - csharp
  - vb
  name: ExtensionCertificateConfiguration()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.ExtensionCertificateConfiguration()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the ExtensionCertificateConfiguration\r\nclass.\r\n"
  example: []
  syntax:
    content: public ExtensionCertificateConfiguration()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.#ctor(System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration
  langs:
  - csharp
  - vb
  name: ExtensionCertificateConfiguration(String)
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionCertificateConfiguration.ExtensionCertificateConfiguration(System.String)
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ExtensionCertificateConfiguration.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the ExtensionCertificateConfiguration\r\nclass with required arguments.\r\n"
  example: []
  syntax:
    content: public ExtensionCertificateConfiguration(string storeLocation)
    content.vb: Public Sub New(storeLocation As String)
    parameters:
    - id: storeLocation
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
