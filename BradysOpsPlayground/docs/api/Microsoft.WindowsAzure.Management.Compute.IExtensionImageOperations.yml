items:
- uid: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  commentId: T:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  id: IExtensionImageOperations
  parent: Microsoft.WindowsAzure.Management.Compute
  children:
  - Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginUnregisteringAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.UnregisterAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IExtensionImageOperations
  fullName: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  type: Interface
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IExtensionImageOperations
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nThe Service Management API includes operations for managing the service\r\nand virtual machine extension images in your publisher subscription.\r\n"
  example: []
  syntax:
    content: public interface IExtensionImageOperations
    content.vb: Public Interface IExtensionImageOperations
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters,System.Threading.CancellationToken)
  id: BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  langs:
  - csharp
  - vb
  name: BeginRegisteringAsync(ExtensionImageRegisterParameters, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginRegisteringAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginRegisteringAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nRegister a new extension. An extension is identified by the\r\ncombination of its ProviderNamespace and Type (case-sensitive\r\nstring). It is not allowed to register an extension with the same\r\nidentity (i.e. combination of ProviderNamespace and Type) of an\r\nalready-registered extension. To register new version of an\r\nexisting extension, the Update Extension API should be used.\r\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> BeginRegisteringAsync(ExtensionImageRegisterParameters parameters, CancellationToken cancellationToken)
    content.vb: Function BeginRegisteringAsync(parameters As ExtensionImageRegisterParameters, cancellationToken As CancellationToken) As Task(Of AzureOperationResponse)
    parameters:
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
      description: "\r\nParameters supplied to the Register Virtual Machine Extension Image\r\noperation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
- uid: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginUnregisteringAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginUnregisteringAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: BeginUnregisteringAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  langs:
  - csharp
  - vb
  name: BeginUnregisteringAsync(String, String, String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginUnregisteringAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUnregisteringAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUnregister a version of an extension that was previously registered\r\nusing either the Register Extension or Update Extension APIs. An\r\nextension version is identified by the combination of its\r\nProviderNamespace, Type and Version which are specified when\r\nregistering the extension. Unregistering is only allowed for\r\ninternal extensions, that is, the extensions for which the\r\nIsInternalExtension field is set to 'true' during registration or\r\nduring an update. There is a quota (15) on the number of\r\nextensions that can be registered per subscription. If your\r\nsubscription runs out of quota, you will wither need to unregister\r\nsome of the internal extensions or contact Azure (same email used\r\nto become a publisher)  to increase the quota.\r\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> BeginUnregisteringAsync(string providerNamespace, string type, string version, CancellationToken cancellationToken)
    content.vb: Function BeginUnregisteringAsync(providerNamespace As String, type As String, version As String, cancellationToken As CancellationToken) As Task(Of AzureOperationResponse)
    parameters:
    - id: providerNamespace
      type: System.String
      description: "\r\nThe provider namespace of the extension image to unregister.\r\n"
    - id: type
      type: System.String
      description: "\r\nThe type of the extension image to unregister.\r\n"
    - id: version
      type: System.String
      description: "\r\nThe version of the extension image to unregister.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
- uid: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters,System.Threading.CancellationToken)
  id: BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  langs:
  - csharp
  - vb
  name: BeginUpdatingAsync(ExtensionImageUpdateParameters, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.BeginUpdatingAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUpdatingAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
    startLine: 108
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUpdate a new extension. It is allowed to update an extension which\r\nhad already been registered with the same identity (i.e.\r\ncombination of ProviderNamespace and Type) but with different\r\nversion. It will fail if the extension to update has an identity\r\nthat has not been registered before, or there is already an\r\nextension with the same identity and same version.\r\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> BeginUpdatingAsync(ExtensionImageUpdateParameters parameters, CancellationToken cancellationToken)
    content.vb: Function BeginUpdatingAsync(parameters As ExtensionImageUpdateParameters, cancellationToken As CancellationToken) As Task(Of AzureOperationResponse)
    parameters:
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
      description: "\r\nParameters supplied to the Update Virtual Machine Extension Image\r\noperation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
- uid: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters,System.Threading.CancellationToken)
  id: RegisterAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  langs:
  - csharp
  - vb
  name: RegisterAsync(ExtensionImageRegisterParameters, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.RegisterAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RegisterAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
    startLine: 136
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nRegister a new extension. An extension is identified by the\r\ncombination of its ProviderNamespace and Type (case-sensitive\r\nstring). It is not allowed to register an extension with the same\r\nidentity (i.e. combination of ProviderNamespace and Type) of an\r\nalready-registered extension. To register new version of an\r\nexisting extension, the Update Extension API should be used.\r\n"
  example: []
  syntax:
    content: Task<OperationStatusResponse> RegisterAsync(ExtensionImageRegisterParameters parameters, CancellationToken cancellationToken)
    content.vb: Function RegisterAsync(parameters As ExtensionImageRegisterParameters, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)
    parameters:
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
      description: "\r\nParameters supplied to the Register Virtual Machine Extension Image\r\noperation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
- uid: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.UnregisterAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.UnregisterAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: UnregisterAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  langs:
  - csharp
  - vb
  name: UnregisterAsync(String, String, String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.UnregisterAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UnregisterAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
    startLine: 175
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUnregister a version of an extension that was previously registered\r\nusing either the Register Extension or Update Extension APIs. An\r\nextension version is identified by the combination of its\r\nProviderNamespace, Type and Version which are specified when\r\nregistering the extension. Unregistering is only allowed for\r\ninternal extensions, that is, the extensions for which the\r\nIsInternalExtension field is set to 'true' during registration or\r\nduring an update. There is a quota (15) on the number of\r\nextensions that can be registered per subscription. If your\r\nsubscription runs out of quota, you will wither need to unregister\r\nsome of the internal extensions or contact Azure (same email used\r\nto become a publisher)  to increase the quota.\r\n"
  example: []
  syntax:
    content: Task<OperationStatusResponse> UnregisterAsync(string providerNamespace, string type, string version, CancellationToken cancellationToken)
    content.vb: Function UnregisterAsync(providerNamespace As String, type As String, version As String, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)
    parameters:
    - id: providerNamespace
      type: System.String
      description: "\r\nThe provider namespace of the extension image to unregister.\r\n"
    - id: type
      type: System.String
      description: "\r\nThe type of the extension image to unregister.\r\n"
    - id: version
      type: System.String
      description: "\r\nThe version of the extension image to unregister.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
- uid: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters,System.Threading.CancellationToken)
  id: UpdateAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations
  langs:
  - csharp
  - vb
  name: UpdateAsync(ExtensionImageUpdateParameters, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.IExtensionImageOperations.UpdateAsync(Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdateAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/IExtensionImageOperations.cs
    startLine: 203
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUpdate a new extension. It is allowed to update an extension which\r\nhad already been registered with the same identity (i.e.\r\ncombination of ProviderNamespace and Type) but with different\r\nversion. It will fail if the extension to update has an identity\r\nthat has not been registered before, or there is already an\r\nextension with the same identity and same version.\r\n"
  example: []
  syntax:
    content: Task<OperationStatusResponse> UpdateAsync(ExtensionImageUpdateParameters parameters, CancellationToken cancellationToken)
    content.vb: Function UpdateAsync(parameters As ExtensionImageUpdateParameters, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)
    parameters:
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
      description: "\r\nParameters supplied to the Update Virtual Machine Extension Image\r\noperation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
references:
- uid: Microsoft.WindowsAzure.Management.Compute
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute
  fullName: Microsoft.WindowsAzure.Management.Compute
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: ExtensionImageRegisterParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageRegisterParameters
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: ExtensionImageUpdateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ExtensionImageUpdateParameters
- uid: System.Threading.Tasks.Task{OperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationStatusResponse>
  fullName: System.Threading.Tasks.Task<OperationStatusResponse>
  fullname.vb: System.Threading.Tasks.Task(Of OperationStatusResponse)
  name.vb: Task(Of OperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: )
    fullName: )
