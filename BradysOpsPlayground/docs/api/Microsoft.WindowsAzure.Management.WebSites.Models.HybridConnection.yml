items:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  commentId: T:Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  id: HybridConnection
  parent: Microsoft.WindowsAzure.Management.WebSites.Models
  children:
  - Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.#ctor
  - Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.BiztalkUri
  - Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.EntityConnectionString
  - Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.EntityName
  - Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.Hostname
  - Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.Port
  - Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.ResourceConnectionString
  - Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.ResourceType
  langs:
  - csharp
  - vb
  name: HybridConnection
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HybridConnection
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nDescribes a Biztalk Hybrid Connection for a web site.\r\n"
  example: []
  syntax:
    content: public class HybridConnection
    content.vb: Public Class HybridConnection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.BiztalkUri
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.BiztalkUri
  id: BiztalkUri
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  langs:
  - csharp
  - vb
  name: BiztalkUri
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.BiztalkUri
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BiztalkUri
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. The resource uri of the biztalk service. This field is\r\noptional; Without it the Azure Portal will not be able to display\r\nthe biztalk service for this connection properly.\r\n"
  example: []
  syntax:
    content: >-
      public string BiztalkUri

      {

          get;

          set;

      }
    content.vb: Public Property BiztalkUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.EntityConnectionString
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.EntityConnectionString
  id: EntityConnectionString
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  langs:
  - csharp
  - vb
  name: EntityConnectionString
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.EntityConnectionString
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EntityConnectionString
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. The biztalk application connection string for this\r\nconnection\r\n"
  example: []
  syntax:
    content: >-
      public string EntityConnectionString

      {

          get;

          set;

      }
    content.vb: Public Property EntityConnectionString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.EntityName
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.EntityName
  id: EntityName
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  langs:
  - csharp
  - vb
  name: EntityName
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.EntityName
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EntityName
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. The unique name for this connection\r\n"
  example: []
  syntax:
    content: >-
      public string EntityName

      {

          get;

          set;

      }
    content.vb: Public Property EntityName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.Hostname
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.Hostname
  id: Hostname
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  langs:
  - csharp
  - vb
  name: Hostname
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.Hostname
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Hostname
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. The hostname of the target on-premise resource\r\n"
  example: []
  syntax:
    content: >-
      public string Hostname

      {

          get;

          set;

      }
    content.vb: Public Property Hostname As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.Port
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.Port
  id: Port
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  langs:
  - csharp
  - vb
  name: Port
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.Port
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Port
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. The port of the target on-premise resource\r\n"
  example: []
  syntax:
    content: >-
      public int Port

      {

          get;

          set;

      }
    content.vb: Public Property Port As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.ResourceConnectionString
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.ResourceConnectionString
  id: ResourceConnectionString
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  langs:
  - csharp
  - vb
  name: ResourceConnectionString
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.ResourceConnectionString
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ResourceConnectionString
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. Reserved for future use. The connection string for the\r\nresource. This field is optional.\r\n"
  example: []
  syntax:
    content: >-
      public string ResourceConnectionString

      {

          get;

          set;

      }
    content.vb: Public Property ResourceConnectionString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.ResourceType
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.ResourceType
  id: ResourceType
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  langs:
  - csharp
  - vb
  name: ResourceType
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.ResourceType
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ResourceType
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
    startLine: 107
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. Reserved for future use. The type of resource to be\r\nconnected. This field is optional.\r\n"
  example: []
  syntax:
    content: >-
      public string ResourceType

      {

          get;

          set;

      }
    content.vb: Public Property ResourceType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection
  langs:
  - csharp
  - vb
  name: HybridConnection()
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.HybridConnection.HybridConnection()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/HybridConnection.cs
    startLine: 116
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nInitializes a new instance of the HybridConnection class.\r\n"
  example: []
  syntax:
    content: public HybridConnection()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.WebSites.Models
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
