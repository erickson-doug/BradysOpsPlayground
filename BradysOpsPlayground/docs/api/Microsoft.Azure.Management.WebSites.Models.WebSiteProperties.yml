items:
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  commentId: T:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  id: WebSiteProperties
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.#ctor
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.AdminEnabled
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.AvailabilityState
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Enabled
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.EnabledHostNames
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.HostNames
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.HostNameSslStates
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.LastModifiedTimeUtc
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Properties
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ProvisioningState
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.RepositorySiteName
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.RuntimeAvailabilityState
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ServerFarm
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ServerFarmId
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.SiteConfig
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Sku
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.State
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.TrafficManagerHostNames
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Uri
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.UsageState
  - Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSpace
  langs:
  - csharp
  - vb
  name: WebSiteProperties
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WebSiteProperties
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nRepresents the properties of a website.\r\n"
  example: []
  syntax:
    content: public class WebSiteProperties
    content.vb: Public Class WebSiteProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.AdminEnabled
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.AdminEnabled
  id: AdminEnabled
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: AdminEnabled
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.AdminEnabled
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AdminEnabled
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Read-only. This value is always true.\r\n"
  example: []
  syntax:
    content: >-
      public bool AdminEnabled

      {

          get;

          set;

      }
    content.vb: Public Property AdminEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.AvailabilityState
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.AvailabilityState
  id: AvailabilityState
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: AvailabilityState
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.AvailabilityState
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: AvailabilityState
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. The state of the availability of management information\r\nfor the site. Possible values are Normal or Limited. Normal means\r\nthat the site is running correctly and that management information\r\nfor the site is available. Limited means that only partial\r\nmanagement information for the site is available and that detailed\r\nsite information is unavailable.\r\n"
  example: []
  syntax:
    content: >-
      public WebSpaceAvailabilityState AvailabilityState

      {

          get;

          set;

      }
    content.vb: Public Property AvailabilityState As WebSpaceAvailabilityState
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.WebSpaceAvailabilityState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Enabled
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Enabled
  id: Enabled
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: Enabled
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Enabled
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Enabled
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. true if the site is enabled; otherwise, false. Setting\r\nthis value to false disables the site (takes the site off line).\r\n"
  example: []
  syntax:
    content: >-
      public bool Enabled

      {

          get;

          set;

      }
    content.vb: Public Property Enabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.EnabledHostNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.EnabledHostNames
  id: EnabledHostNames
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: EnabledHostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.EnabledHostNames
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: EnabledHostNames
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. An array of strings that contains enabled hostnames for\r\nthe site. By default, these are [SiteName].azurewebsites.net and\r\n[SiteName].scm.azurewebsites.net.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> EnabledHostNames

      {

          get;

          set;

      }
    content.vb: Public Property EnabledHostNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.HostNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.HostNames
  id: HostNames
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: HostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.HostNames
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HostNames
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. An array of strings that contains the public hostnames\r\nfor the site, including custom domains. Important: When you add a\r\ncustom domain in a PUT operation, be sure to include every\r\nhostname that you want for the web site. To delete a custom domain\r\nname in a PUT operation, include all of the hostnames for the site\r\nthat you want to keep, but leave out the one that you wangt to\r\ndelete.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> HostNames

      {

          get;

          set;

      }
    content.vb: Public Property HostNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.HostNameSslStates
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.HostNameSslStates
  id: HostNameSslStates
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: HostNameSslStates
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.HostNameSslStates
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HostNameSslStates
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. SSL states bound to the website.\r\n"
  example: []
  syntax:
    content: >-
      public IList<WebSiteProperties.WebSiteHostNameSslState> HostNameSslStates

      {

          get;

          set;

      }
    content.vb: Public Property HostNameSslStates As IList(Of WebSiteProperties.WebSiteHostNameSslState)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSiteHostNameSslState}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.LastModifiedTimeUtc
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.LastModifiedTimeUtc
  id: LastModifiedTimeUtc
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: LastModifiedTimeUtc
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.LastModifiedTimeUtc
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LastModifiedTimeUtc
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. A dateTime value that contains, in Coordinated Universal\r\nTime, the last time the web site was modified.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime LastModifiedTimeUtc

      {

          get;

          set;

      }
    content.vb: Public Property LastModifiedTimeUtc As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Properties
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Properties
  id: Properties
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Properties
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Properties
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Contains AppSettings, Metadata, and Properties for a site.\r\n"
  example: []
  syntax:
    content: >-
      public WebSiteProperties.SiteProperties Properties

      {

          get;

          set;

      }
    content.vb: Public Property Properties As WebSiteProperties.SiteProperties
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.SiteProperties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ProvisioningState
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ProvisioningState
  id: ProvisioningState
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: ProvisioningState
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ProvisioningState
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProvisioningState
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Gets or sets resource provisioning state.\r\n"
  example: []
  syntax:
    content: >-
      public string ProvisioningState

      {

          get;

          set;

      }
    content.vb: Public Property ProvisioningState As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.RepositorySiteName
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.RepositorySiteName
  id: RepositorySiteName
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: RepositorySiteName
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.RepositorySiteName
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RepositorySiteName
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. The name of the repository web site.\r\n"
  example: []
  syntax:
    content: >-
      public string RepositorySiteName

      {

          get;

          set;

      }
    content.vb: Public Property RepositorySiteName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.RuntimeAvailabilityState
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.RuntimeAvailabilityState
  id: RuntimeAvailabilityState
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: RuntimeAvailabilityState
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.RuntimeAvailabilityState
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RuntimeAvailabilityState
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Possible values are Normal, Degraded, or NotAvailable.\r\nNormal: the web site is running correctly. Degraded: the web site\r\nis running temporarily in a degraded mode (typically with less\r\nmemory and a shared instance.) Not Available: due to an unexpected\r\nissue, the site has been excluded from provisioning. This\r\ntypically occurs only for free sites.\r\n"
  example: []
  syntax:
    content: >-
      public WebSiteRuntimeAvailabilityState RuntimeAvailabilityState

      {

          get;

          set;

      }
    content.vb: Public Property RuntimeAvailabilityState As WebSiteRuntimeAvailabilityState
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.WebSiteRuntimeAvailabilityState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ServerFarm
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ServerFarm
  id: ServerFarm
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: ServerFarm
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ServerFarm
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServerFarm
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 181
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Name of a Web Hosting Plan (Server Farm) that this site\r\nbelongs to.\r\n"
  example: []
  syntax:
    content: >-
      public string ServerFarm

      {

          get;

          set;

      }
    content.vb: Public Property ServerFarm As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ServerFarmId
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ServerFarmId
  id: ServerFarmId
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: ServerFarmId
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.ServerFarmId
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServerFarmId
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. The fully qualified name of the serverFarm allowing for\r\nserver farms in different subscriptions and resource groups versus\r\nthe ServerFarm property that is just the farm name.\r\n"
  example: []
  syntax:
    content: >-
      public string ServerFarmId

      {

          get;

          set;

      }
    content.vb: Public Property ServerFarmId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.SiteConfig
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.SiteConfig
  id: SiteConfig
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: SiteConfig
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.SiteConfig
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SiteConfig
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 205
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Contains site configuration\r\n"
  example: []
  syntax:
    content: >-
      public WebSiteConfiguration SiteConfig

      {

          get;

          set;

      }
    content.vb: Public Property SiteConfig As WebSiteConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.WebSiteConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Sku
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Sku
  id: Sku
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: Sku
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Sku
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Sku
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 217
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. SKU of a Web Hosting Plan (Server Farm) that this site\r\nbelongs to.\r\n"
  example: []
  syntax:
    content: >-
      public SkuOptions Sku

      {

          get;

          set;

      }
    content.vb: Public Property Sku As SkuOptions
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.SkuOptions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.State
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.State
  id: State
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: State
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.State
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: State
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 229
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. A string that describes the state of the web site.\r\nPossible values are Stopped or Running.\r\n"
  example: []
  syntax:
    content: >-
      public WebSiteState State

      {

          get;

          set;

      }
    content.vb: Public Property State As WebSiteState
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.WebSiteState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.TrafficManagerHostNames
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.TrafficManagerHostNames
  id: TrafficManagerHostNames
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: TrafficManagerHostNames
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.TrafficManagerHostNames
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TrafficManagerHostNames
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 241
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. An array of strings that contain the traffic manager\r\nhostnames.\r\n"
  example: []
  syntax:
    content: >-
      public IList<string> TrafficManagerHostNames

      {

          get;

          set;

      }
    content.vb: Public Property TrafficManagerHostNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Uri
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Uri
  id: Uri
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.Uri
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Uri
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 253
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Direct URL to the web site endpoint on Windows Azure Web\r\nSites, including the subscription ID, webspace name, and site name.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Uri

      {

          get;

          set;

      }
    content.vb: Public Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.UsageState
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.UsageState
  id: UsageState
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: UsageState
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.UsageState
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UsageState
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 266
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Possible values are Normal or Exceeded. If any quota is\r\nexceeded, the UsageState value changes to Exceeded and the site\r\ngoes off line.\r\n"
  example: []
  syntax:
    content: >-
      public WebSiteUsageState UsageState

      {

          get;

          set;

      }
    content.vb: Public Property UsageState As WebSiteUsageState
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.WebSiteUsageState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSpace
  commentId: P:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSpace
  id: WebSpace
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: WebSpace
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSpace
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: WebSpace
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 278
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. The name of the webspace in which the web site is\r\nlocated. This property is read-only.\r\n"
  example: []
  syntax:
    content: >-
      public string WebSpace

      {

          get;

          set;

      }
    content.vb: Public Property WebSpace As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties
  langs:
  - csharp
  - vb
  name: WebSiteProperties()
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSiteProperties()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/WebSiteProperties.cs
    startLine: 287
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nInitializes a new instance of the WebSiteProperties class.\r\n"
  example: []
  syntax:
    content: public WebSiteProperties()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Management.WebSites.Models.WebSpaceAvailabilityState
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: WebSpaceAvailabilityState
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSpaceAvailabilityState
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IList<T>
  fullName: System.Collections.Generic.IList<T>
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSiteHostNameSslState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<WebSiteProperties.WebSiteHostNameSslState>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSiteHostNameSslState>
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSiteHostNameSslState)
  name.vb: IList(Of WebSiteProperties.WebSiteHostNameSslState)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSiteHostNameSslState
    name: WebSiteProperties.WebSiteHostNameSslState
    fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSiteHostNameSslState
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSiteHostNameSslState
    name: WebSiteProperties.WebSiteHostNameSslState
    fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.WebSiteHostNameSslState
  - name: )
    fullName: )
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.SiteProperties
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: WebSiteProperties.SiteProperties
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteProperties.SiteProperties
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteRuntimeAvailabilityState
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: WebSiteRuntimeAvailabilityState
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteRuntimeAvailabilityState
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteConfiguration
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: WebSiteConfiguration
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteConfiguration
- uid: Microsoft.Azure.Management.WebSites.Models.SkuOptions
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: SkuOptions
  fullName: Microsoft.Azure.Management.WebSites.Models.SkuOptions
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteState
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: WebSiteState
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteState
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.Azure.Management.WebSites.Models.WebSiteUsageState
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: WebSiteUsageState
  fullName: Microsoft.Azure.Management.WebSites.Models.WebSiteUsageState
