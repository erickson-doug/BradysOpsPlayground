items:
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  commentId: T:Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  id: BackupSchedule
  parent: Microsoft.Azure.Management.WebSites.Models
  children:
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays
  - Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime
  langs:
  - csharp
  - vb
  name: BackupSchedule
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BackupSchedule
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nDefines a backup schedule for a website.\r\n"
  example: []
  syntax:
    content: public class BackupSchedule
    content.vb: Public Class BackupSchedule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval
  id: FrequencyInterval
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: FrequencyInterval
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyInterval
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FrequencyInterval
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. The frequency of backups.\r\n"
  example: []
  syntax:
    content: >-
      public int FrequencyInterval

      {

          get;

          set;

      }
    content.vb: Public Property FrequencyInterval As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit
  id: FrequencyUnit
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: FrequencyUnit
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.FrequencyUnit
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: FrequencyUnit
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Units for FrequencyInterval - e.g. Day or Hour\r\n"
  example: []
  syntax:
    content: >-
      public FrequencyUnit FrequencyUnit

      {

          get;

          set;

      }
    content.vb: Public Property FrequencyUnit As FrequencyUnit
    parameters: []
    return:
      type: Microsoft.Azure.Management.WebSites.Models.FrequencyUnit
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup
  id: KeepAtLeastOneBackup
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: KeepAtLeastOneBackup
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.KeepAtLeastOneBackup
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: KeepAtLeastOneBackup
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Retention policy deletes backups after predefined number\r\nof days. If this is true, there will be always at least one backup\r\nleft. regardless of the policy. If false, all backups can be\r\ndeleted.\r\n"
  example: []
  syntax:
    content: >-
      public bool KeepAtLeastOneBackup

      {

          get;

          set;

      }
    content.vb: Public Property KeepAtLeastOneBackup As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime
  id: LastExecutionTime
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: LastExecutionTime
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.LastExecutionTime
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LastExecutionTime
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. The last time when this schedule started a backup, Null\r\nif didn't start anything yet.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? LastExecutionTime

      {

          get;

          set;

      }
    content.vb: Public Property LastExecutionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays
  id: RetentionPeriodInDays
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: RetentionPeriodInDays
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.RetentionPeriodInDays
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RetentionPeriodInDays
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. Backups older N days (N defined by this value) will be\r\nautomatically deleted.\r\n"
  example: []
  syntax:
    content: >-
      public int RetentionPeriodInDays

      {

          get;

          set;

      }
    content.vb: Public Property RetentionPeriodInDays As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime
  commentId: P:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime
  id: StartTime
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: StartTime
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.StartTime
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StartTime
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nOptional. When this schedule should start backing up the site. Null\r\nmeans immediately.\r\n"
  example: []
  syntax:
    content: >-
      public DateTime? StartTime

      {

          get;

          set;

      }
    content.vb: Public Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor
  commentId: M:Microsoft.Azure.Management.WebSites.Models.BackupSchedule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.WebSites.Models.BackupSchedule
  langs:
  - csharp
  - vb
  name: BackupSchedule()
  fullName: Microsoft.Azure.Management.WebSites.Models.BackupSchedule.BackupSchedule()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ResourceManagement/WebSite/WebSiteManagement/Generated/Models/BackupSchedule.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.WebSites
  namespace: Microsoft.Azure.Management.WebSites.Models
  summary: "\r\nInitializes a new instance of the BackupSchedule class.\r\n"
  example: []
  syntax:
    content: public BackupSchedule()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.Azure.Management.WebSites.Models
  fullName: Microsoft.Azure.Management.WebSites.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Management.WebSites.Models.FrequencyUnit
  parent: Microsoft.Azure.Management.WebSites.Models
  isExternal: false
  name: FrequencyUnit
  fullName: Microsoft.Azure.Management.WebSites.Models.FrequencyUnit
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
