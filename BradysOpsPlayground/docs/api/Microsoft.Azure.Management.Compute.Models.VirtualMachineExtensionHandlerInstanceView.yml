items:
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  commentId: T:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  id: VirtualMachineExtensionHandlerInstanceView
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionHandlerInstanceView
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineExtensionHandlerInstanceView
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nThe instance view of a virtual machine extension handler.\r\n"
  example: []
  syntax:
    content: public class VirtualMachineExtensionHandlerInstanceView
    content.vb: Public Class VirtualMachineExtensionHandlerInstanceView
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status
  id: Status
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  langs:
  - csharp
  - vb
  name: Status
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Status
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Status
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the extension handler status.\r\n"
  example: []
  syntax:
    content: >-
      public InstanceViewStatus Status

      {

          get;

          set;

      }
    content.vb: Public Property Status As InstanceViewStatus
    parameters: []
    return:
      type: Microsoft.Azure.Management.Compute.Models.InstanceViewStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type
  id: Type
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  langs:
  - csharp
  - vb
  name: Type
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.Type
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Type
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets full type of the extension handler which\r\nincludes both publisher and type.\r\n"
  example: []
  syntax:
    content: >-
      public string Type

      {

          get;

          set;

      }
    content.vb: Public Property Type As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  id: TypeHandlerVersion
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  langs:
  - csharp
  - vb
  name: TypeHandlerVersion
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.TypeHandlerVersion
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: TypeHandlerVersion
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the type version of the extension handler.\r\n"
  example: []
  syntax:
    content: >-
      public string TypeHandlerVersion

      {

          get;

          set;

      }
    content.vb: Public Property TypeHandlerVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionHandlerInstanceView()
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionHandlerInstanceView.VirtualMachineExtensionHandlerInstanceView()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionHandlerInstanceView.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the\r\nVirtualMachineExtensionHandlerInstanceView class.\r\n"
  example: []
  syntax:
    content: public VirtualMachineExtensionHandlerInstanceView()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.Management.Compute.Models.InstanceViewStatus
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: InstanceViewStatus
  fullName: Microsoft.Azure.Management.Compute.Models.InstanceViewStatus
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
