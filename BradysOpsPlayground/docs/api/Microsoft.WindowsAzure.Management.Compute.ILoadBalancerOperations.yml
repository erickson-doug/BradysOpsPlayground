items:
- uid: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  commentId: T:Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  id: ILoadBalancerOperations
  parent: Microsoft.WindowsAzure.Management.Compute
  children:
  - Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginCreatingAsync(System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginDeletingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginUpdatingAsync(System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.CreateAsync(System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.UpdateAsync(System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ILoadBalancerOperations
  fullName: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  type: Interface
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ILoadBalancerOperations
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nThe Compute Management API includes operations for managing the load\r\nbalancers for your subscription.\r\n"
  example: []
  syntax:
    content: public interface ILoadBalancerOperations
    content.vb: Public Interface ILoadBalancerOperations
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginCreatingAsync(System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginCreatingAsync(System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters,System.Threading.CancellationToken)
  id: BeginCreatingAsync(System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  langs:
  - csharp
  - vb
  name: BeginCreatingAsync(String, String, LoadBalancerCreateParameters, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginCreatingAsync(System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginCreatingAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nAdd an internal load balancer to a an existing deployment. When\r\nused by an input endpoint, the internal load balancer will provide\r\nan additional private VIP that can be used for load balancing to\r\nthe roles in this deployment.\r\n"
  example: []
  syntax:
    content: Task<OperationStatusResponse> BeginCreatingAsync(string serviceName, string deploymentName, LoadBalancerCreateParameters parameters, CancellationToken cancellationToken)
    content.vb: Function BeginCreatingAsync(serviceName As String, deploymentName As String, parameters As LoadBalancerCreateParameters, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)
    parameters:
    - id: serviceName
      type: System.String
      description: "\r\nThe name of the service.\r\n"
    - id: deploymentName
      type: System.String
      description: "\r\nThe name of the deployment.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
      description: "\r\nParameters supplied to the Create Load Balancer operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
- uid: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginDeletingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginDeletingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: BeginDeletingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  langs:
  - csharp
  - vb
  name: BeginDeletingAsync(String, String, String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginDeletingAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginDeletingAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
    startLine: 93
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nDelete an internal load balancer from the deployment.\r\n"
  example: []
  syntax:
    content: Task<OperationStatusResponse> BeginDeletingAsync(string serviceName, string deploymentName, string loadBalancerName, CancellationToken cancellationToken)
    content.vb: Function BeginDeletingAsync(serviceName As String, deploymentName As String, loadBalancerName As String, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)
    parameters:
    - id: serviceName
      type: System.String
      description: "\r\nThe name of the service.\r\n"
    - id: deploymentName
      type: System.String
      description: "\r\nThe name of the deployment.\r\n"
    - id: loadBalancerName
      type: System.String
      description: "\r\nThe name of the load balancer.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
- uid: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginUpdatingAsync(System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginUpdatingAsync(System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters,System.Threading.CancellationToken)
  id: BeginUpdatingAsync(System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  langs:
  - csharp
  - vb
  name: BeginUpdatingAsync(String, String, String, LoadBalancerUpdateParameters, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.BeginUpdatingAsync(System.String, System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: BeginUpdatingAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
    startLine: 125
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUpdates an internal load balancer associated with an existing\r\ndeployment.\r\n"
  example: []
  syntax:
    content: Task<OperationStatusResponse> BeginUpdatingAsync(string serviceName, string deploymentName, string loadBalancerName, LoadBalancerUpdateParameters parameters, CancellationToken cancellationToken)
    content.vb: Function BeginUpdatingAsync(serviceName As String, deploymentName As String, loadBalancerName As String, parameters As LoadBalancerUpdateParameters, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)
    parameters:
    - id: serviceName
      type: System.String
      description: "\r\nThe name of the service.\r\n"
    - id: deploymentName
      type: System.String
      description: "\r\nThe name of the deployment.\r\n"
    - id: loadBalancerName
      type: System.String
      description: "\r\nThe name of the loadBalancer.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
      description: "\r\nParameters supplied to the Update Load Balancer operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
- uid: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.CreateAsync(System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.CreateAsync(System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters,System.Threading.CancellationToken)
  id: CreateAsync(System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  langs:
  - csharp
  - vb
  name: CreateAsync(String, String, LoadBalancerCreateParameters, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.CreateAsync(System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CreateAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
    startLine: 156
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nAdd an internal load balancer to a an existing deployment. When\r\nused by an input endpoint, the internal load balancer will provide\r\nan additional private VIP that can be used for load balancing to\r\nthe roles in this deployment.\r\n"
  example: []
  syntax:
    content: Task<OperationStatusResponse> CreateAsync(string serviceName, string deploymentName, LoadBalancerCreateParameters parameters, CancellationToken cancellationToken)
    content.vb: Function CreateAsync(serviceName As String, deploymentName As String, parameters As LoadBalancerCreateParameters, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)
    parameters:
    - id: serviceName
      type: System.String
      description: "\r\nThe name of the service.\r\n"
    - id: deploymentName
      type: System.String
      description: "\r\nThe name of the deployment.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
      description: "\r\nParameters supplied to the Create Load Balancer operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
- uid: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  langs:
  - csharp
  - vb
  name: DeleteAsync(String, String, String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.DeleteAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
    startLine: 177
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nDelete an internal load balancer from the deployment.\r\n"
  example: []
  syntax:
    content: Task<AzureOperationResponse> DeleteAsync(string serviceName, string deploymentName, string loadBalancerName, CancellationToken cancellationToken)
    content.vb: Function DeleteAsync(serviceName As String, deploymentName As String, loadBalancerName As String, cancellationToken As CancellationToken) As Task(Of AzureOperationResponse)
    parameters:
    - id: serviceName
      type: System.String
      description: "\r\nThe name of the service.\r\n"
    - id: deploymentName
      type: System.String
      description: "\r\nThe name of the deployment.\r\n"
    - id: loadBalancerName
      type: System.String
      description: "\r\nThe name of the load balancer.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
- uid: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.UpdateAsync(System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.UpdateAsync(System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters,System.Threading.CancellationToken)
  id: UpdateAsync(System.String,System.String,System.String,Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations
  langs:
  - csharp
  - vb
  name: UpdateAsync(String, String, String, LoadBalancerUpdateParameters, CancellationToken)
  fullName: Microsoft.WindowsAzure.Management.Compute.ILoadBalancerOperations.UpdateAsync(System.String, System.String, System.String, Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: UpdateAsync
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/ILoadBalancerOperations.cs
    startLine: 209
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute
  summary: "\r\nUpdates an internal load balancer associated with an existing\r\ndeployment.\r\n"
  example: []
  syntax:
    content: Task<OperationStatusResponse> UpdateAsync(string serviceName, string deploymentName, string loadBalancerName, LoadBalancerUpdateParameters parameters, CancellationToken cancellationToken)
    content.vb: Function UpdateAsync(serviceName As String, deploymentName As String, loadBalancerName As String, parameters As LoadBalancerUpdateParameters, cancellationToken As CancellationToken) As Task(Of OperationStatusResponse)
    parameters:
    - id: serviceName
      type: System.String
      description: "\r\nThe name of the service.\r\n"
    - id: deploymentName
      type: System.String
      description: "\r\nThe name of the deployment.\r\n"
    - id: loadBalancerName
      type: System.String
      description: "\r\nThe name of the loadBalancer.\r\n"
    - id: parameters
      type: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
      description: "\r\nParameters supplied to the Update Load Balancer operation.\r\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\r\nCancellation token.\r\n"
    return:
      type: System.Threading.Tasks.Task{OperationStatusResponse}
      description: "\r\nThe response body contains the status of the specified asynchronous\r\noperation, indicating whether it has succeeded, is inprogress, or\r\nhas failed. Note that this status is distinct from the HTTP status\r\ncode returned for the Get Operation Status operation itself. If\r\nthe asynchronous operation succeeded, the response body includes\r\nthe HTTP status code for the successful request. If the\r\nasynchronous operation failed, the response body includes the HTTP\r\nstatus code for the failed request and error information regarding\r\nthe failure.\r\n"
references:
- uid: Microsoft.WindowsAzure.Management.Compute
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute
  fullName: Microsoft.WindowsAzure.Management.Compute
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: LoadBalancerCreateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerCreateParameters
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{OperationStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationStatusResponse>
  fullName: System.Threading.Tasks.Task<OperationStatusResponse>
  fullname.vb: System.Threading.Tasks.Task(Of OperationStatusResponse)
  name.vb: Task(Of OperationStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: OperationStatusResponse
    name: OperationStatusResponse
    fullName: OperationStatusResponse
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: LoadBalancerUpdateParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.LoadBalancerUpdateParameters
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    fullName: )
