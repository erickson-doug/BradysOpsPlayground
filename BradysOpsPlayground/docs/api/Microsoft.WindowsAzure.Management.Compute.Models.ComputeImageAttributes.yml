items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes
  id: ComputeImageAttributes
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.#ctor(System.String,System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Offer
  - Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Sku
  - Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Version
  langs:
  - csharp
  - vb
  name: ComputeImageAttributes
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ComputeImageAttributes
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nThe compute image attributes\r\n"
  example: []
  syntax:
    content: public class ComputeImageAttributes
    content.vb: Public Class ComputeImageAttributes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Offer
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Offer
  id: Offer
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes
  langs:
  - csharp
  - vb
  name: Offer
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Offer
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Offer
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the publisher defined name of the offer.The\r\nallowed characters are uppercase or lowercase letters, digit,\r\nhypen(-), period (.).The maximum allowed length is 64 characters.\r\n"
  example: []
  syntax:
    content: >-
      public string Offer

      {

          get;

          set;

      }
    content.vb: Public Property Offer As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Sku
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Sku
  id: Sku
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes
  langs:
  - csharp
  - vb
  name: Sku
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Sku
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Sku
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the publisher defined name of the Sku. The\r\nallowed characters are uppercase or lowercase letters, digit,\r\nhypen(-), period (.). The maximum allowed length is 64 characters.\r\n"
  example: []
  syntax:
    content: >-
      public string Sku

      {

          get;

          set;

      }
    content.vb: Public Property Sku As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Version
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Version
  id: Version
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes
  langs:
  - csharp
  - vb
  name: Version
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.Version
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Version
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  syntax:
    content: >-
      public string Version

      {

          get;

          set;

      }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes
  langs:
  - csharp
  - vb
  name: ComputeImageAttributes()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.ComputeImageAttributes()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
    startLine: 75
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the ComputeImageAttributes class.\r\n"
  example: []
  syntax:
    content: public ComputeImageAttributes()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes
  langs:
  - csharp
  - vb
  name: ComputeImageAttributes(String, String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ComputeImageAttributes.ComputeImageAttributes(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/ComputeImageAttributes.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the ComputeImageAttributes class with\r\nrequired arguments.\r\n"
  example: []
  syntax:
    content: public ComputeImageAttributes(string offer, string sku, string version)
    content.vb: Public Sub New(offer As String, sku As String, version As String)
    parameters:
    - id: offer
      type: System.String
    - id: sku
      type: System.String
    - id: version
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
