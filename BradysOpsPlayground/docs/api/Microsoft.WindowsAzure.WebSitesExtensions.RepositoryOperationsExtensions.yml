items:
- uid: Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions
  commentId: T:Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions
  id: RepositoryOperationsExtensions
  parent: Microsoft.WindowsAzure.WebSitesExtensions
  children:
  - Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions.Delete(Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations)
  - Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations)
  langs:
  - csharp
  - vb
  name: RepositoryOperationsExtensions
  fullName: Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/RepositoryOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RepositoryOperationsExtensions
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/RepositoryOperationsExtensions.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.WebSitesExtensions
  summary: "\r\nThe websites extensions client manages the web sites deployments, web\r\njobs and other extensions.\r\n"
  example: []
  syntax:
    content: public class RepositoryOperationsExtensions
    content.vb: Public Class RepositoryOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions.Delete(Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations)
  commentId: M:Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions.Delete(Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations)
  id: Delete(Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations)
  parent: Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IRepositoryOperations)
  fullName: Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions.Delete(Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/RepositoryOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Delete
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/RepositoryOperationsExtensions.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.WebSitesExtensions
  summary: "\r\nDeletes the repository.\r\n"
  example: []
  syntax:
    content: public static AzureOperationResponse Delete(IRepositoryOperations operations)
    content.vb: Public Shared Function Delete(operations As IRepositoryOperations) As AzureOperationResponse
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations.\r\n"
    return:
      type: AzureOperationResponse
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations)
  commentId: M:Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations)
  id: DeleteAsync(Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations)
  parent: Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IRepositoryOperations)
  fullName: Microsoft.WindowsAzure.WebSitesExtensions.RepositoryOperationsExtensions.DeleteAsync(Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/RepositoryOperationsExtensions.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DeleteAsync
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/RepositoryOperationsExtensions.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.WebSitesExtensions
  summary: "\r\nDeletes the repository.\r\n"
  example: []
  syntax:
    content: public static Task<AzureOperationResponse> DeleteAsync(IRepositoryOperations operations)
    content.vb: Public Shared Function DeleteAsync(operations As IRepositoryOperations) As Task(Of AzureOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations
      description: "\r\nReference to the\r\nMicrosoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations.\r\n"
    return:
      type: System.Threading.Tasks.Task{AzureOperationResponse}
      description: "\r\nA standard service response including an HTTP status code and\r\nrequest ID.\r\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.WebSitesExtensions
  isExternal: false
  name: Microsoft.WindowsAzure.WebSitesExtensions
  fullName: Microsoft.WindowsAzure.WebSitesExtensions
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations
  parent: Microsoft.WindowsAzure.WebSitesExtensions
  isExternal: false
  name: IRepositoryOperations
  fullName: Microsoft.WindowsAzure.WebSitesExtensions.IRepositoryOperations
- uid: AzureOperationResponse
  isExternal: true
  name: AzureOperationResponse
  fullName: AzureOperationResponse
- uid: System.Threading.Tasks.Task{AzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AzureOperationResponse>
  fullName: System.Threading.Tasks.Task<AzureOperationResponse>
  fullname.vb: System.Threading.Tasks.Task(Of AzureOperationResponse)
  name.vb: Task(Of AzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: AzureOperationResponse
    name: AzureOperationResponse
    fullName: AzureOperationResponse
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
