items:
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  commentId: T:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  id: VirtualMachineSize
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OSDiskSizeInMB
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB
  langs:
  - csharp
  - vb
  name: VirtualMachineSize
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineSize
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nDescribes the properties of a VM size.\r\n"
  example: []
  syntax:
    content: public class VirtualMachineSize
    content.vb: Public Class VirtualMachineSize
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount
  id: MaxDataDiskCount
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: MaxDataDiskCount
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MaxDataDiskCount
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MaxDataDiskCount
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the Maximum number of data disks allowed by\r\na VM size.\r\n"
  example: []
  syntax:
    content: >-
      public int ? MaxDataDiskCount

      {

          get;

          set;

      }
    content.vb: Public Property MaxDataDiskCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB
  id: MemoryInMB
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: MemoryInMB
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.MemoryInMB
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MemoryInMB
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the Memory size supported by a VM size.\r\n"
  example: []
  syntax:
    content: >-
      public int MemoryInMB

      {

          get;

          set;

      }
    content.vb: Public Property MemoryInMB As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name
  id: Name
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.Name
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the VM size name.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores
  id: NumberOfCores
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: NumberOfCores
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.NumberOfCores
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: NumberOfCores
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the Number of cores supported by a VM size.\r\n"
  example: []
  syntax:
    content: >-
      public int NumberOfCores

      {

          get;

          set;

      }
    content.vb: Public Property NumberOfCores As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OSDiskSizeInMB
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OSDiskSizeInMB
  id: OSDiskSizeInMB
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: OSDiskSizeInMB
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.OSDiskSizeInMB
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OSDiskSizeInMB
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the OS disk size allowed by a VM size.\r\n"
  example: []
  syntax:
    content: >-
      public int OSDiskSizeInMB

      {

          get;

          set;

      }
    content.vb: Public Property OSDiskSizeInMB As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB
  id: ResourceDiskSizeInMB
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: ResourceDiskSizeInMB
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.ResourceDiskSizeInMB
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ResourceDiskSizeInMB
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the Resource disk size allowed by a VM size.\r\n"
  example: []
  syntax:
    content: >-
      public int ResourceDiskSizeInMB

      {

          get;

          set;

      }
    content.vb: Public Property ResourceDiskSizeInMB As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: VirtualMachineSize()
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineSize.VirtualMachineSize()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineSize.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the VirtualMachineSize class.\r\n"
  example: []
  syntax:
    content: public VirtualMachineSize()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
