items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters
  id: PrepareDeploymentMigrationParameters
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.DestinationVirtualNetwork
  - Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.ResourceGroupName
  - Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.SubNetName
  - Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.VirtualNetworkName
  langs:
  - csharp
  - vb
  name: PrepareDeploymentMigrationParameters
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: PrepareDeploymentMigrationParameters
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nParameters supplied to Prepare Deployment Migration Operation.\r\n"
  example: []
  syntax:
    content: public class PrepareDeploymentMigrationParameters
    content.vb: Public Class PrepareDeploymentMigrationParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.DestinationVirtualNetwork
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.DestinationVirtualNetwork
  id: DestinationVirtualNetwork
  parent: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters
  langs:
  - csharp
  - vb
  name: DestinationVirtualNetwork
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.DestinationVirtualNetwork
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DestinationVirtualNetwork
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Destination Virtual Network type for migration.Accepted\r\nvalues are Default, New, Existing.\r\n"
  example: []
  syntax:
    content: >-
      public string DestinationVirtualNetwork

      {

          get;

          set;

      }
    content.vb: Public Property DestinationVirtualNetwork As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.ResourceGroupName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.ResourceGroupName
  id: ResourceGroupName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters
  langs:
  - csharp
  - vb
  name: ResourceGroupName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.ResourceGroupName
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ResourceGroupName
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Name of the resource group for migration.\r\n"
  example: []
  syntax:
    content: >-
      public string ResourceGroupName

      {

          get;

          set;

      }
    content.vb: Public Property ResourceGroupName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.SubNetName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.SubNetName
  id: SubNetName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters
  langs:
  - csharp
  - vb
  name: SubNetName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.SubNetName
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SubNetName
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Subnet name for migration.\r\n"
  example: []
  syntax:
    content: >-
      public string SubNetName

      {

          get;

          set;

      }
    content.vb: Public Property SubNetName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.VirtualNetworkName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.VirtualNetworkName
  id: VirtualNetworkName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters
  langs:
  - csharp
  - vb
  name: VirtualNetworkName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.VirtualNetworkName
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualNetworkName
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Name of the Virtual Network for migration.\r\n"
  example: []
  syntax:
    content: >-
      public string VirtualNetworkName

      {

          get;

          set;

      }
    content.vb: Public Property VirtualNetworkName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters
  langs:
  - csharp
  - vb
  name: PrepareDeploymentMigrationParameters()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.PrepareDeploymentMigrationParameters.PrepareDeploymentMigrationParameters()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/PrepareDeploymentMigrationParameters.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the\r\nPrepareDeploymentMigrationParameters class.\r\n"
  example: []
  syntax:
    content: public PrepareDeploymentMigrationParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
