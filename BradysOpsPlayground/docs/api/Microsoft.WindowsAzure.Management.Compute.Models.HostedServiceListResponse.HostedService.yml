items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService
  id: HostedServiceListResponse.HostedService
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.ComputeCapabilities
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.Properties
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.ServiceName
  - Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.Uri
  langs:
  - csharp
  - vb
  name: HostedServiceListResponse.HostedService
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HostedService
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nA hosted service associated with your subscription.\r\n"
  example: []
  syntax:
    content: public class HostedService
    content.vb: Public Class HostedService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.ComputeCapabilities
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.ComputeCapabilities
  id: ComputeCapabilities
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService
  langs:
  - csharp
  - vb
  name: ComputeCapabilities
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.ComputeCapabilities
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ComputeCapabilities
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The compute capabilities in this hosted service.\r\n"
  example: []
  syntax:
    content: >-
      public ComputeCapabilities ComputeCapabilities

      {

          get;

          set;

      }
    content.vb: Public Property ComputeCapabilities As ComputeCapabilities
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.ComputeCapabilities
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.Properties
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService
  langs:
  - csharp
  - vb
  name: Properties
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.Properties
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Properties
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The properties that are assigned to the cloud service.\r\n"
  example: []
  syntax:
    content: >-
      public HostedServiceProperties Properties

      {

          get;

          set;

      }
    content.vb: Public Property Properties As HostedServiceProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.ServiceName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.ServiceName
  id: ServiceName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService
  langs:
  - csharp
  - vb
  name: ServiceName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.ServiceName
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ServiceName
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
    startLine: 106
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The name of the cloud service. This name is the DNS\r\nprefix name and can be used to access the cloud service. For\r\nexample, if the cloud service name is MyService you could\r\naccess the cloud service by calling:\r\nhttp://MyService.cloudapp.net.\r\n"
  example: []
  syntax:
    content: >-
      public string ServiceName

      {

          get;

          set;

      }
    content.vb: Public Property ServiceName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.Uri
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService
  langs:
  - csharp
  - vb
  name: Uri
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.Uri
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Uri
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
    startLine: 119
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. The Service Management API request URI used to\r\nperform List Hosted Service Properties requests against the\r\ncloud service.\r\n"
  example: []
  syntax:
    content: >-
      public Uri Uri

      {

          get;

          set;

      }
    content.vb: Public Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService
  langs:
  - csharp
  - vb
  name: HostedService()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceListResponse.HostedService.HostedService()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/HostedServiceListResponse.cs
    startLine: 128
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the HostedService class.\r\n"
  example: []
  syntax:
    content: public HostedService()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.WindowsAzure.Management.Compute.Models.ComputeCapabilities
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: ComputeCapabilities
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.ComputeCapabilities
- uid: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: HostedServiceProperties
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.HostedServiceProperties
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
