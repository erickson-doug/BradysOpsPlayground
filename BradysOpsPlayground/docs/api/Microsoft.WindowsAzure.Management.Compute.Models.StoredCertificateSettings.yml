items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings
  id: StoredCertificateSettings
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.StoreName
  - Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.Thumbprint
  langs:
  - csharp
  - vb
  name: StoredCertificateSettings
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/StoredCertificateSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StoredCertificateSettings
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/StoredCertificateSettings.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nService certificates with which to provision the new virtual machine.\r\nStored certificate settings reference certificates that already exist\r\nin the Azure hosted service. Prior to configuring the stored\r\ncertificates for the virtual machine, you must call the Add Service\r\nCertificate operation or add the certificate via the Azure Management\r\nportal.\r\n"
  example: []
  syntax:
    content: public class StoredCertificateSettings
    content.vb: Public Class StoredCertificateSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.StoreName
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.StoreName
  id: StoreName
  parent: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings
  langs:
  - csharp
  - vb
  name: StoreName
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.StoreName
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/StoredCertificateSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: StoreName
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/StoredCertificateSettings.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Specifies the name of the certificate store from which to\r\nretrieve certificates.  For example, \"My\".\r\n"
  example: []
  syntax:
    content: >-
      public string StoreName

      {

          get;

          set;

      }
    content.vb: Public Property StoreName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.Thumbprint
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.Thumbprint
  id: Thumbprint
  parent: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings
  langs:
  - csharp
  - vb
  name: Thumbprint
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.Thumbprint
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/StoredCertificateSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Thumbprint
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/StoredCertificateSettings.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nRequired. Specifies the thumbprint of the certificate to be\r\nprovisioned. The thumbprint must specify an existing service\r\ncertificate.\r\n"
  example: []
  syntax:
    content: >-
      public string Thumbprint

      {

          get;

          set;

      }
    content.vb: Public Property Thumbprint As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings
  langs:
  - csharp
  - vb
  name: StoredCertificateSettings()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.StoredCertificateSettings()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/StoredCertificateSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/StoredCertificateSettings.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the StoredCertificateSettings class.\r\n"
  example: []
  syntax:
    content: public StoredCertificateSettings()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings
  langs:
  - csharp
  - vb
  name: StoredCertificateSettings(String, String)
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.StoredCertificateSettings.StoredCertificateSettings(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/StoredCertificateSettings.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/StoredCertificateSettings.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the StoredCertificateSettings class\r\nwith required arguments.\r\n"
  example: []
  syntax:
    content: public StoredCertificateSettings(string storeName, string thumbprint)
    content.vb: Public Sub New(storeName As String, thumbprint As String)
    parameters:
    - id: storeName
      type: System.String
    - id: thumbprint
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
