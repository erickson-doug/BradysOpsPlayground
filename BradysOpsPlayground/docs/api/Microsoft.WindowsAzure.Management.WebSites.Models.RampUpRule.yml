items:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  commentId: T:Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  id: RampUpRule
  parent: Microsoft.WindowsAzure.Management.WebSites.Models
  children:
  - Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.#ctor
  - Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ActionHostName
  - Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  - Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  - Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeStep
  - Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  - Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  - Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  langs:
  - csharp
  - vb
  name: RampUpRule
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: RampUpRule
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nSpecifies a routing rule which can divert traffic to different site\r\nbased on re-route percentage and host name.and can ramp up/down\r\ntraffic based on metrics based algorithm or based on custom logic\r\nexposed as REST API\r\n"
  example: []
  syntax:
    content: 'public class RampUpRule : RoutingRule'
    content.vb: >-
      Public Class RampUpRule

          Inherits RoutingRule
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Management.WebSites.Models.RoutingRule
  inheritedMembers:
  - Microsoft.WindowsAzure.Management.WebSites.Models.RoutingRule.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ActionHostName
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ActionHostName
  id: ActionHostName
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ActionHostName
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ActionHostName
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ActionHostName
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. A string that contains host name of the other site which\r\nwill take part of the re-reouted traffic\r\n"
  example: []
  syntax:
    content: >-
      public string ActionHostName

      {

          get;

          set;

      }
    content.vb: Public Property ActionHostName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  id: ChangeDecisionCallbackUrl
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ChangeDecisionCallbackUrl
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeDecisionCallbackUrl
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeDecisionCallbackUrl
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. A string that contains callback REST API method to\r\ndetermine change direction and step.This property is optional\r\n"
  example: []
  syntax:
    content: >-
      public string ChangeDecisionCallbackUrl

      {

          get;

          set;

      }
    content.vb: Public Property ChangeDecisionCallbackUrl As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  id: ChangeIntervalInMinutes
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ChangeIntervalInMinutes
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeIntervalInMinutes
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeIntervalInMinutes
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. A number that contains interval in minutes to evaluate\r\nhealth of the re-reouted site and change reoute percentage with\r\nthe step. This property is optional\r\n"
  example: []
  syntax:
    content: >-
      public int ? ChangeIntervalInMinutes

      {

          get;

          set;

      }
    content.vb: Public Property ChangeIntervalInMinutes As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeStep
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeStep
  id: ChangeStep
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ChangeStep
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ChangeStep
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ChangeStep
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. A number that contains reroute percentage change that\r\nwould occur on each interval. This property is optional\r\n"
  example: []
  syntax:
    content: >-
      public double ? ChangeStep

      {

          get;

          set;

      }
    content.vb: Public Property ChangeStep As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  id: MaxReroutePercentage
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: MaxReroutePercentage
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.MaxReroutePercentage
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MaxReroutePercentage
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. A number that contains maximum reeoute percentage.\r\nDefault is 1000. This property is optional\r\n"
  example: []
  syntax:
    content: >-
      public double ? MaxReroutePercentage

      {

          get;

          set;

      }
    content.vb: Public Property MaxReroutePercentage As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  id: MinReroutePercentage
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: MinReroutePercentage
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.MinReroutePercentage
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MinReroutePercentage
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. A number that contains minimum reeoute percentage.\r\nDefault is 0. This property is optional\r\n"
  example: []
  syntax:
    content: >-
      public double ? MinReroutePercentage

      {

          get;

          set;

      }
    content.vb: Public Property MinReroutePercentage As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  commentId: P:Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  id: ReroutePercentage
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: ReroutePercentage
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.ReroutePercentage
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ReroutePercentage
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nOptional. A number that contains percentage of the traffic to be\r\nre-reouted.\r\n"
  example: []
  syntax:
    content: >-
      public double ReroutePercentage

      {

          get;

          set;

      }
    content.vb: Public Property ReroutePercentage As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule
  langs:
  - csharp
  - vb
  name: RampUpRule()
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RampUpRule.RampUpRule()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/WebSite/WebSiteManagement/Generated/Models/RampUpRule.cs
    startLine: 123
  assemblies:
  - Microsoft.WindowsAzure.Management.WebSites
  namespace: Microsoft.WindowsAzure.Management.WebSites.Models
  summary: "\r\nInitializes a new instance of the RampUpRule class.\r\n"
  example: []
  syntax:
    content: public RampUpRule()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.WebSites.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.WebSites.Models
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RoutingRule
  parent: Microsoft.WindowsAzure.Management.WebSites.Models
  isExternal: false
  name: RoutingRule
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RoutingRule
- uid: Microsoft.WindowsAzure.Management.WebSites.Models.RoutingRule.Name
  parent: Microsoft.WindowsAzure.Management.WebSites.Models.RoutingRule
  isExternal: false
  name: Name
  fullName: Microsoft.WindowsAzure.Management.WebSites.Models.RoutingRule.Name
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  fullName: System.Nullable<System.Double>
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  fullName: System.Double
