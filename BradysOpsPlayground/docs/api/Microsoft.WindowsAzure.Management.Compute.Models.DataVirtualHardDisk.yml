items:
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  commentId: T:Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  id: DataVirtualHardDisk
  parent: Microsoft.WindowsAzure.Management.Compute.Models
  children:
  - Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.#ctor
  - Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.HostCaching
  - Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.IOType
  - Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.Label
  - Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.LogicalDiskSizeInGB
  - Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.LogicalUnitNumber
  - Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.MediaLink
  - Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.Name
  - Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.SourceMediaLink
  langs:
  - csharp
  - vb
  name: DataVirtualHardDisk
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: DataVirtualHardDisk
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nObjects that are used to create a data disk for a virtual machine.\r\n"
  example: []
  syntax:
    content: public class DataVirtualHardDisk
    content.vb: Public Class DataVirtualHardDisk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.HostCaching
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.HostCaching
  id: HostCaching
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  langs:
  - csharp
  - vb
  name: HostCaching
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.HostCaching
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HostCaching
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the platform caching behavior of the data disk\r\nblob for read/write efficiency. The default value is ReadOnly.\r\n"
  example: []
  syntax:
    content: >-
      public string HostCaching

      {

          get;

          set;

      }
    content.vb: Public Property HostCaching As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.IOType
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.IOType
  id: IOType
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  langs:
  - csharp
  - vb
  name: IOType
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.IOType
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: IOType
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets the IO type.\r\n"
  example: []
  syntax:
    content: >-
      public string IOType

      {

          get;

          set;

      }
    content.vb: Public Property IOType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.Label
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.Label
  id: Label
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  langs:
  - csharp
  - vb
  name: Label
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.Label
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Label
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the friendly name of the VHD used to create the\r\ndata disk for the virtual machine.\r\n"
  example: []
  syntax:
    content: >-
      public string Label

      {

          get;

          set;

      }
    content.vb: Public Property Label As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.LogicalDiskSizeInGB
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.LogicalDiskSizeInGB
  id: LogicalDiskSizeInGB
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  langs:
  - csharp
  - vb
  name: LogicalDiskSizeInGB
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.LogicalDiskSizeInGB
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LogicalDiskSizeInGB
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the size, in GB, of an empty VHD to be attached\r\nto the virtual machine. The VHD can be created as part of an\r\nattached disk or created as a virtual machine call by specifying\r\nthe value for this property. Azure creates the empty VHD based on\r\nthe size preference and attaches the newly created VHD to the\r\nvirtual machine.\r\n"
  example: []
  syntax:
    content: >-
      public int ? LogicalDiskSizeInGB

      {

          get;

          set;

      }
    content.vb: Public Property LogicalDiskSizeInGB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.LogicalUnitNumber
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.LogicalUnitNumber
  id: LogicalUnitNumber
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  langs:
  - csharp
  - vb
  name: LogicalUnitNumber
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.LogicalUnitNumber
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: LogicalUnitNumber
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the Logical Unit Number (LUN) for the data\r\ndisk. The LUN specifies the slot in which the data drive appears\r\nwhen mounted for usage by the virtual machine. This element is\r\nonly listed when more than one data disk is attached to a virtual\r\nmachine.\r\n"
  example: []
  syntax:
    content: >-
      public int ? LogicalUnitNumber

      {

          get;

          set;

      }
    content.vb: Public Property LogicalUnitNumber As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.MediaLink
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.MediaLink
  id: MediaLink
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  langs:
  - csharp
  - vb
  name: MediaLink
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.MediaLink
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: MediaLink
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
    startLine: 107
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Optional. If the disk that is being added is already\r\nregistered in the subscription or the VHD for the disk already\r\nexists in blob storage, this element is ignored. If a VHD file\r\ndoes not exist in blob storage, this element defines the location\r\nof the new VHD that is created when the new disk is added.Example:\r\nhttp://example.blob.core.windows.net/disks/mydatadisk.vhd\r\n"
  example: []
  syntax:
    content: >-
      public Uri MediaLink

      {

          get;

          set;

      }
    content.vb: Public Property MediaLink As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.Name
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.Name
  id: Name
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  langs:
  - csharp
  - vb
  name: Name
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.Name
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Name
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
    startLine: 119
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Specifies the name of the VHD used to create the data\r\ndisk for the virtual machine.\r\n"
  example: []
  syntax:
    content: >-
      public string Name

      {

          get;

          set;

      }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.SourceMediaLink
  commentId: P:Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.SourceMediaLink
  id: SourceMediaLink
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  langs:
  - csharp
  - vb
  name: SourceMediaLink
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.SourceMediaLink
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SourceMediaLink
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
    startLine: 135
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nOptional. Optional. If the disk that is being added is already\r\nregistered in the subscription or the VHD for the disk does not\r\nexist in blob storage, this element is ignored. If the VHD file\r\nexists in blob storage, this element defines the path to the VHD\r\nand a disk is registered from it and attached to the virtual\r\nmachine.\r\n"
  example: []
  syntax:
    content: >-
      public Uri SourceMediaLink

      {

          get;

          set;

      }
    content.vb: Public Property SourceMediaLink As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.#ctor
  commentId: M:Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk
  langs:
  - csharp
  - vb
  name: DataVirtualHardDisk()
  fullName: Microsoft.WindowsAzure.Management.Compute.Models.DataVirtualHardDisk.DataVirtualHardDisk()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ServiceManagement/Compute/ComputeManagement/Generated/Models/DataVirtualHardDisk.cs
    startLine: 144
  assemblies:
  - Microsoft.WindowsAzure.Management.Compute
  namespace: Microsoft.WindowsAzure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the DataVirtualHardDisk class.\r\n"
  example: []
  syntax:
    content: public DataVirtualHardDisk()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Management.Compute.Models
  isExternal: false
  name: Microsoft.WindowsAzure.Management.Compute.Models
  fullName: Microsoft.WindowsAzure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
