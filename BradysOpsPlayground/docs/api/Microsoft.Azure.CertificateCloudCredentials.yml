items:
- uid: Microsoft.Azure.CertificateCloudCredentials
  commentId: T:Microsoft.Azure.CertificateCloudCredentials
  id: CertificateCloudCredentials
  parent: Microsoft.Azure
  children:
  - Microsoft.Azure.CertificateCloudCredentials.#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.Azure.CertificateCloudCredentials.Create(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Microsoft.Azure.CertificateCloudCredentials.InitializeServiceClient``1(ServiceClient{``0})
  - Microsoft.Azure.CertificateCloudCredentials.ManagementCertificate
  - Microsoft.Azure.CertificateCloudCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - Microsoft.Azure.CertificateCloudCredentials.SubscriptionId
  langs:
  - csharp
  - vb
  name: CertificateCloudCredentials
  fullName: Microsoft.Azure.CertificateCloudCredentials
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: CertificateCloudCredentials
    path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Common.NetFramework
  namespace: Microsoft.Azure
  summary: "\r\nCredentials using a management certificate to authorize requests.\r\n"
  example: []
  syntax:
    content: 'public sealed class CertificateCloudCredentials : SubscriptionCloudCredentials'
    content.vb: >-
      Public NotInheritable Class CertificateCloudCredentials

          Inherits SubscriptionCloudCredentials
  inheritance:
  - System.Object
  - Microsoft.Azure.SubscriptionCloudCredentials
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.CertificateCloudCredentials.SubscriptionId
  commentId: P:Microsoft.Azure.CertificateCloudCredentials.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Azure.CertificateCloudCredentials
  langs:
  - csharp
  - vb
  name: SubscriptionId
  fullName: Microsoft.Azure.CertificateCloudCredentials.SubscriptionId
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SubscriptionId
    path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Common.NetFramework
  namespace: Microsoft.Azure
  summary: "\r\nGets subscription ID which uniquely identifies Microsoft Azure \r\nsubscription. The subscription ID forms part of the URI for \r\nevery call that you make to the Service Management API.\r\n"
  example: []
  syntax:
    content: >-
      public override string SubscriptionId

      {

          get;

      }
    content.vb: Public Overrides ReadOnly Property SubscriptionId As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.Azure.SubscriptionCloudCredentials.SubscriptionId
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.CertificateCloudCredentials.ManagementCertificate
  commentId: P:Microsoft.Azure.CertificateCloudCredentials.ManagementCertificate
  id: ManagementCertificate
  parent: Microsoft.Azure.CertificateCloudCredentials
  langs:
  - csharp
  - vb
  name: ManagementCertificate
  fullName: Microsoft.Azure.CertificateCloudCredentials.ManagementCertificate
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ManagementCertificate
    path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Common.NetFramework
  namespace: Microsoft.Azure
  summary: "\r\nThe Microsoft Azure Service Management API use mutual authentication\r\nof management certificates over SSL to ensure that a request made\r\nto the service is secure. No anonymous requests are allowed.\r\n"
  example: []
  syntax:
    content: >-
      public X509Certificate2 ManagementCertificate

      {

          get;

      }
    content.vb: Public ReadOnly Property ManagementCertificate As X509Certificate2
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.CertificateCloudCredentials.#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.Azure.CertificateCloudCredentials.#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: Microsoft.Azure.CertificateCloudCredentials
  langs:
  - csharp
  - vb
  name: CertificateCloudCredentials(String, X509Certificate2)
  fullName: Microsoft.Azure.CertificateCloudCredentials.CertificateCloudCredentials(System.String, System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Common.NetFramework
  namespace: Microsoft.Azure
  summary: "\r\nInitializes a new instance of the CertificateCloudCredentials\r\nclass.\r\n"
  example: []
  syntax:
    content: public CertificateCloudCredentials(string subscriptionId, X509Certificate2 managementCertificate)
    content.vb: Public Sub New(subscriptionId As String, managementCertificate As X509Certificate2)
    parameters:
    - id: subscriptionId
      type: System.String
      description: The Subscription ID.
    - id: managementCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "\r\nThe management certificate.\r\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.CertificateCloudCredentials.Create(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Microsoft.Azure.CertificateCloudCredentials.Create(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: Create(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Microsoft.Azure.CertificateCloudCredentials
  langs:
  - csharp
  - vb
  name: Create(IDictionary<String, Object>)
  fullName: Microsoft.Azure.CertificateCloudCredentials.Create(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: Create
    path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Common.NetFramework
  namespace: Microsoft.Azure
  summary: "\r\nAttempt to create certificate credentials from a collection of\r\nsettings.\r\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated method. Use public constructor instead.")]

      public static CertificateCloudCredentials Create(IDictionary<string, object> settings)
    content.vb: >-
      <Obsolete("Deprecated method. Use public constructor instead.")>

      Public Shared Function Create(settings As IDictionary(Of String, Object)) As CertificateCloudCredentials
    parameters:
    - id: settings
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: The settings to use.
    return:
      type: Microsoft.Azure.CertificateCloudCredentials
      description: "\r\nCertificateCloudCredentials is created, null otherwise.\r\n"
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated method. Use public constructor instead.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.CertificateCloudCredentials.Create(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: Create(IDictionary(Of String, Object))
- uid: Microsoft.Azure.CertificateCloudCredentials.InitializeServiceClient``1(ServiceClient{``0})
  commentId: M:Microsoft.Azure.CertificateCloudCredentials.InitializeServiceClient``1(ServiceClient{``0})
  id: InitializeServiceClient``1(ServiceClient{``0})
  parent: Microsoft.Azure.CertificateCloudCredentials
  langs:
  - csharp
  - vb
  name: InitializeServiceClient<T>(ServiceClient<T>)
  fullName: Microsoft.Azure.CertificateCloudCredentials.InitializeServiceClient<T>(ServiceClient<T>)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: InitializeServiceClient
    path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Common.NetFramework
  namespace: Microsoft.Azure
  summary: "\r\nInitialize a ServiceClient instance to process credentials.\r\n"
  remarks: "\r\nThis will add a certificate to the shared root WebRequestHandler in\r\nthe ServiceClient's HttpClient handler pipeline.\r\n"
  example: []
  syntax:
    content: public override void InitializeServiceClient<T>(ServiceClient<T> client)
    content.vb: Public Overrides Sub InitializeServiceClient(Of T)(client As ServiceClient(Of T))
    parameters:
    - id: client
      type: ServiceClient{{T}}
      description: The ServiceClient.
    typeParameters:
    - id: T
      description: Type of ServiceClient.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.CertificateCloudCredentials.InitializeServiceClient(Of T)(ServiceClient(Of T))
  name.vb: InitializeServiceClient(Of T)(ServiceClient(Of T))
- uid: Microsoft.Azure.CertificateCloudCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.CertificateCloudCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Microsoft.Azure.CertificateCloudCredentials
  langs:
  - csharp
  - vb
  name: ProcessHttpRequestAsync(HttpRequestMessage, CancellationToken)
  fullName: Microsoft.Azure.CertificateCloudCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ProcessHttpRequestAsync
    path: BradysOpsPlayground/src/Common/Common.NetFramework/CertificateCloudCredentials.cs
    startLine: 136
  assemblies:
  - Microsoft.Azure.Common.NetFramework
  namespace: Microsoft.Azure
  summary: "\r\nApply the credentials to the HTTP request.\r\n"
  example: []
  syntax:
    content: public override Task ProcessHttpRequestAsync(HttpRequestMessage request, CancellationToken cancellationToken)
    content.vb: Public Overrides Function ProcessHttpRequestAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The HTTP request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: "\r\nTask that will complete when processing has completed.\r\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure
  isExternal: false
  name: Microsoft.Azure
  fullName: Microsoft.Azure
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.SubscriptionCloudCredentials
  parent: Microsoft.Azure
  isExternal: false
  name: SubscriptionCloudCredentials
  fullName: Microsoft.Azure.SubscriptionCloudCredentials
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.SubscriptionCloudCredentials.SubscriptionId
  parent: Microsoft.Azure.SubscriptionCloudCredentials
  isExternal: false
  name: SubscriptionId
  fullName: Microsoft.Azure.SubscriptionCloudCredentials.SubscriptionId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.CertificateCloudCredentials
  parent: Microsoft.Azure
  isExternal: false
  name: CertificateCloudCredentials
  fullName: Microsoft.Azure.CertificateCloudCredentials
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ServiceClient{{T}}
  definition: ServiceClient`1
  name: ServiceClient<T>
  fullName: ServiceClient<T>
  fullname.vb: ServiceClient(Of T)
  name.vb: ServiceClient(Of T)
  spec.csharp:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: ServiceClient`1
  isExternal: true
  name: ServiceClient<>
  fullName: ServiceClient<>
  fullname.vb: ServiceClient(Of )
  name.vb: ServiceClient(Of )
  spec.csharp:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: ServiceClient`1
    name: ServiceClient
    fullName: ServiceClient
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
