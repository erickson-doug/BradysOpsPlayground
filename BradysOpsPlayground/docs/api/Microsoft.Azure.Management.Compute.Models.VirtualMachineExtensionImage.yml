items:
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage
  commentId: T:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage
  id: VirtualMachineExtensionImage
  parent: Microsoft.Azure.Management.Compute.Models
  children:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.#ctor
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.ComputeRole
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.HandlerSchema
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.OperatingSystem
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.SupportsMultipleExtensions
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.VMScaleSetEnabled
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionImage
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage
  type: Class
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VirtualMachineExtensionImage
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nDescribes a Virtual Machine Extension Image.\r\n"
  example: []
  syntax:
    content: 'public class VirtualMachineExtensionImage : VirtualMachineImageResource'
    content.vb: >-
      Public Class VirtualMachineExtensionImage

          Inherits VirtualMachineImageResource
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource
  inheritedMembers:
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource.Id
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource.Location
  - Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.ComputeRole
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.ComputeRole
  id: ComputeRole
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage
  langs:
  - csharp
  - vb
  name: ComputeRole
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.ComputeRole
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: ComputeRole
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the type of role (IaaS or PaaS) this\r\nextension supports.\r\n"
  example: []
  syntax:
    content: >-
      public string ComputeRole

      {

          get;

          set;

      }
    content.vb: Public Property ComputeRole As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.HandlerSchema
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.HandlerSchema
  id: HandlerSchema
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage
  langs:
  - csharp
  - vb
  name: HandlerSchema
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.HandlerSchema
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: HandlerSchema
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the schema defined by publisher, where\r\nextension consumers should provide settings in a matching schema.\r\n"
  example: []
  syntax:
    content: >-
      public string HandlerSchema

      {

          get;

          set;

      }
    content.vb: Public Property HandlerSchema As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.OperatingSystem
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.OperatingSystem
  id: OperatingSystem
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage
  langs:
  - csharp
  - vb
  name: OperatingSystem
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.OperatingSystem
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: OperatingSystem
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nRequired. Gets or sets the operating system this extension supports.\r\n"
  example: []
  syntax:
    content: >-
      public string OperatingSystem

      {

          get;

          set;

      }
    content.vb: Public Property OperatingSystem As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.SupportsMultipleExtensions
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.SupportsMultipleExtensions
  id: SupportsMultipleExtensions
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage
  langs:
  - csharp
  - vb
  name: SupportsMultipleExtensions
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.SupportsMultipleExtensions
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: SupportsMultipleExtensions
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets whether the handler can support multiple\r\nextensions.\r\n"
  example: []
  syntax:
    content: >-
      public bool SupportsMultipleExtensions

      {

          get;

          set;

      }
    content.vb: Public Property SupportsMultipleExtensions As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.VMScaleSetEnabled
  commentId: P:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.VMScaleSetEnabled
  id: VMScaleSetEnabled
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage
  langs:
  - csharp
  - vb
  name: VMScaleSetEnabled
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.VMScaleSetEnabled
  type: Property
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: VMScaleSetEnabled
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nOptional. Gets or sets whether the extension can be used on xRP\r\nVMScaleSets.By default existing extensions are usable on\r\nscalesets, but there might be cases where a publisher wants to\r\nexplicitly indicate the extension is only enabled for CRP VMs but\r\nnot VMSS.\r\n"
  example: []
  syntax:
    content: >-
      public bool VMScaleSetEnabled

      {

          get;

          set;

      }
    content.vb: Public Property VMScaleSetEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.#ctor
  commentId: M:Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage
  langs:
  - csharp
  - vb
  name: VirtualMachineExtensionImage()
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineExtensionImage.VirtualMachineExtensionImage()
  type: Constructor
  source:
    remote:
      path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
      branch: master
      repo: https://github.com/bradygaster/BradysOpsPlayground.git
    id: .ctor
    path: BradysOpsPlayground/src/ResourceManagement/Compute/ComputeManagement/Generated/Models/VirtualMachineExtensionImage.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.Compute
  namespace: Microsoft.Azure.Management.Compute.Models
  summary: "\r\nInitializes a new instance of the VirtualMachineExtensionImage\r\nclass.\r\n"
  example: []
  syntax:
    content: public VirtualMachineExtensionImage()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: Microsoft.Azure.Management.Compute.Models
  fullName: Microsoft.Azure.Management.Compute.Models
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource
  parent: Microsoft.Azure.Management.Compute.Models
  isExternal: false
  name: VirtualMachineImageResource
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource.Id
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource
  isExternal: false
  name: Id
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource.Id
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource.Location
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource
  isExternal: false
  name: Location
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource.Location
- uid: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource.Name
  parent: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.Management.Compute.Models.VirtualMachineImageResource.Name
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
